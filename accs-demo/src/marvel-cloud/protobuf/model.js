/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
"use strict";

var $protobuf = require("protobufjs/minimal");

// Common aliases
var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;

// Exported root namespace
var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});

$root.com = (function () {

    /**
     * Namespace com.
     * @exports com
     * @namespace
     */
    var com = {};

    com.taobao = (function () {

        /**
         * Namespace taobao.
         * @memberof com
         * @namespace
         */
        var taobao = {};

        taobao.multimedia = (function () {

            /**
             * Namespace multimedia.
             * @memberof com.taobao
             * @namespace
             */
            var multimedia = {};

            multimedia.biz = (function () {

                /**
                 * Namespace biz.
                 * @memberof com.taobao.multimedia
                 * @namespace
                 */
                var biz = {};

                biz.cloudediting = (function () {

                    /**
                     * Namespace cloudediting.
                     * @memberof com.taobao.multimedia.biz
                     * @namespace
                     */
                    var cloudediting = {};

                    cloudediting.interfaces = (function () {

                        /**
                         * Namespace interfaces.
                         * @memberof com.taobao.multimedia.biz.cloudediting
                         * @namespace
                         */
                        var interfaces = {};

                        interfaces.dto = (function () {

                            /**
                             * Namespace dto.
                             * @memberof com.taobao.multimedia.biz.cloudediting.interfaces
                             * @namespace
                             */
                            var dto = {};

                            dto.proto = (function () {

                                /**
                                 * Namespace proto.
                                 * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto
                                 * @namespace
                                 */
                                var proto = {};

                                proto.ProtoMessage = (function () {

                                    /**
                                     * Properties of a ProtoMessage.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IProtoMessage
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageHeader|null} [msgHeader] ProtoMessage msgHeader
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageContent|null} [msgContent] ProtoMessage msgContent
                                     */

                                    /**
                                     * Constructs a new ProtoMessage.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ProtoMessage.
                                     * @implements IProtoMessage
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProtoMessage=} [properties] Properties to set
                                     */
                                    function ProtoMessage(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ProtoMessage msgHeader.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageHeader|null|undefined} msgHeader
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @instance
                                     */
                                    ProtoMessage.prototype.msgHeader = null;

                                    /**
                                     * ProtoMessage msgContent.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageContent|null|undefined} msgContent
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @instance
                                     */
                                    ProtoMessage.prototype.msgContent = null;

                                    /**
                                     * Creates a new ProtoMessage instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProtoMessage=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage} ProtoMessage instance
                                     */
                                    ProtoMessage.create = function create(properties) {
                                        return new ProtoMessage(properties);
                                    };

                                    /**
                                     * Encodes the specified ProtoMessage message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProtoMessage} message ProtoMessage message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProtoMessage.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.msgHeader != null && Object.hasOwnProperty.call(message, "msgHeader"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader.encode(message.msgHeader, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        if (message.msgContent != null && Object.hasOwnProperty.call(message, "msgContent"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.encode(message.msgContent, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ProtoMessage message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProtoMessage} message ProtoMessage message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProtoMessage.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ProtoMessage message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage} ProtoMessage
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProtoMessage.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.msgHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader.decode(reader, reader.uint32());
                                                    break;
                                                case 2:
                                                    message.msgContent = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.decode(reader, reader.uint32());
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ProtoMessage message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage} ProtoMessage
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProtoMessage.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ProtoMessage message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ProtoMessage.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.msgHeader != null && message.hasOwnProperty("msgHeader")) {
                                            var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader.verify(message.msgHeader);
                                            if (error)
                                                return "msgHeader." + error;
                                        }
                                        if (message.msgContent != null && message.hasOwnProperty("msgContent")) {
                                            var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.verify(message.msgContent);
                                            if (error)
                                                return "msgContent." + error;
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates a ProtoMessage message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage} ProtoMessage
                                     */
                                    ProtoMessage.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage();
                                        if (object.msgHeader != null) {
                                            if (typeof object.msgHeader !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage.msgHeader: object expected");
                                            message.msgHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader.fromObject(object.msgHeader);
                                        }
                                        if (object.msgContent != null) {
                                            if (typeof object.msgContent !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage.msgContent: object expected");
                                            message.msgContent = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.fromObject(object.msgContent);
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a ProtoMessage message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage} message ProtoMessage
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ProtoMessage.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.msgHeader = null;
                                            object.msgContent = null;
                                        }
                                        if (message.msgHeader != null && message.hasOwnProperty("msgHeader"))
                                            object.msgHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader.toObject(message.msgHeader, options);
                                        if (message.msgContent != null && message.hasOwnProperty("msgContent"))
                                            object.msgContent = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.toObject(message.msgContent, options);
                                        return object;
                                    };

                                    /**
                                     * Converts this ProtoMessage to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProtoMessage
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ProtoMessage.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ProtoMessage;
                                })();

                                proto.UserSessionInfo = (function () {

                                    /**
                                     * Properties of a UserSessionInfo.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IUserSessionInfo
                                     * @property {string|null} [sessionId] UserSessionInfo sessionId
                                     * @property {string|null} [userId] UserSessionInfo userId
                                     * @property {string|null} [deviceId] UserSessionInfo deviceId
                                     * @property {string|null} [streamUrl] UserSessionInfo streamUrl
                                     * @property {string|null} [msgUrl] UserSessionInfo msgUrl
                                     */

                                    /**
                                     * Constructs a new UserSessionInfo.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a UserSessionInfo.
                                     * @implements IUserSessionInfo
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IUserSessionInfo=} [properties] Properties to set
                                     */
                                    function UserSessionInfo(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * UserSessionInfo sessionId.
                                     * @member {string} sessionId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @instance
                                     */
                                    UserSessionInfo.prototype.sessionId = "";

                                    /**
                                     * UserSessionInfo userId.
                                     * @member {string} userId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @instance
                                     */
                                    UserSessionInfo.prototype.userId = "";

                                    /**
                                     * UserSessionInfo deviceId.
                                     * @member {string} deviceId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @instance
                                     */
                                    UserSessionInfo.prototype.deviceId = "";

                                    /**
                                     * UserSessionInfo streamUrl.
                                     * @member {string} streamUrl
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @instance
                                     */
                                    UserSessionInfo.prototype.streamUrl = "";

                                    /**
                                     * UserSessionInfo msgUrl.
                                     * @member {string} msgUrl
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @instance
                                     */
                                    UserSessionInfo.prototype.msgUrl = "";

                                    /**
                                     * Creates a new UserSessionInfo instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IUserSessionInfo=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo} UserSessionInfo instance
                                     */
                                    UserSessionInfo.create = function create(properties) {
                                        return new UserSessionInfo(properties);
                                    };

                                    /**
                                     * Encodes the specified UserSessionInfo message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IUserSessionInfo} message UserSessionInfo message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    UserSessionInfo.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.sessionId != null && Object.hasOwnProperty.call(message, "sessionId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sessionId);
                                        if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.userId);
                                        if (message.deviceId != null && Object.hasOwnProperty.call(message, "deviceId"))
                                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.deviceId);
                                        if (message.streamUrl != null && Object.hasOwnProperty.call(message, "streamUrl"))
                                            writer.uint32(/* id 11, wireType 2 =*/90).string(message.streamUrl);
                                        if (message.msgUrl != null && Object.hasOwnProperty.call(message, "msgUrl"))
                                            writer.uint32(/* id 12, wireType 2 =*/98).string(message.msgUrl);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified UserSessionInfo message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IUserSessionInfo} message UserSessionInfo message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    UserSessionInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a UserSessionInfo message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo} UserSessionInfo
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    UserSessionInfo.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.sessionId = reader.string();
                                                    break;
                                                case 2:
                                                    message.userId = reader.string();
                                                    break;
                                                case 3:
                                                    message.deviceId = reader.string();
                                                    break;
                                                case 11:
                                                    message.streamUrl = reader.string();
                                                    break;
                                                case 12:
                                                    message.msgUrl = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a UserSessionInfo message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo} UserSessionInfo
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    UserSessionInfo.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a UserSessionInfo message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    UserSessionInfo.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                            if (!$util.isString(message.sessionId))
                                                return "sessionId: string expected";
                                        if (message.userId != null && message.hasOwnProperty("userId"))
                                            if (!$util.isString(message.userId))
                                                return "userId: string expected";
                                        if (message.deviceId != null && message.hasOwnProperty("deviceId"))
                                            if (!$util.isString(message.deviceId))
                                                return "deviceId: string expected";
                                        if (message.streamUrl != null && message.hasOwnProperty("streamUrl"))
                                            if (!$util.isString(message.streamUrl))
                                                return "streamUrl: string expected";
                                        if (message.msgUrl != null && message.hasOwnProperty("msgUrl"))
                                            if (!$util.isString(message.msgUrl))
                                                return "msgUrl: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a UserSessionInfo message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo} UserSessionInfo
                                     */
                                    UserSessionInfo.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo();
                                        if (object.sessionId != null)
                                            message.sessionId = String(object.sessionId);
                                        if (object.userId != null)
                                            message.userId = String(object.userId);
                                        if (object.deviceId != null)
                                            message.deviceId = String(object.deviceId);
                                        if (object.streamUrl != null)
                                            message.streamUrl = String(object.streamUrl);
                                        if (object.msgUrl != null)
                                            message.msgUrl = String(object.msgUrl);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a UserSessionInfo message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo} message UserSessionInfo
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    UserSessionInfo.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.sessionId = "";
                                            object.userId = "";
                                            object.deviceId = "";
                                            object.streamUrl = "";
                                            object.msgUrl = "";
                                        }
                                        if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                            object.sessionId = message.sessionId;
                                        if (message.userId != null && message.hasOwnProperty("userId"))
                                            object.userId = message.userId;
                                        if (message.deviceId != null && message.hasOwnProperty("deviceId"))
                                            object.deviceId = message.deviceId;
                                        if (message.streamUrl != null && message.hasOwnProperty("streamUrl"))
                                            object.streamUrl = message.streamUrl;
                                        if (message.msgUrl != null && message.hasOwnProperty("msgUrl"))
                                            object.msgUrl = message.msgUrl;
                                        return object;
                                    };

                                    /**
                                     * Converts this UserSessionInfo to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.UserSessionInfo
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    UserSessionInfo.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return UserSessionInfo;
                                })();

                                proto.EnvelopedResult = (function () {

                                    /**
                                     * Properties of an EnvelopedResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEnvelopedResult
                                     * @property {string|null} [userId] EnvelopedResult userId
                                     * @property {string|null} [deviceId] EnvelopedResult deviceId
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IResult|null} [result] EnvelopedResult result
                                     */

                                    /**
                                     * Constructs a new EnvelopedResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EnvelopedResult.
                                     * @implements IEnvelopedResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEnvelopedResult=} [properties] Properties to set
                                     */
                                    function EnvelopedResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EnvelopedResult userId.
                                     * @member {string} userId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @instance
                                     */
                                    EnvelopedResult.prototype.userId = "";

                                    /**
                                     * EnvelopedResult deviceId.
                                     * @member {string} deviceId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @instance
                                     */
                                    EnvelopedResult.prototype.deviceId = "";

                                    /**
                                     * EnvelopedResult result.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IResult|null|undefined} result
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @instance
                                     */
                                    EnvelopedResult.prototype.result = null;

                                    /**
                                     * Creates a new EnvelopedResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEnvelopedResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult} EnvelopedResult instance
                                     */
                                    EnvelopedResult.create = function create(properties) {
                                        return new EnvelopedResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EnvelopedResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEnvelopedResult} message EnvelopedResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EnvelopedResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);
                                        if (message.deviceId != null && Object.hasOwnProperty.call(message, "deviceId"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.deviceId);
                                        if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.encode(message.result, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EnvelopedResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEnvelopedResult} message EnvelopedResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EnvelopedResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EnvelopedResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult} EnvelopedResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EnvelopedResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.userId = reader.string();
                                                    break;
                                                case 2:
                                                    message.deviceId = reader.string();
                                                    break;
                                                case 3:
                                                    message.result = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.decode(reader, reader.uint32());
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EnvelopedResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult} EnvelopedResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EnvelopedResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EnvelopedResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EnvelopedResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.userId != null && message.hasOwnProperty("userId"))
                                            if (!$util.isString(message.userId))
                                                return "userId: string expected";
                                        if (message.deviceId != null && message.hasOwnProperty("deviceId"))
                                            if (!$util.isString(message.deviceId))
                                                return "deviceId: string expected";
                                        if (message.result != null && message.hasOwnProperty("result")) {
                                            var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.verify(message.result);
                                            if (error)
                                                return "result." + error;
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates an EnvelopedResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult} EnvelopedResult
                                     */
                                    EnvelopedResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult();
                                        if (object.userId != null)
                                            message.userId = String(object.userId);
                                        if (object.deviceId != null)
                                            message.deviceId = String(object.deviceId);
                                        if (object.result != null) {
                                            if (typeof object.result !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult.result: object expected");
                                            message.result = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.fromObject(object.result);
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EnvelopedResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult} message EnvelopedResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EnvelopedResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.userId = "";
                                            object.deviceId = "";
                                            object.result = null;
                                        }
                                        if (message.userId != null && message.hasOwnProperty("userId"))
                                            object.userId = message.userId;
                                        if (message.deviceId != null && message.hasOwnProperty("deviceId"))
                                            object.deviceId = message.deviceId;
                                        if (message.result != null && message.hasOwnProperty("result"))
                                            object.result = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.toObject(message.result, options);
                                        return object;
                                    };

                                    /**
                                     * Converts this EnvelopedResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EnvelopedResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EnvelopedResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EnvelopedResult;
                                })();

                                proto.MessageHeader = (function () {

                                    /**
                                     * Properties of a MessageHeader.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IMessageHeader
                                     * @property {number|null} [protoVer] MessageHeader protoVer
                                     * @property {string|null} [sessionId] MessageHeader sessionId
                                     * @property {string|null} [userId] MessageHeader userId
                                     */

                                    /**
                                     * Constructs a new MessageHeader.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a MessageHeader.
                                     * @implements IMessageHeader
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageHeader=} [properties] Properties to set
                                     */
                                    function MessageHeader(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * MessageHeader protoVer.
                                     * @member {number} protoVer
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @instance
                                     */
                                    MessageHeader.prototype.protoVer = 0;

                                    /**
                                     * MessageHeader sessionId.
                                     * @member {string} sessionId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @instance
                                     */
                                    MessageHeader.prototype.sessionId = "";

                                    /**
                                     * MessageHeader userId.
                                     * @member {string} userId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @instance
                                     */
                                    MessageHeader.prototype.userId = "";

                                    /**
                                     * Creates a new MessageHeader instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageHeader=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader} MessageHeader instance
                                     */
                                    MessageHeader.create = function create(properties) {
                                        return new MessageHeader(properties);
                                    };

                                    /**
                                     * Encodes the specified MessageHeader message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageHeader} message MessageHeader message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    MessageHeader.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.protoVer != null && Object.hasOwnProperty.call(message, "protoVer"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.protoVer);
                                        if (message.sessionId != null && Object.hasOwnProperty.call(message, "sessionId"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sessionId);
                                        if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.userId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified MessageHeader message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageHeader} message MessageHeader message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    MessageHeader.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a MessageHeader message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader} MessageHeader
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    MessageHeader.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.protoVer = reader.uint32();
                                                    break;
                                                case 2:
                                                    message.sessionId = reader.string();
                                                    break;
                                                case 3:
                                                    message.userId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a MessageHeader message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader} MessageHeader
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    MessageHeader.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a MessageHeader message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    MessageHeader.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.protoVer != null && message.hasOwnProperty("protoVer"))
                                            if (!$util.isInteger(message.protoVer))
                                                return "protoVer: integer expected";
                                        if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                            if (!$util.isString(message.sessionId))
                                                return "sessionId: string expected";
                                        if (message.userId != null && message.hasOwnProperty("userId"))
                                            if (!$util.isString(message.userId))
                                                return "userId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a MessageHeader message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader} MessageHeader
                                     */
                                    MessageHeader.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader();
                                        if (object.protoVer != null)
                                            message.protoVer = object.protoVer >>> 0;
                                        if (object.sessionId != null)
                                            message.sessionId = String(object.sessionId);
                                        if (object.userId != null)
                                            message.userId = String(object.userId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a MessageHeader message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader} message MessageHeader
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    MessageHeader.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.protoVer = 0;
                                            object.sessionId = "";
                                            object.userId = "";
                                        }
                                        if (message.protoVer != null && message.hasOwnProperty("protoVer"))
                                            object.protoVer = message.protoVer;
                                        if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                            object.sessionId = message.sessionId;
                                        if (message.userId != null && message.hasOwnProperty("userId"))
                                            object.userId = message.userId;
                                        return object;
                                    };

                                    /**
                                     * Converts this MessageHeader to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageHeader
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    MessageHeader.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return MessageHeader;
                                })();

                                proto.MessageContent = (function () {

                                    /**
                                     * Properties of a MessageContent.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IMessageContent
                                     * @property {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommand>|null} [reqList] MessageContent reqList
                                     * @property {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IResult>|null} [rspList] MessageContent rspList
                                     */

                                    /**
                                     * Constructs a new MessageContent.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a MessageContent.
                                     * @implements IMessageContent
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageContent=} [properties] Properties to set
                                     */
                                    function MessageContent(properties) {
                                        this.reqList = [];
                                        this.rspList = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * MessageContent reqList.
                                     * @member {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommand>} reqList
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @instance
                                     */
                                    MessageContent.prototype.reqList = $util.emptyArray;

                                    /**
                                     * MessageContent rspList.
                                     * @member {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IResult>} rspList
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @instance
                                     */
                                    MessageContent.prototype.rspList = $util.emptyArray;

                                    /**
                                     * Creates a new MessageContent instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageContent=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent} MessageContent instance
                                     */
                                    MessageContent.create = function create(properties) {
                                        return new MessageContent(properties);
                                    };

                                    /**
                                     * Encodes the specified MessageContent message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageContent} message MessageContent message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    MessageContent.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.reqList != null && message.reqList.length)
                                            for (var i = 0; i < message.reqList.length; ++i)
                                                $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.encode(message.reqList[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        if (message.rspList != null && message.rspList.length)
                                            for (var i = 0; i < message.rspList.length; ++i)
                                                $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.encode(message.rspList[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified MessageContent message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IMessageContent} message MessageContent message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    MessageContent.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a MessageContent message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent} MessageContent
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    MessageContent.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    if (!(message.reqList && message.reqList.length))
                                                        message.reqList = [];
                                                    message.reqList.push($root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.decode(reader, reader.uint32()));
                                                    break;
                                                case 2:
                                                    if (!(message.rspList && message.rspList.length))
                                                        message.rspList = [];
                                                    message.rspList.push($root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.decode(reader, reader.uint32()));
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a MessageContent message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent} MessageContent
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    MessageContent.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a MessageContent message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    MessageContent.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.reqList != null && message.hasOwnProperty("reqList")) {
                                            if (!Array.isArray(message.reqList))
                                                return "reqList: array expected";
                                            for (var i = 0; i < message.reqList.length; ++i) {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.verify(message.reqList[i]);
                                                if (error)
                                                    return "reqList." + error;
                                            }
                                        }
                                        if (message.rspList != null && message.hasOwnProperty("rspList")) {
                                            if (!Array.isArray(message.rspList))
                                                return "rspList: array expected";
                                            for (var i = 0; i < message.rspList.length; ++i) {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.verify(message.rspList[i]);
                                                if (error)
                                                    return "rspList." + error;
                                            }
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates a MessageContent message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent} MessageContent
                                     */
                                    MessageContent.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent();
                                        if (object.reqList) {
                                            if (!Array.isArray(object.reqList))
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.reqList: array expected");
                                            message.reqList = [];
                                            for (var i = 0; i < object.reqList.length; ++i) {
                                                if (typeof object.reqList[i] !== "object")
                                                    throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.reqList: object expected");
                                                message.reqList[i] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.fromObject(object.reqList[i]);
                                            }
                                        }
                                        if (object.rspList) {
                                            if (!Array.isArray(object.rspList))
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.rspList: array expected");
                                            message.rspList = [];
                                            for (var i = 0; i < object.rspList.length; ++i) {
                                                if (typeof object.rspList[i] !== "object")
                                                    throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent.rspList: object expected");
                                                message.rspList[i] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.fromObject(object.rspList[i]);
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a MessageContent message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent} message MessageContent
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    MessageContent.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults) {
                                            object.reqList = [];
                                            object.rspList = [];
                                        }
                                        if (message.reqList && message.reqList.length) {
                                            object.reqList = [];
                                            for (var j = 0; j < message.reqList.length; ++j)
                                                object.reqList[j] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.toObject(message.reqList[j], options);
                                        }
                                        if (message.rspList && message.rspList.length) {
                                            object.rspList = [];
                                            for (var j = 0; j < message.rspList.length; ++j)
                                                object.rspList[j] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.toObject(message.rspList[j], options);
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this MessageContent to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MessageContent
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    MessageContent.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return MessageContent;
                                })();

                                proto.CommandHeader = (function () {

                                    /**
                                     * Properties of a CommandHeader.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ICommandHeader
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.CHANNEL_ID|null} [channelId] CommandHeader channelId
                                     * @property {number|Long|null} [seqId] CommandHeader seqId
                                     */

                                    /**
                                     * Constructs a new CommandHeader.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a CommandHeader.
                                     * @implements ICommandHeader
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader=} [properties] Properties to set
                                     */
                                    function CommandHeader(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * CommandHeader channelId.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.CHANNEL_ID} channelId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @instance
                                     */
                                    CommandHeader.prototype.channelId = 0;

                                    /**
                                     * CommandHeader seqId.
                                     * @member {number|Long} seqId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @instance
                                     */
                                    CommandHeader.prototype.seqId = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;

                                    /**
                                     * Creates a new CommandHeader instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader} CommandHeader instance
                                     */
                                    CommandHeader.create = function create(properties) {
                                        return new CommandHeader(properties);
                                    };

                                    /**
                                     * Encodes the specified CommandHeader message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader} message CommandHeader message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    CommandHeader.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.channelId != null && Object.hasOwnProperty.call(message, "channelId"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.channelId);
                                        if (message.seqId != null && Object.hasOwnProperty.call(message, "seqId"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.seqId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified CommandHeader message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader} message CommandHeader message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    CommandHeader.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a CommandHeader message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader} CommandHeader
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    CommandHeader.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.channelId = reader.int32();
                                                    break;
                                                case 2:
                                                    message.seqId = reader.uint64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a CommandHeader message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader} CommandHeader
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    CommandHeader.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a CommandHeader message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    CommandHeader.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.channelId != null && message.hasOwnProperty("channelId"))
                                            switch (message.channelId) {
                                                default:
                                                    return "channelId: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                    break;
                                            }
                                        if (message.seqId != null && message.hasOwnProperty("seqId"))
                                            if (!$util.isInteger(message.seqId) && !(message.seqId && $util.isInteger(message.seqId.low) && $util.isInteger(message.seqId.high)))
                                                return "seqId: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a CommandHeader message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader} CommandHeader
                                     */
                                    CommandHeader.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader();
                                        switch (object.channelId) {
                                            case "CHANNEL_UNDEFINED":
                                            case 0:
                                                message.channelId = 0;
                                                break;
                                            case "CHANNEL_EXECUTE_IN_ORDER":
                                            case 1:
                                                message.channelId = 1;
                                                break;
                                            case "CHANNEL_EXECUTE_RANDOMLY":
                                            case 2:
                                                message.channelId = 2;
                                                break;
                                        }
                                        if (object.seqId != null)
                                            if ($util.Long)
                                                (message.seqId = $util.Long.fromValue(object.seqId)).unsigned = true;
                                            else if (typeof object.seqId === "string")
                                                message.seqId = parseInt(object.seqId, 10);
                                            else if (typeof object.seqId === "number")
                                                message.seqId = object.seqId;
                                            else if (typeof object.seqId === "object")
                                                message.seqId = new $util.LongBits(object.seqId.low >>> 0, object.seqId.high >>> 0).toNumber(true);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a CommandHeader message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader} message CommandHeader
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    CommandHeader.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.channelId = options.enums === String ? "CHANNEL_UNDEFINED" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, true);
                                                object.seqId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.seqId = options.longs === String ? "0" : 0;
                                        }
                                        if (message.channelId != null && message.hasOwnProperty("channelId"))
                                            object.channelId = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.CHANNEL_ID[message.channelId] : message.channelId;
                                        if (message.seqId != null && message.hasOwnProperty("seqId"))
                                            if (typeof message.seqId === "number")
                                                object.seqId = options.longs === String ? String(message.seqId) : message.seqId;
                                            else
                                                object.seqId = options.longs === String ? $util.Long.prototype.toString.call(message.seqId) : options.longs === Number ? new $util.LongBits(message.seqId.low >>> 0, message.seqId.high >>> 0).toNumber(true) : message.seqId;
                                        return object;
                                    };

                                    /**
                                     * Converts this CommandHeader to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    CommandHeader.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    /**
                                     * CHANNEL_ID enum.
                                     * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.CHANNEL_ID
                                     * @enum {number}
                                     * @property {number} CHANNEL_UNDEFINED=0 CHANNEL_UNDEFINED value
                                     * @property {number} CHANNEL_EXECUTE_IN_ORDER=1 CHANNEL_EXECUTE_IN_ORDER value
                                     * @property {number} CHANNEL_EXECUTE_RANDOMLY=2 CHANNEL_EXECUTE_RANDOMLY value
                                     */
                                    CommandHeader.CHANNEL_ID = (function () {
                                        var valuesById = {}, values = Object.create(valuesById);
                                        values[valuesById[0] = "CHANNEL_UNDEFINED"] = 0;
                                        values[valuesById[1] = "CHANNEL_EXECUTE_IN_ORDER"] = 1;
                                        values[valuesById[2] = "CHANNEL_EXECUTE_RANDOMLY"] = 2;
                                        return values;
                                    })();

                                    return CommandHeader;
                                })();

                                proto.Command = (function () {

                                    /**
                                     * Properties of a Command.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ICommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader|null} [commandHeader] Command commandHeader
                                     * @property {boolean|null} [forceResp] Command forceResp
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISystemRequireResendCommand|null} [SystemRequireResendCommand] system management,network etc. 100~199
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommand|null} [sessionCreateNewCommand] session management,200~299
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCCommand|null} [sessionPrepareRTCCommand] Command sessionPrepareRTCCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionBeginCommand|null} [sessionBeginCommand] Command sessionBeginCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionKeepaliveCommand|null} [sessionKeepaliveCommand] Command sessionKeepaliveCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionEndCurrentCommand|null} [sessionEndCurrentCommand] Command sessionEndCurrentCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionInvalidCurrentCommand|null} [sessionInvalidCurrentCommand] Command sessionInvalidCurrentCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectLoadCommand|null} [projectLoadCommand] project related, 2000~ 2999 *
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectSaveCommand|null} [projectSaveCommand] Command projectSaveCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectNewCommand|null} [projectNewCommand] Command projectNewCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectCloseCommand|null} [projectCloseCommand] Command projectCloseCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorUndoCommand|null} [editorUndoCommand] editor related, 3000~ 3999 *
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRedoCommand|null} [editorRedoCommand] Command editorRedoCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommand|null} [editorGetStackSizeCommand] Command editorGetStackSizeCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetCanvasPropertiesCommand|null} [editorSetCanvasPropertiesCommand] Command editorSetCanvasPropertiesCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommand|null} [editorGetCanvasPropertiesCommand] Command editorGetCanvasPropertiesCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommand|null} [editorAddMainClipCommand] Command editorAddMainClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommand|null} [editorAddLookupClipCommand] Command editorAddLookupClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommand|null} [editorAddPipClipCommand] Command editorAddPipClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommand|null} [editorAddMusicClipCommand] Command editorAddMusicClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommand|null} [editorAddTextClipCommand] Command editorAddTextClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommand|null} [editorAddStickerClipCommand] Command editorAddStickerClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommand|null} [editorAddExtensionClipCommand] Command editorAddExtensionClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorChangeClipResourceCommand|null} [editorChangeClipResourceCommand] Command editorChangeClipResourceCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommand|null} [editorSplitClipCommand] Command editorSplitClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteClipCommand|null} [editorDeleteClipCommand] Command editorDeleteClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorMoveClipCommand|null} [editorMoveClipCommand] Command editorMoveClipCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTrackCommand|null} [editorRemoveTrackCommand] Command editorRemoveTrackCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipLookupCommand|null} [editorSetClipLookupCommand] Command editorSetClipLookupCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionDurationUsCommand|null} [editorSetTransitionDurationUsCommand] Command editorSetTransitionDurationUsCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTransitionCommand|null} [editorRemoveTransitionCommand] Command editorRemoveTransitionCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCropCommand|null} [editorSetClipCropCommand] Command editorSetClipCropCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundCommand|null} [editorSetClipCanvasBackgroundCommand] Command editorSetClipCanvasBackgroundCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundResCommand|null} [editorSetClipCanvasBackgroundResCommand] Command editorSetClipCanvasBackgroundResCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundBlurTypeCommand|null} [editorSetClipCanvasBackgroundBlurTypeCommand] Command editorSetClipCanvasBackgroundBlurTypeCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteMaterialCommand|null} [editorDeleteMaterialCommand] Command editorDeleteMaterialCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorCheckToAddMaterialCommand|null} [editorCheckToAddMaterialCommand] Command editorCheckToAddMaterialCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionEffectCommand|null} [editorSetTransitionEffectCommand] Command editorSetTransitionEffectCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourcePropertiesCommand|null} [editorSetResourcePropertiesCommand] Command editorSetResourcePropertiesCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommand|null} [editorGetResourceDurationUsCommand] Command editorGetResourceDurationUsCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommand|null} [editorGetResourceSizeCommand] Command editorGetResourceSizeCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommand|null} [editorGetClipResourceInfoCommand] Command editorGetClipResourceInfoCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourceFullKeyFrameWithResIdCommand|null} [editorSetResourceFullKeyFrameWithResIdCommand] Command editorSetResourceFullKeyFrameWithResIdCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextCommand|null} [editorSetTextCommand] Command editorSetTextCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextColorCommand|null} [editorSetTextColorCommand] Command editorSetTextColorCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextFontCommand|null} [editorSetTextFontCommand] Command editorSetTextFontCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetDefaultFontFileCommand|null} [editorSetDefaultFontFileCommand] Command editorSetDefaultFontFileCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextShadowCommand|null} [editorSetTextShadowCommand] Command editorSetTextShadowCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextAlignmentCommand|null} [editorSetTextAlignmentCommand] Command editorSetTextAlignmentCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextOutlineCommand|null} [editorSetTextOutlineCommand] Command editorSetTextOutlineCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextUnderlineCommand|null} [editorSetTextUnderlineCommand] Command editorSetTextUnderlineCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextBoldCommand|null} [editorSetTextBoldCommand] Command editorSetTextBoldCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextItalicsCommand|null} [editorSetTextItalicsCommand] Command editorSetTextItalicsCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextWordSpaceCommand|null} [editorSetTextWordSpaceCommand] Command editorSetTextWordSpaceCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetScaleCommand|null} [editorSetScaleCommand] Command editorSetScaleCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetPositionCommand|null} [editorSetPositionCommand] Command editorSetPositionCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetAnchorCommand|null} [editorSetAnchorCommand] Command editorSetAnchorCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetRotationCommand|null} [editorSetRotationCommand] Command editorSetRotationCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipStartTimeUsCommand|null} [editorSetClipStartTimeUsCommand] Command editorSetClipStartTimeUsCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetSourceTimeRangeCommand|null} [editorSetSourceTimeRangeCommand] Command editorSetSourceTimeRangeCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipSpeedCommand|null} [editorSetClipSpeedCommand] Command editorSetClipSpeedCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipVolumeCommand|null} [editorSetClipVolumeCommand] Command editorSetClipVolumeCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListCommand|null} [editorGetClipPropListCommand] Command editorGetClipPropListCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipPropListCommand|null} [editorSetClipPropListCommand] Command editorSetClipPropListCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommand|null} [editorGetTrackIdListCommand] Command editorGetTrackIdListCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommand|null} [editorGetClipIdListCommand] Command editorGetClipIdListCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSetPropertiesCommand|null} [viewerSetPropertiesCommand] viewer related, 4000~ 4999 *
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPrepareCommand|null} [viewerPrepareCommand] Command viewerPrepareCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStartCommand|null} [viewerStartCommand] Command viewerStartCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPauseCommand|null} [viewerPauseCommand] Command viewerPauseCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStopCommand|null} [viewerStopCommand] Command viewerStopCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSeekToCommand|null} [viewerSeekToCommand] Command viewerSeekToCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommand|null} [viewerGetStateCommand] Command viewerGetStateCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommand|null} [viewerGetDurationUsCommand] Command viewerGetDurationUsCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommand|null} [exporterRunCommand] exporter related, 5000~ 5999 *
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterCancelCommand|null} [exporterCancelCommand] Command exporterCancelCommand
                                     */

                                    /**
                                     * Constructs a new Command.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a Command.
                                     * @implements ICommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommand=} [properties] Properties to set
                                     */
                                    function Command(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Command commandHeader.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader|null|undefined} commandHeader
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.commandHeader = null;

                                    /**
                                     * Command forceResp.
                                     * @member {boolean} forceResp
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.forceResp = false;

                                    /**
                                     * system management,network etc. 100~199
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISystemRequireResendCommand|null|undefined} SystemRequireResendCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.SystemRequireResendCommand = null;

                                    /**
                                     * session management,200~299
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommand|null|undefined} sessionCreateNewCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.sessionCreateNewCommand = null;

                                    /**
                                     * Command sessionPrepareRTCCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCCommand|null|undefined} sessionPrepareRTCCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.sessionPrepareRTCCommand = null;

                                    /**
                                     * Command sessionBeginCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionBeginCommand|null|undefined} sessionBeginCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.sessionBeginCommand = null;

                                    /**
                                     * Command sessionKeepaliveCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionKeepaliveCommand|null|undefined} sessionKeepaliveCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.sessionKeepaliveCommand = null;

                                    /**
                                     * Command sessionEndCurrentCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionEndCurrentCommand|null|undefined} sessionEndCurrentCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.sessionEndCurrentCommand = null;

                                    /**
                                     * Command sessionInvalidCurrentCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionInvalidCurrentCommand|null|undefined} sessionInvalidCurrentCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.sessionInvalidCurrentCommand = null;

                                    /**
                                     * project related, 2000~ 2999 *
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectLoadCommand|null|undefined} projectLoadCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.projectLoadCommand = null;

                                    /**
                                     * Command projectSaveCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectSaveCommand|null|undefined} projectSaveCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.projectSaveCommand = null;

                                    /**
                                     * Command projectNewCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectNewCommand|null|undefined} projectNewCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.projectNewCommand = null;

                                    /**
                                     * Command projectCloseCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectCloseCommand|null|undefined} projectCloseCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.projectCloseCommand = null;

                                    /**
                                     * editor related, 3000~ 3999 *
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorUndoCommand|null|undefined} editorUndoCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorUndoCommand = null;

                                    /**
                                     * Command editorRedoCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRedoCommand|null|undefined} editorRedoCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorRedoCommand = null;

                                    /**
                                     * Command editorGetStackSizeCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommand|null|undefined} editorGetStackSizeCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorGetStackSizeCommand = null;

                                    /**
                                     * Command editorSetCanvasPropertiesCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetCanvasPropertiesCommand|null|undefined} editorSetCanvasPropertiesCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetCanvasPropertiesCommand = null;

                                    /**
                                     * Command editorGetCanvasPropertiesCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommand|null|undefined} editorGetCanvasPropertiesCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorGetCanvasPropertiesCommand = null;

                                    /**
                                     * Command editorAddMainClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommand|null|undefined} editorAddMainClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorAddMainClipCommand = null;

                                    /**
                                     * Command editorAddLookupClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommand|null|undefined} editorAddLookupClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorAddLookupClipCommand = null;

                                    /**
                                     * Command editorAddPipClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommand|null|undefined} editorAddPipClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorAddPipClipCommand = null;

                                    /**
                                     * Command editorAddMusicClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommand|null|undefined} editorAddMusicClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorAddMusicClipCommand = null;

                                    /**
                                     * Command editorAddTextClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommand|null|undefined} editorAddTextClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorAddTextClipCommand = null;

                                    /**
                                     * Command editorAddStickerClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommand|null|undefined} editorAddStickerClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorAddStickerClipCommand = null;

                                    /**
                                     * Command editorAddExtensionClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommand|null|undefined} editorAddExtensionClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorAddExtensionClipCommand = null;

                                    /**
                                     * Command editorChangeClipResourceCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorChangeClipResourceCommand|null|undefined} editorChangeClipResourceCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorChangeClipResourceCommand = null;

                                    /**
                                     * Command editorSplitClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommand|null|undefined} editorSplitClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSplitClipCommand = null;

                                    /**
                                     * Command editorDeleteClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteClipCommand|null|undefined} editorDeleteClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorDeleteClipCommand = null;

                                    /**
                                     * Command editorMoveClipCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorMoveClipCommand|null|undefined} editorMoveClipCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorMoveClipCommand = null;

                                    /**
                                     * Command editorRemoveTrackCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTrackCommand|null|undefined} editorRemoveTrackCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorRemoveTrackCommand = null;

                                    /**
                                     * Command editorSetClipLookupCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipLookupCommand|null|undefined} editorSetClipLookupCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetClipLookupCommand = null;

                                    /**
                                     * Command editorSetTransitionDurationUsCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionDurationUsCommand|null|undefined} editorSetTransitionDurationUsCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTransitionDurationUsCommand = null;

                                    /**
                                     * Command editorRemoveTransitionCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTransitionCommand|null|undefined} editorRemoveTransitionCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorRemoveTransitionCommand = null;

                                    /**
                                     * Command editorSetClipCropCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCropCommand|null|undefined} editorSetClipCropCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetClipCropCommand = null;

                                    /**
                                     * Command editorSetClipCanvasBackgroundCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundCommand|null|undefined} editorSetClipCanvasBackgroundCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetClipCanvasBackgroundCommand = null;

                                    /**
                                     * Command editorSetClipCanvasBackgroundResCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundResCommand|null|undefined} editorSetClipCanvasBackgroundResCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetClipCanvasBackgroundResCommand = null;

                                    /**
                                     * Command editorSetClipCanvasBackgroundBlurTypeCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundBlurTypeCommand|null|undefined} editorSetClipCanvasBackgroundBlurTypeCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetClipCanvasBackgroundBlurTypeCommand = null;

                                    /**
                                     * Command editorDeleteMaterialCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteMaterialCommand|null|undefined} editorDeleteMaterialCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorDeleteMaterialCommand = null;

                                    /**
                                     * Command editorCheckToAddMaterialCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorCheckToAddMaterialCommand|null|undefined} editorCheckToAddMaterialCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorCheckToAddMaterialCommand = null;

                                    /**
                                     * Command editorSetTransitionEffectCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionEffectCommand|null|undefined} editorSetTransitionEffectCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTransitionEffectCommand = null;

                                    /**
                                     * Command editorSetResourcePropertiesCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourcePropertiesCommand|null|undefined} editorSetResourcePropertiesCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetResourcePropertiesCommand = null;

                                    /**
                                     * Command editorGetResourceDurationUsCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommand|null|undefined} editorGetResourceDurationUsCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorGetResourceDurationUsCommand = null;

                                    /**
                                     * Command editorGetResourceSizeCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommand|null|undefined} editorGetResourceSizeCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorGetResourceSizeCommand = null;

                                    /**
                                     * Command editorGetClipResourceInfoCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommand|null|undefined} editorGetClipResourceInfoCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorGetClipResourceInfoCommand = null;

                                    /**
                                     * Command editorSetResourceFullKeyFrameWithResIdCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourceFullKeyFrameWithResIdCommand|null|undefined} editorSetResourceFullKeyFrameWithResIdCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetResourceFullKeyFrameWithResIdCommand = null;

                                    /**
                                     * Command editorSetTextCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextCommand|null|undefined} editorSetTextCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextCommand = null;

                                    /**
                                     * Command editorSetTextColorCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextColorCommand|null|undefined} editorSetTextColorCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextColorCommand = null;

                                    /**
                                     * Command editorSetTextFontCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextFontCommand|null|undefined} editorSetTextFontCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextFontCommand = null;

                                    /**
                                     * Command editorSetDefaultFontFileCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetDefaultFontFileCommand|null|undefined} editorSetDefaultFontFileCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetDefaultFontFileCommand = null;

                                    /**
                                     * Command editorSetTextShadowCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextShadowCommand|null|undefined} editorSetTextShadowCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextShadowCommand = null;

                                    /**
                                     * Command editorSetTextAlignmentCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextAlignmentCommand|null|undefined} editorSetTextAlignmentCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextAlignmentCommand = null;

                                    /**
                                     * Command editorSetTextOutlineCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextOutlineCommand|null|undefined} editorSetTextOutlineCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextOutlineCommand = null;

                                    /**
                                     * Command editorSetTextUnderlineCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextUnderlineCommand|null|undefined} editorSetTextUnderlineCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextUnderlineCommand = null;

                                    /**
                                     * Command editorSetTextBoldCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextBoldCommand|null|undefined} editorSetTextBoldCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextBoldCommand = null;

                                    /**
                                     * Command editorSetTextItalicsCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextItalicsCommand|null|undefined} editorSetTextItalicsCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextItalicsCommand = null;

                                    /**
                                     * Command editorSetTextWordSpaceCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextWordSpaceCommand|null|undefined} editorSetTextWordSpaceCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetTextWordSpaceCommand = null;

                                    /**
                                     * Command editorSetScaleCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetScaleCommand|null|undefined} editorSetScaleCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetScaleCommand = null;

                                    /**
                                     * Command editorSetPositionCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetPositionCommand|null|undefined} editorSetPositionCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetPositionCommand = null;

                                    /**
                                     * Command editorSetAnchorCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetAnchorCommand|null|undefined} editorSetAnchorCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetAnchorCommand = null;

                                    /**
                                     * Command editorSetRotationCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetRotationCommand|null|undefined} editorSetRotationCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetRotationCommand = null;

                                    /**
                                     * Command editorSetClipStartTimeUsCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipStartTimeUsCommand|null|undefined} editorSetClipStartTimeUsCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetClipStartTimeUsCommand = null;

                                    /**
                                     * Command editorSetSourceTimeRangeCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetSourceTimeRangeCommand|null|undefined} editorSetSourceTimeRangeCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetSourceTimeRangeCommand = null;

                                    /**
                                     * Command editorSetClipSpeedCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipSpeedCommand|null|undefined} editorSetClipSpeedCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetClipSpeedCommand = null;

                                    /**
                                     * Command editorSetClipVolumeCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipVolumeCommand|null|undefined} editorSetClipVolumeCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetClipVolumeCommand = null;

                                    /**
                                     * Command editorGetClipPropListCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListCommand|null|undefined} editorGetClipPropListCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorGetClipPropListCommand = null;

                                    /**
                                     * Command editorSetClipPropListCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipPropListCommand|null|undefined} editorSetClipPropListCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorSetClipPropListCommand = null;

                                    /**
                                     * Command editorGetTrackIdListCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommand|null|undefined} editorGetTrackIdListCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorGetTrackIdListCommand = null;

                                    /**
                                     * Command editorGetClipIdListCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommand|null|undefined} editorGetClipIdListCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.editorGetClipIdListCommand = null;

                                    /**
                                     * viewer related, 4000~ 4999 *
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSetPropertiesCommand|null|undefined} viewerSetPropertiesCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.viewerSetPropertiesCommand = null;

                                    /**
                                     * Command viewerPrepareCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPrepareCommand|null|undefined} viewerPrepareCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.viewerPrepareCommand = null;

                                    /**
                                     * Command viewerStartCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStartCommand|null|undefined} viewerStartCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.viewerStartCommand = null;

                                    /**
                                     * Command viewerPauseCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPauseCommand|null|undefined} viewerPauseCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.viewerPauseCommand = null;

                                    /**
                                     * Command viewerStopCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStopCommand|null|undefined} viewerStopCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.viewerStopCommand = null;

                                    /**
                                     * Command viewerSeekToCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSeekToCommand|null|undefined} viewerSeekToCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.viewerSeekToCommand = null;

                                    /**
                                     * Command viewerGetStateCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommand|null|undefined} viewerGetStateCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.viewerGetStateCommand = null;

                                    /**
                                     * Command viewerGetDurationUsCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommand|null|undefined} viewerGetDurationUsCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.viewerGetDurationUsCommand = null;

                                    /**
                                     * exporter related, 5000~ 5999 *
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommand|null|undefined} exporterRunCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.exporterRunCommand = null;

                                    /**
                                     * Command exporterCancelCommand.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterCancelCommand|null|undefined} exporterCancelCommand
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Command.prototype.exporterCancelCommand = null;

                                    // OneOf field names bound to virtual getters and setters
                                    var $oneOfFields;

                                    /**
                                     * Command data.
                                     * @member {"SystemRequireResendCommand"|"sessionCreateNewCommand"|"sessionPrepareRTCCommand"|"sessionBeginCommand"|"sessionKeepaliveCommand"|"sessionEndCurrentCommand"|"sessionInvalidCurrentCommand"|"projectLoadCommand"|"projectSaveCommand"|"projectNewCommand"|"projectCloseCommand"|"editorUndoCommand"|"editorRedoCommand"|"editorGetStackSizeCommand"|"editorSetCanvasPropertiesCommand"|"editorGetCanvasPropertiesCommand"|"editorAddMainClipCommand"|"editorAddLookupClipCommand"|"editorAddPipClipCommand"|"editorAddMusicClipCommand"|"editorAddTextClipCommand"|"editorAddStickerClipCommand"|"editorAddExtensionClipCommand"|"editorChangeClipResourceCommand"|"editorSplitClipCommand"|"editorDeleteClipCommand"|"editorMoveClipCommand"|"editorRemoveTrackCommand"|"editorSetClipLookupCommand"|"editorSetTransitionDurationUsCommand"|"editorRemoveTransitionCommand"|"editorSetClipCropCommand"|"editorSetClipCanvasBackgroundCommand"|"editorSetClipCanvasBackgroundResCommand"|"editorSetClipCanvasBackgroundBlurTypeCommand"|"editorDeleteMaterialCommand"|"editorCheckToAddMaterialCommand"|"editorSetTransitionEffectCommand"|"editorSetResourcePropertiesCommand"|"editorGetResourceDurationUsCommand"|"editorGetResourceSizeCommand"|"editorGetClipResourceInfoCommand"|"editorSetResourceFullKeyFrameWithResIdCommand"|"editorSetTextCommand"|"editorSetTextColorCommand"|"editorSetTextFontCommand"|"editorSetDefaultFontFileCommand"|"editorSetTextShadowCommand"|"editorSetTextAlignmentCommand"|"editorSetTextOutlineCommand"|"editorSetTextUnderlineCommand"|"editorSetTextBoldCommand"|"editorSetTextItalicsCommand"|"editorSetTextWordSpaceCommand"|"editorSetScaleCommand"|"editorSetPositionCommand"|"editorSetAnchorCommand"|"editorSetRotationCommand"|"editorSetClipStartTimeUsCommand"|"editorSetSourceTimeRangeCommand"|"editorSetClipSpeedCommand"|"editorSetClipVolumeCommand"|"editorGetClipPropListCommand"|"editorSetClipPropListCommand"|"editorGetTrackIdListCommand"|"editorGetClipIdListCommand"|"viewerSetPropertiesCommand"|"viewerPrepareCommand"|"viewerStartCommand"|"viewerPauseCommand"|"viewerStopCommand"|"viewerSeekToCommand"|"viewerGetStateCommand"|"viewerGetDurationUsCommand"|"exporterRunCommand"|"exporterCancelCommand"|undefined} data
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     */
                                    Object.defineProperty(Command.prototype, "data", {
                                        get: $util.oneOfGetter($oneOfFields = ["SystemRequireResendCommand", "sessionCreateNewCommand", "sessionPrepareRTCCommand", "sessionBeginCommand", "sessionKeepaliveCommand", "sessionEndCurrentCommand", "sessionInvalidCurrentCommand", "projectLoadCommand", "projectSaveCommand", "projectNewCommand", "projectCloseCommand", "editorUndoCommand", "editorRedoCommand", "editorGetStackSizeCommand", "editorSetCanvasPropertiesCommand", "editorGetCanvasPropertiesCommand", "editorAddMainClipCommand", "editorAddLookupClipCommand", "editorAddPipClipCommand", "editorAddMusicClipCommand", "editorAddTextClipCommand", "editorAddStickerClipCommand", "editorAddExtensionClipCommand", "editorChangeClipResourceCommand", "editorSplitClipCommand", "editorDeleteClipCommand", "editorMoveClipCommand", "editorRemoveTrackCommand", "editorSetClipLookupCommand", "editorSetTransitionDurationUsCommand", "editorRemoveTransitionCommand", "editorSetClipCropCommand", "editorSetClipCanvasBackgroundCommand", "editorSetClipCanvasBackgroundResCommand", "editorSetClipCanvasBackgroundBlurTypeCommand", "editorDeleteMaterialCommand", "editorCheckToAddMaterialCommand", "editorSetTransitionEffectCommand", "editorSetResourcePropertiesCommand", "editorGetResourceDurationUsCommand", "editorGetResourceSizeCommand", "editorGetClipResourceInfoCommand", "editorSetResourceFullKeyFrameWithResIdCommand", "editorSetTextCommand", "editorSetTextColorCommand", "editorSetTextFontCommand", "editorSetDefaultFontFileCommand", "editorSetTextShadowCommand", "editorSetTextAlignmentCommand", "editorSetTextOutlineCommand", "editorSetTextUnderlineCommand", "editorSetTextBoldCommand", "editorSetTextItalicsCommand", "editorSetTextWordSpaceCommand", "editorSetScaleCommand", "editorSetPositionCommand", "editorSetAnchorCommand", "editorSetRotationCommand", "editorSetClipStartTimeUsCommand", "editorSetSourceTimeRangeCommand", "editorSetClipSpeedCommand", "editorSetClipVolumeCommand", "editorGetClipPropListCommand", "editorSetClipPropListCommand", "editorGetTrackIdListCommand", "editorGetClipIdListCommand", "viewerSetPropertiesCommand", "viewerPrepareCommand", "viewerStartCommand", "viewerPauseCommand", "viewerStopCommand", "viewerSeekToCommand", "viewerGetStateCommand", "viewerGetDurationUsCommand", "exporterRunCommand", "exporterCancelCommand"]),
                                        set: $util.oneOfSetter($oneOfFields)
                                    });

                                    /**
                                     * Creates a new Command instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command} Command instance
                                     */
                                    Command.create = function create(properties) {
                                        return new Command(properties);
                                    };

                                    /**
                                     * Encodes the specified Command message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommand} message Command message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    Command.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.commandHeader != null && Object.hasOwnProperty.call(message, "commandHeader"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.encode(message.commandHeader, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        if (message.forceResp != null && Object.hasOwnProperty.call(message, "forceResp"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.forceResp);
                                        if (message.SystemRequireResendCommand != null && Object.hasOwnProperty.call(message, "SystemRequireResendCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand.encode(message.SystemRequireResendCommand, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                                        if (message.sessionCreateNewCommand != null && Object.hasOwnProperty.call(message, "sessionCreateNewCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand.encode(message.sessionCreateNewCommand, writer.uint32(/* id 200, wireType 2 =*/1602).fork()).ldelim();
                                        if (message.sessionPrepareRTCCommand != null && Object.hasOwnProperty.call(message, "sessionPrepareRTCCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand.encode(message.sessionPrepareRTCCommand, writer.uint32(/* id 201, wireType 2 =*/1610).fork()).ldelim();
                                        if (message.sessionBeginCommand != null && Object.hasOwnProperty.call(message, "sessionBeginCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand.encode(message.sessionBeginCommand, writer.uint32(/* id 202, wireType 2 =*/1618).fork()).ldelim();
                                        if (message.sessionKeepaliveCommand != null && Object.hasOwnProperty.call(message, "sessionKeepaliveCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand.encode(message.sessionKeepaliveCommand, writer.uint32(/* id 210, wireType 2 =*/1682).fork()).ldelim();
                                        if (message.sessionEndCurrentCommand != null && Object.hasOwnProperty.call(message, "sessionEndCurrentCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand.encode(message.sessionEndCurrentCommand, writer.uint32(/* id 220, wireType 2 =*/1762).fork()).ldelim();
                                        if (message.sessionInvalidCurrentCommand != null && Object.hasOwnProperty.call(message, "sessionInvalidCurrentCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand.encode(message.sessionInvalidCurrentCommand, writer.uint32(/* id 221, wireType 2 =*/1770).fork()).ldelim();
                                        if (message.projectLoadCommand != null && Object.hasOwnProperty.call(message, "projectLoadCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand.encode(message.projectLoadCommand, writer.uint32(/* id 2001, wireType 2 =*/16010).fork()).ldelim();
                                        if (message.projectSaveCommand != null && Object.hasOwnProperty.call(message, "projectSaveCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand.encode(message.projectSaveCommand, writer.uint32(/* id 2002, wireType 2 =*/16018).fork()).ldelim();
                                        if (message.projectNewCommand != null && Object.hasOwnProperty.call(message, "projectNewCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand.encode(message.projectNewCommand, writer.uint32(/* id 2003, wireType 2 =*/16026).fork()).ldelim();
                                        if (message.projectCloseCommand != null && Object.hasOwnProperty.call(message, "projectCloseCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand.encode(message.projectCloseCommand, writer.uint32(/* id 2004, wireType 2 =*/16034).fork()).ldelim();
                                        if (message.editorUndoCommand != null && Object.hasOwnProperty.call(message, "editorUndoCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand.encode(message.editorUndoCommand, writer.uint32(/* id 3004, wireType 2 =*/24034).fork()).ldelim();
                                        if (message.editorRedoCommand != null && Object.hasOwnProperty.call(message, "editorRedoCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand.encode(message.editorRedoCommand, writer.uint32(/* id 3005, wireType 2 =*/24042).fork()).ldelim();
                                        if (message.editorGetStackSizeCommand != null && Object.hasOwnProperty.call(message, "editorGetStackSizeCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand.encode(message.editorGetStackSizeCommand, writer.uint32(/* id 3006, wireType 2 =*/24050).fork()).ldelim();
                                        if (message.editorSetCanvasPropertiesCommand != null && Object.hasOwnProperty.call(message, "editorSetCanvasPropertiesCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand.encode(message.editorSetCanvasPropertiesCommand, writer.uint32(/* id 3007, wireType 2 =*/24058).fork()).ldelim();
                                        if (message.editorGetCanvasPropertiesCommand != null && Object.hasOwnProperty.call(message, "editorGetCanvasPropertiesCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand.encode(message.editorGetCanvasPropertiesCommand, writer.uint32(/* id 3008, wireType 2 =*/24066).fork()).ldelim();
                                        if (message.editorAddMainClipCommand != null && Object.hasOwnProperty.call(message, "editorAddMainClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand.encode(message.editorAddMainClipCommand, writer.uint32(/* id 3009, wireType 2 =*/24074).fork()).ldelim();
                                        if (message.editorAddLookupClipCommand != null && Object.hasOwnProperty.call(message, "editorAddLookupClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand.encode(message.editorAddLookupClipCommand, writer.uint32(/* id 3010, wireType 2 =*/24082).fork()).ldelim();
                                        if (message.editorAddPipClipCommand != null && Object.hasOwnProperty.call(message, "editorAddPipClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand.encode(message.editorAddPipClipCommand, writer.uint32(/* id 3011, wireType 2 =*/24090).fork()).ldelim();
                                        if (message.editorAddMusicClipCommand != null && Object.hasOwnProperty.call(message, "editorAddMusicClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand.encode(message.editorAddMusicClipCommand, writer.uint32(/* id 3012, wireType 2 =*/24098).fork()).ldelim();
                                        if (message.editorAddTextClipCommand != null && Object.hasOwnProperty.call(message, "editorAddTextClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand.encode(message.editorAddTextClipCommand, writer.uint32(/* id 3013, wireType 2 =*/24106).fork()).ldelim();
                                        if (message.editorAddStickerClipCommand != null && Object.hasOwnProperty.call(message, "editorAddStickerClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand.encode(message.editorAddStickerClipCommand, writer.uint32(/* id 3014, wireType 2 =*/24114).fork()).ldelim();
                                        if (message.editorAddExtensionClipCommand != null && Object.hasOwnProperty.call(message, "editorAddExtensionClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand.encode(message.editorAddExtensionClipCommand, writer.uint32(/* id 3015, wireType 2 =*/24122).fork()).ldelim();
                                        if (message.editorChangeClipResourceCommand != null && Object.hasOwnProperty.call(message, "editorChangeClipResourceCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand.encode(message.editorChangeClipResourceCommand, writer.uint32(/* id 3016, wireType 2 =*/24130).fork()).ldelim();
                                        if (message.editorSplitClipCommand != null && Object.hasOwnProperty.call(message, "editorSplitClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand.encode(message.editorSplitClipCommand, writer.uint32(/* id 3017, wireType 2 =*/24138).fork()).ldelim();
                                        if (message.editorDeleteClipCommand != null && Object.hasOwnProperty.call(message, "editorDeleteClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand.encode(message.editorDeleteClipCommand, writer.uint32(/* id 3018, wireType 2 =*/24146).fork()).ldelim();
                                        if (message.editorMoveClipCommand != null && Object.hasOwnProperty.call(message, "editorMoveClipCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand.encode(message.editorMoveClipCommand, writer.uint32(/* id 3019, wireType 2 =*/24154).fork()).ldelim();
                                        if (message.editorRemoveTrackCommand != null && Object.hasOwnProperty.call(message, "editorRemoveTrackCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand.encode(message.editorRemoveTrackCommand, writer.uint32(/* id 3020, wireType 2 =*/24162).fork()).ldelim();
                                        if (message.editorSetClipLookupCommand != null && Object.hasOwnProperty.call(message, "editorSetClipLookupCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand.encode(message.editorSetClipLookupCommand, writer.uint32(/* id 3021, wireType 2 =*/24170).fork()).ldelim();
                                        if (message.editorSetTransitionDurationUsCommand != null && Object.hasOwnProperty.call(message, "editorSetTransitionDurationUsCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand.encode(message.editorSetTransitionDurationUsCommand, writer.uint32(/* id 3024, wireType 2 =*/24194).fork()).ldelim();
                                        if (message.editorRemoveTransitionCommand != null && Object.hasOwnProperty.call(message, "editorRemoveTransitionCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand.encode(message.editorRemoveTransitionCommand, writer.uint32(/* id 3025, wireType 2 =*/24202).fork()).ldelim();
                                        if (message.editorSetClipCropCommand != null && Object.hasOwnProperty.call(message, "editorSetClipCropCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand.encode(message.editorSetClipCropCommand, writer.uint32(/* id 3029, wireType 2 =*/24234).fork()).ldelim();
                                        if (message.editorSetClipCanvasBackgroundCommand != null && Object.hasOwnProperty.call(message, "editorSetClipCanvasBackgroundCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand.encode(message.editorSetClipCanvasBackgroundCommand, writer.uint32(/* id 3030, wireType 2 =*/24242).fork()).ldelim();
                                        if (message.editorSetClipCanvasBackgroundResCommand != null && Object.hasOwnProperty.call(message, "editorSetClipCanvasBackgroundResCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand.encode(message.editorSetClipCanvasBackgroundResCommand, writer.uint32(/* id 3031, wireType 2 =*/24250).fork()).ldelim();
                                        if (message.editorSetClipCanvasBackgroundBlurTypeCommand != null && Object.hasOwnProperty.call(message, "editorSetClipCanvasBackgroundBlurTypeCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand.encode(message.editorSetClipCanvasBackgroundBlurTypeCommand, writer.uint32(/* id 3032, wireType 2 =*/24258).fork()).ldelim();
                                        if (message.editorDeleteMaterialCommand != null && Object.hasOwnProperty.call(message, "editorDeleteMaterialCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand.encode(message.editorDeleteMaterialCommand, writer.uint32(/* id 3033, wireType 2 =*/24266).fork()).ldelim();
                                        if (message.editorCheckToAddMaterialCommand != null && Object.hasOwnProperty.call(message, "editorCheckToAddMaterialCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand.encode(message.editorCheckToAddMaterialCommand, writer.uint32(/* id 3034, wireType 2 =*/24274).fork()).ldelim();
                                        if (message.editorSetTransitionEffectCommand != null && Object.hasOwnProperty.call(message, "editorSetTransitionEffectCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand.encode(message.editorSetTransitionEffectCommand, writer.uint32(/* id 3035, wireType 2 =*/24282).fork()).ldelim();
                                        if (message.editorSetResourcePropertiesCommand != null && Object.hasOwnProperty.call(message, "editorSetResourcePropertiesCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand.encode(message.editorSetResourcePropertiesCommand, writer.uint32(/* id 3036, wireType 2 =*/24290).fork()).ldelim();
                                        if (message.editorGetResourceDurationUsCommand != null && Object.hasOwnProperty.call(message, "editorGetResourceDurationUsCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand.encode(message.editorGetResourceDurationUsCommand, writer.uint32(/* id 3037, wireType 2 =*/24298).fork()).ldelim();
                                        if (message.editorGetResourceSizeCommand != null && Object.hasOwnProperty.call(message, "editorGetResourceSizeCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand.encode(message.editorGetResourceSizeCommand, writer.uint32(/* id 3038, wireType 2 =*/24306).fork()).ldelim();
                                        if (message.editorGetClipResourceInfoCommand != null && Object.hasOwnProperty.call(message, "editorGetClipResourceInfoCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand.encode(message.editorGetClipResourceInfoCommand, writer.uint32(/* id 3039, wireType 2 =*/24314).fork()).ldelim();
                                        if (message.editorSetResourceFullKeyFrameWithResIdCommand != null && Object.hasOwnProperty.call(message, "editorSetResourceFullKeyFrameWithResIdCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand.encode(message.editorSetResourceFullKeyFrameWithResIdCommand, writer.uint32(/* id 3041, wireType 2 =*/24330).fork()).ldelim();
                                        if (message.editorSetTextCommand != null && Object.hasOwnProperty.call(message, "editorSetTextCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand.encode(message.editorSetTextCommand, writer.uint32(/* id 3042, wireType 2 =*/24338).fork()).ldelim();
                                        if (message.editorSetTextColorCommand != null && Object.hasOwnProperty.call(message, "editorSetTextColorCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand.encode(message.editorSetTextColorCommand, writer.uint32(/* id 3044, wireType 2 =*/24354).fork()).ldelim();
                                        if (message.editorSetTextFontCommand != null && Object.hasOwnProperty.call(message, "editorSetTextFontCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand.encode(message.editorSetTextFontCommand, writer.uint32(/* id 3045, wireType 2 =*/24362).fork()).ldelim();
                                        if (message.editorSetDefaultFontFileCommand != null && Object.hasOwnProperty.call(message, "editorSetDefaultFontFileCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand.encode(message.editorSetDefaultFontFileCommand, writer.uint32(/* id 3046, wireType 2 =*/24370).fork()).ldelim();
                                        if (message.editorSetTextShadowCommand != null && Object.hasOwnProperty.call(message, "editorSetTextShadowCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand.encode(message.editorSetTextShadowCommand, writer.uint32(/* id 3047, wireType 2 =*/24378).fork()).ldelim();
                                        if (message.editorSetTextAlignmentCommand != null && Object.hasOwnProperty.call(message, "editorSetTextAlignmentCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand.encode(message.editorSetTextAlignmentCommand, writer.uint32(/* id 3048, wireType 2 =*/24386).fork()).ldelim();
                                        if (message.editorSetTextOutlineCommand != null && Object.hasOwnProperty.call(message, "editorSetTextOutlineCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand.encode(message.editorSetTextOutlineCommand, writer.uint32(/* id 3049, wireType 2 =*/24394).fork()).ldelim();
                                        if (message.editorSetTextUnderlineCommand != null && Object.hasOwnProperty.call(message, "editorSetTextUnderlineCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand.encode(message.editorSetTextUnderlineCommand, writer.uint32(/* id 3050, wireType 2 =*/24402).fork()).ldelim();
                                        if (message.editorSetTextBoldCommand != null && Object.hasOwnProperty.call(message, "editorSetTextBoldCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand.encode(message.editorSetTextBoldCommand, writer.uint32(/* id 3051, wireType 2 =*/24410).fork()).ldelim();
                                        if (message.editorSetTextItalicsCommand != null && Object.hasOwnProperty.call(message, "editorSetTextItalicsCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand.encode(message.editorSetTextItalicsCommand, writer.uint32(/* id 3052, wireType 2 =*/24418).fork()).ldelim();
                                        if (message.editorSetTextWordSpaceCommand != null && Object.hasOwnProperty.call(message, "editorSetTextWordSpaceCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand.encode(message.editorSetTextWordSpaceCommand, writer.uint32(/* id 3053, wireType 2 =*/24426).fork()).ldelim();
                                        if (message.editorSetScaleCommand != null && Object.hasOwnProperty.call(message, "editorSetScaleCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand.encode(message.editorSetScaleCommand, writer.uint32(/* id 3056, wireType 2 =*/24450).fork()).ldelim();
                                        if (message.editorSetPositionCommand != null && Object.hasOwnProperty.call(message, "editorSetPositionCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand.encode(message.editorSetPositionCommand, writer.uint32(/* id 3057, wireType 2 =*/24458).fork()).ldelim();
                                        if (message.editorSetAnchorCommand != null && Object.hasOwnProperty.call(message, "editorSetAnchorCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand.encode(message.editorSetAnchorCommand, writer.uint32(/* id 3058, wireType 2 =*/24466).fork()).ldelim();
                                        if (message.editorSetRotationCommand != null && Object.hasOwnProperty.call(message, "editorSetRotationCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand.encode(message.editorSetRotationCommand, writer.uint32(/* id 3059, wireType 2 =*/24474).fork()).ldelim();
                                        if (message.editorSetClipStartTimeUsCommand != null && Object.hasOwnProperty.call(message, "editorSetClipStartTimeUsCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand.encode(message.editorSetClipStartTimeUsCommand, writer.uint32(/* id 3060, wireType 2 =*/24482).fork()).ldelim();
                                        if (message.editorSetSourceTimeRangeCommand != null && Object.hasOwnProperty.call(message, "editorSetSourceTimeRangeCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand.encode(message.editorSetSourceTimeRangeCommand, writer.uint32(/* id 3061, wireType 2 =*/24490).fork()).ldelim();
                                        if (message.editorSetClipSpeedCommand != null && Object.hasOwnProperty.call(message, "editorSetClipSpeedCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand.encode(message.editorSetClipSpeedCommand, writer.uint32(/* id 3062, wireType 2 =*/24498).fork()).ldelim();
                                        if (message.editorSetClipVolumeCommand != null && Object.hasOwnProperty.call(message, "editorSetClipVolumeCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand.encode(message.editorSetClipVolumeCommand, writer.uint32(/* id 3063, wireType 2 =*/24506).fork()).ldelim();
                                        if (message.editorGetClipPropListCommand != null && Object.hasOwnProperty.call(message, "editorGetClipPropListCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand.encode(message.editorGetClipPropListCommand, writer.uint32(/* id 3064, wireType 2 =*/24514).fork()).ldelim();
                                        if (message.editorSetClipPropListCommand != null && Object.hasOwnProperty.call(message, "editorSetClipPropListCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand.encode(message.editorSetClipPropListCommand, writer.uint32(/* id 3065, wireType 2 =*/24522).fork()).ldelim();
                                        if (message.editorGetTrackIdListCommand != null && Object.hasOwnProperty.call(message, "editorGetTrackIdListCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand.encode(message.editorGetTrackIdListCommand, writer.uint32(/* id 3070, wireType 2 =*/24562).fork()).ldelim();
                                        if (message.editorGetClipIdListCommand != null && Object.hasOwnProperty.call(message, "editorGetClipIdListCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand.encode(message.editorGetClipIdListCommand, writer.uint32(/* id 3071, wireType 2 =*/24570).fork()).ldelim();
                                        if (message.viewerSetPropertiesCommand != null && Object.hasOwnProperty.call(message, "viewerSetPropertiesCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand.encode(message.viewerSetPropertiesCommand, writer.uint32(/* id 4001, wireType 2 =*/32010).fork()).ldelim();
                                        if (message.viewerPrepareCommand != null && Object.hasOwnProperty.call(message, "viewerPrepareCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand.encode(message.viewerPrepareCommand, writer.uint32(/* id 4004, wireType 2 =*/32034).fork()).ldelim();
                                        if (message.viewerStartCommand != null && Object.hasOwnProperty.call(message, "viewerStartCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand.encode(message.viewerStartCommand, writer.uint32(/* id 4005, wireType 2 =*/32042).fork()).ldelim();
                                        if (message.viewerPauseCommand != null && Object.hasOwnProperty.call(message, "viewerPauseCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand.encode(message.viewerPauseCommand, writer.uint32(/* id 4006, wireType 2 =*/32050).fork()).ldelim();
                                        if (message.viewerStopCommand != null && Object.hasOwnProperty.call(message, "viewerStopCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand.encode(message.viewerStopCommand, writer.uint32(/* id 4007, wireType 2 =*/32058).fork()).ldelim();
                                        if (message.viewerSeekToCommand != null && Object.hasOwnProperty.call(message, "viewerSeekToCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand.encode(message.viewerSeekToCommand, writer.uint32(/* id 4008, wireType 2 =*/32066).fork()).ldelim();
                                        if (message.viewerGetStateCommand != null && Object.hasOwnProperty.call(message, "viewerGetStateCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand.encode(message.viewerGetStateCommand, writer.uint32(/* id 4009, wireType 2 =*/32074).fork()).ldelim();
                                        if (message.viewerGetDurationUsCommand != null && Object.hasOwnProperty.call(message, "viewerGetDurationUsCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand.encode(message.viewerGetDurationUsCommand, writer.uint32(/* id 4010, wireType 2 =*/32082).fork()).ldelim();
                                        if (message.exporterRunCommand != null && Object.hasOwnProperty.call(message, "exporterRunCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand.encode(message.exporterRunCommand, writer.uint32(/* id 5001, wireType 2 =*/40010).fork()).ldelim();
                                        if (message.exporterCancelCommand != null && Object.hasOwnProperty.call(message, "exporterCancelCommand"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand.encode(message.exporterCancelCommand, writer.uint32(/* id 5002, wireType 2 =*/40018).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified Command message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommand} message Command message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    Command.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a Command message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command} Command
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    Command.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.commandHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.decode(reader, reader.uint32());
                                                    break;
                                                case 2:
                                                    message.forceResp = reader.bool();
                                                    break;
                                                case 100:
                                                    message.SystemRequireResendCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 200:
                                                    message.sessionCreateNewCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 201:
                                                    message.sessionPrepareRTCCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 202:
                                                    message.sessionBeginCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 210:
                                                    message.sessionKeepaliveCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 220:
                                                    message.sessionEndCurrentCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 221:
                                                    message.sessionInvalidCurrentCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 2001:
                                                    message.projectLoadCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 2002:
                                                    message.projectSaveCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 2003:
                                                    message.projectNewCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 2004:
                                                    message.projectCloseCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3004:
                                                    message.editorUndoCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3005:
                                                    message.editorRedoCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3006:
                                                    message.editorGetStackSizeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3007:
                                                    message.editorSetCanvasPropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3008:
                                                    message.editorGetCanvasPropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3009:
                                                    message.editorAddMainClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3010:
                                                    message.editorAddLookupClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3011:
                                                    message.editorAddPipClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3012:
                                                    message.editorAddMusicClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3013:
                                                    message.editorAddTextClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3014:
                                                    message.editorAddStickerClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3015:
                                                    message.editorAddExtensionClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3016:
                                                    message.editorChangeClipResourceCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3017:
                                                    message.editorSplitClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3018:
                                                    message.editorDeleteClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3019:
                                                    message.editorMoveClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3020:
                                                    message.editorRemoveTrackCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3021:
                                                    message.editorSetClipLookupCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3024:
                                                    message.editorSetTransitionDurationUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3025:
                                                    message.editorRemoveTransitionCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3029:
                                                    message.editorSetClipCropCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3030:
                                                    message.editorSetClipCanvasBackgroundCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3031:
                                                    message.editorSetClipCanvasBackgroundResCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3032:
                                                    message.editorSetClipCanvasBackgroundBlurTypeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3033:
                                                    message.editorDeleteMaterialCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3034:
                                                    message.editorCheckToAddMaterialCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3035:
                                                    message.editorSetTransitionEffectCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3036:
                                                    message.editorSetResourcePropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3037:
                                                    message.editorGetResourceDurationUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3038:
                                                    message.editorGetResourceSizeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3039:
                                                    message.editorGetClipResourceInfoCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3041:
                                                    message.editorSetResourceFullKeyFrameWithResIdCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3042:
                                                    message.editorSetTextCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3044:
                                                    message.editorSetTextColorCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3045:
                                                    message.editorSetTextFontCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3046:
                                                    message.editorSetDefaultFontFileCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3047:
                                                    message.editorSetTextShadowCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3048:
                                                    message.editorSetTextAlignmentCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3049:
                                                    message.editorSetTextOutlineCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3050:
                                                    message.editorSetTextUnderlineCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3051:
                                                    message.editorSetTextBoldCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3052:
                                                    message.editorSetTextItalicsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3053:
                                                    message.editorSetTextWordSpaceCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3056:
                                                    message.editorSetScaleCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3057:
                                                    message.editorSetPositionCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3058:
                                                    message.editorSetAnchorCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3059:
                                                    message.editorSetRotationCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3060:
                                                    message.editorSetClipStartTimeUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3061:
                                                    message.editorSetSourceTimeRangeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3062:
                                                    message.editorSetClipSpeedCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3063:
                                                    message.editorSetClipVolumeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3064:
                                                    message.editorGetClipPropListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3065:
                                                    message.editorSetClipPropListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3070:
                                                    message.editorGetTrackIdListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 3071:
                                                    message.editorGetClipIdListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 4001:
                                                    message.viewerSetPropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 4004:
                                                    message.viewerPrepareCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 4005:
                                                    message.viewerStartCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 4006:
                                                    message.viewerPauseCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 4007:
                                                    message.viewerStopCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 4008:
                                                    message.viewerSeekToCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 4009:
                                                    message.viewerGetStateCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 4010:
                                                    message.viewerGetDurationUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 5001:
                                                    message.exporterRunCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand.decode(reader, reader.uint32());
                                                    break;
                                                case 5002:
                                                    message.exporterCancelCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand.decode(reader, reader.uint32());
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a Command message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command} Command
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    Command.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a Command message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    Command.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        var properties = {};
                                        if (message.commandHeader != null && message.hasOwnProperty("commandHeader")) {
                                            var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.verify(message.commandHeader);
                                            if (error)
                                                return "commandHeader." + error;
                                        }
                                        if (message.forceResp != null && message.hasOwnProperty("forceResp"))
                                            if (typeof message.forceResp !== "boolean")
                                                return "forceResp: boolean expected";
                                        if (message.SystemRequireResendCommand != null && message.hasOwnProperty("SystemRequireResendCommand")) {
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand.verify(message.SystemRequireResendCommand);
                                                if (error)
                                                    return "SystemRequireResendCommand." + error;
                                            }
                                        }
                                        if (message.sessionCreateNewCommand != null && message.hasOwnProperty("sessionCreateNewCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand.verify(message.sessionCreateNewCommand);
                                                if (error)
                                                    return "sessionCreateNewCommand." + error;
                                            }
                                        }
                                        if (message.sessionPrepareRTCCommand != null && message.hasOwnProperty("sessionPrepareRTCCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand.verify(message.sessionPrepareRTCCommand);
                                                if (error)
                                                    return "sessionPrepareRTCCommand." + error;
                                            }
                                        }
                                        if (message.sessionBeginCommand != null && message.hasOwnProperty("sessionBeginCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand.verify(message.sessionBeginCommand);
                                                if (error)
                                                    return "sessionBeginCommand." + error;
                                            }
                                        }
                                        if (message.sessionKeepaliveCommand != null && message.hasOwnProperty("sessionKeepaliveCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand.verify(message.sessionKeepaliveCommand);
                                                if (error)
                                                    return "sessionKeepaliveCommand." + error;
                                            }
                                        }
                                        if (message.sessionEndCurrentCommand != null && message.hasOwnProperty("sessionEndCurrentCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand.verify(message.sessionEndCurrentCommand);
                                                if (error)
                                                    return "sessionEndCurrentCommand." + error;
                                            }
                                        }
                                        if (message.sessionInvalidCurrentCommand != null && message.hasOwnProperty("sessionInvalidCurrentCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand.verify(message.sessionInvalidCurrentCommand);
                                                if (error)
                                                    return "sessionInvalidCurrentCommand." + error;
                                            }
                                        }
                                        if (message.projectLoadCommand != null && message.hasOwnProperty("projectLoadCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand.verify(message.projectLoadCommand);
                                                if (error)
                                                    return "projectLoadCommand." + error;
                                            }
                                        }
                                        if (message.projectSaveCommand != null && message.hasOwnProperty("projectSaveCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand.verify(message.projectSaveCommand);
                                                if (error)
                                                    return "projectSaveCommand." + error;
                                            }
                                        }
                                        if (message.projectNewCommand != null && message.hasOwnProperty("projectNewCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand.verify(message.projectNewCommand);
                                                if (error)
                                                    return "projectNewCommand." + error;
                                            }
                                        }
                                        if (message.projectCloseCommand != null && message.hasOwnProperty("projectCloseCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand.verify(message.projectCloseCommand);
                                                if (error)
                                                    return "projectCloseCommand." + error;
                                            }
                                        }
                                        if (message.editorUndoCommand != null && message.hasOwnProperty("editorUndoCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand.verify(message.editorUndoCommand);
                                                if (error)
                                                    return "editorUndoCommand." + error;
                                            }
                                        }
                                        if (message.editorRedoCommand != null && message.hasOwnProperty("editorRedoCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand.verify(message.editorRedoCommand);
                                                if (error)
                                                    return "editorRedoCommand." + error;
                                            }
                                        }
                                        if (message.editorGetStackSizeCommand != null && message.hasOwnProperty("editorGetStackSizeCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand.verify(message.editorGetStackSizeCommand);
                                                if (error)
                                                    return "editorGetStackSizeCommand." + error;
                                            }
                                        }
                                        if (message.editorSetCanvasPropertiesCommand != null && message.hasOwnProperty("editorSetCanvasPropertiesCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand.verify(message.editorSetCanvasPropertiesCommand);
                                                if (error)
                                                    return "editorSetCanvasPropertiesCommand." + error;
                                            }
                                        }
                                        if (message.editorGetCanvasPropertiesCommand != null && message.hasOwnProperty("editorGetCanvasPropertiesCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand.verify(message.editorGetCanvasPropertiesCommand);
                                                if (error)
                                                    return "editorGetCanvasPropertiesCommand." + error;
                                            }
                                        }
                                        if (message.editorAddMainClipCommand != null && message.hasOwnProperty("editorAddMainClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand.verify(message.editorAddMainClipCommand);
                                                if (error)
                                                    return "editorAddMainClipCommand." + error;
                                            }
                                        }
                                        if (message.editorAddLookupClipCommand != null && message.hasOwnProperty("editorAddLookupClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand.verify(message.editorAddLookupClipCommand);
                                                if (error)
                                                    return "editorAddLookupClipCommand." + error;
                                            }
                                        }
                                        if (message.editorAddPipClipCommand != null && message.hasOwnProperty("editorAddPipClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand.verify(message.editorAddPipClipCommand);
                                                if (error)
                                                    return "editorAddPipClipCommand." + error;
                                            }
                                        }
                                        if (message.editorAddMusicClipCommand != null && message.hasOwnProperty("editorAddMusicClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand.verify(message.editorAddMusicClipCommand);
                                                if (error)
                                                    return "editorAddMusicClipCommand." + error;
                                            }
                                        }
                                        if (message.editorAddTextClipCommand != null && message.hasOwnProperty("editorAddTextClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand.verify(message.editorAddTextClipCommand);
                                                if (error)
                                                    return "editorAddTextClipCommand." + error;
                                            }
                                        }
                                        if (message.editorAddStickerClipCommand != null && message.hasOwnProperty("editorAddStickerClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand.verify(message.editorAddStickerClipCommand);
                                                if (error)
                                                    return "editorAddStickerClipCommand." + error;
                                            }
                                        }
                                        if (message.editorAddExtensionClipCommand != null && message.hasOwnProperty("editorAddExtensionClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand.verify(message.editorAddExtensionClipCommand);
                                                if (error)
                                                    return "editorAddExtensionClipCommand." + error;
                                            }
                                        }
                                        if (message.editorChangeClipResourceCommand != null && message.hasOwnProperty("editorChangeClipResourceCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand.verify(message.editorChangeClipResourceCommand);
                                                if (error)
                                                    return "editorChangeClipResourceCommand." + error;
                                            }
                                        }
                                        if (message.editorSplitClipCommand != null && message.hasOwnProperty("editorSplitClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand.verify(message.editorSplitClipCommand);
                                                if (error)
                                                    return "editorSplitClipCommand." + error;
                                            }
                                        }
                                        if (message.editorDeleteClipCommand != null && message.hasOwnProperty("editorDeleteClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand.verify(message.editorDeleteClipCommand);
                                                if (error)
                                                    return "editorDeleteClipCommand." + error;
                                            }
                                        }
                                        if (message.editorMoveClipCommand != null && message.hasOwnProperty("editorMoveClipCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand.verify(message.editorMoveClipCommand);
                                                if (error)
                                                    return "editorMoveClipCommand." + error;
                                            }
                                        }
                                        if (message.editorRemoveTrackCommand != null && message.hasOwnProperty("editorRemoveTrackCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand.verify(message.editorRemoveTrackCommand);
                                                if (error)
                                                    return "editorRemoveTrackCommand." + error;
                                            }
                                        }
                                        if (message.editorSetClipLookupCommand != null && message.hasOwnProperty("editorSetClipLookupCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand.verify(message.editorSetClipLookupCommand);
                                                if (error)
                                                    return "editorSetClipLookupCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTransitionDurationUsCommand != null && message.hasOwnProperty("editorSetTransitionDurationUsCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand.verify(message.editorSetTransitionDurationUsCommand);
                                                if (error)
                                                    return "editorSetTransitionDurationUsCommand." + error;
                                            }
                                        }
                                        if (message.editorRemoveTransitionCommand != null && message.hasOwnProperty("editorRemoveTransitionCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand.verify(message.editorRemoveTransitionCommand);
                                                if (error)
                                                    return "editorRemoveTransitionCommand." + error;
                                            }
                                        }
                                        if (message.editorSetClipCropCommand != null && message.hasOwnProperty("editorSetClipCropCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand.verify(message.editorSetClipCropCommand);
                                                if (error)
                                                    return "editorSetClipCropCommand." + error;
                                            }
                                        }
                                        if (message.editorSetClipCanvasBackgroundCommand != null && message.hasOwnProperty("editorSetClipCanvasBackgroundCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand.verify(message.editorSetClipCanvasBackgroundCommand);
                                                if (error)
                                                    return "editorSetClipCanvasBackgroundCommand." + error;
                                            }
                                        }
                                        if (message.editorSetClipCanvasBackgroundResCommand != null && message.hasOwnProperty("editorSetClipCanvasBackgroundResCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand.verify(message.editorSetClipCanvasBackgroundResCommand);
                                                if (error)
                                                    return "editorSetClipCanvasBackgroundResCommand." + error;
                                            }
                                        }
                                        if (message.editorSetClipCanvasBackgroundBlurTypeCommand != null && message.hasOwnProperty("editorSetClipCanvasBackgroundBlurTypeCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand.verify(message.editorSetClipCanvasBackgroundBlurTypeCommand);
                                                if (error)
                                                    return "editorSetClipCanvasBackgroundBlurTypeCommand." + error;
                                            }
                                        }
                                        if (message.editorDeleteMaterialCommand != null && message.hasOwnProperty("editorDeleteMaterialCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand.verify(message.editorDeleteMaterialCommand);
                                                if (error)
                                                    return "editorDeleteMaterialCommand." + error;
                                            }
                                        }
                                        if (message.editorCheckToAddMaterialCommand != null && message.hasOwnProperty("editorCheckToAddMaterialCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand.verify(message.editorCheckToAddMaterialCommand);
                                                if (error)
                                                    return "editorCheckToAddMaterialCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTransitionEffectCommand != null && message.hasOwnProperty("editorSetTransitionEffectCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand.verify(message.editorSetTransitionEffectCommand);
                                                if (error)
                                                    return "editorSetTransitionEffectCommand." + error;
                                            }
                                        }
                                        if (message.editorSetResourcePropertiesCommand != null && message.hasOwnProperty("editorSetResourcePropertiesCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand.verify(message.editorSetResourcePropertiesCommand);
                                                if (error)
                                                    return "editorSetResourcePropertiesCommand." + error;
                                            }
                                        }
                                        if (message.editorGetResourceDurationUsCommand != null && message.hasOwnProperty("editorGetResourceDurationUsCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand.verify(message.editorGetResourceDurationUsCommand);
                                                if (error)
                                                    return "editorGetResourceDurationUsCommand." + error;
                                            }
                                        }
                                        if (message.editorGetResourceSizeCommand != null && message.hasOwnProperty("editorGetResourceSizeCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand.verify(message.editorGetResourceSizeCommand);
                                                if (error)
                                                    return "editorGetResourceSizeCommand." + error;
                                            }
                                        }
                                        if (message.editorGetClipResourceInfoCommand != null && message.hasOwnProperty("editorGetClipResourceInfoCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand.verify(message.editorGetClipResourceInfoCommand);
                                                if (error)
                                                    return "editorGetClipResourceInfoCommand." + error;
                                            }
                                        }
                                        if (message.editorSetResourceFullKeyFrameWithResIdCommand != null && message.hasOwnProperty("editorSetResourceFullKeyFrameWithResIdCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand.verify(message.editorSetResourceFullKeyFrameWithResIdCommand);
                                                if (error)
                                                    return "editorSetResourceFullKeyFrameWithResIdCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextCommand != null && message.hasOwnProperty("editorSetTextCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand.verify(message.editorSetTextCommand);
                                                if (error)
                                                    return "editorSetTextCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextColorCommand != null && message.hasOwnProperty("editorSetTextColorCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand.verify(message.editorSetTextColorCommand);
                                                if (error)
                                                    return "editorSetTextColorCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextFontCommand != null && message.hasOwnProperty("editorSetTextFontCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand.verify(message.editorSetTextFontCommand);
                                                if (error)
                                                    return "editorSetTextFontCommand." + error;
                                            }
                                        }
                                        if (message.editorSetDefaultFontFileCommand != null && message.hasOwnProperty("editorSetDefaultFontFileCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand.verify(message.editorSetDefaultFontFileCommand);
                                                if (error)
                                                    return "editorSetDefaultFontFileCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextShadowCommand != null && message.hasOwnProperty("editorSetTextShadowCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand.verify(message.editorSetTextShadowCommand);
                                                if (error)
                                                    return "editorSetTextShadowCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextAlignmentCommand != null && message.hasOwnProperty("editorSetTextAlignmentCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand.verify(message.editorSetTextAlignmentCommand);
                                                if (error)
                                                    return "editorSetTextAlignmentCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextOutlineCommand != null && message.hasOwnProperty("editorSetTextOutlineCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand.verify(message.editorSetTextOutlineCommand);
                                                if (error)
                                                    return "editorSetTextOutlineCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextUnderlineCommand != null && message.hasOwnProperty("editorSetTextUnderlineCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand.verify(message.editorSetTextUnderlineCommand);
                                                if (error)
                                                    return "editorSetTextUnderlineCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextBoldCommand != null && message.hasOwnProperty("editorSetTextBoldCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand.verify(message.editorSetTextBoldCommand);
                                                if (error)
                                                    return "editorSetTextBoldCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextItalicsCommand != null && message.hasOwnProperty("editorSetTextItalicsCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand.verify(message.editorSetTextItalicsCommand);
                                                if (error)
                                                    return "editorSetTextItalicsCommand." + error;
                                            }
                                        }
                                        if (message.editorSetTextWordSpaceCommand != null && message.hasOwnProperty("editorSetTextWordSpaceCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand.verify(message.editorSetTextWordSpaceCommand);
                                                if (error)
                                                    return "editorSetTextWordSpaceCommand." + error;
                                            }
                                        }
                                        if (message.editorSetScaleCommand != null && message.hasOwnProperty("editorSetScaleCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand.verify(message.editorSetScaleCommand);
                                                if (error)
                                                    return "editorSetScaleCommand." + error;
                                            }
                                        }
                                        if (message.editorSetPositionCommand != null && message.hasOwnProperty("editorSetPositionCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand.verify(message.editorSetPositionCommand);
                                                if (error)
                                                    return "editorSetPositionCommand." + error;
                                            }
                                        }
                                        if (message.editorSetAnchorCommand != null && message.hasOwnProperty("editorSetAnchorCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand.verify(message.editorSetAnchorCommand);
                                                if (error)
                                                    return "editorSetAnchorCommand." + error;
                                            }
                                        }
                                        if (message.editorSetRotationCommand != null && message.hasOwnProperty("editorSetRotationCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand.verify(message.editorSetRotationCommand);
                                                if (error)
                                                    return "editorSetRotationCommand." + error;
                                            }
                                        }
                                        if (message.editorSetClipStartTimeUsCommand != null && message.hasOwnProperty("editorSetClipStartTimeUsCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand.verify(message.editorSetClipStartTimeUsCommand);
                                                if (error)
                                                    return "editorSetClipStartTimeUsCommand." + error;
                                            }
                                        }
                                        if (message.editorSetSourceTimeRangeCommand != null && message.hasOwnProperty("editorSetSourceTimeRangeCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand.verify(message.editorSetSourceTimeRangeCommand);
                                                if (error)
                                                    return "editorSetSourceTimeRangeCommand." + error;
                                            }
                                        }
                                        if (message.editorSetClipSpeedCommand != null && message.hasOwnProperty("editorSetClipSpeedCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand.verify(message.editorSetClipSpeedCommand);
                                                if (error)
                                                    return "editorSetClipSpeedCommand." + error;
                                            }
                                        }
                                        if (message.editorSetClipVolumeCommand != null && message.hasOwnProperty("editorSetClipVolumeCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand.verify(message.editorSetClipVolumeCommand);
                                                if (error)
                                                    return "editorSetClipVolumeCommand." + error;
                                            }
                                        }
                                        if (message.editorGetClipPropListCommand != null && message.hasOwnProperty("editorGetClipPropListCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand.verify(message.editorGetClipPropListCommand);
                                                if (error)
                                                    return "editorGetClipPropListCommand." + error;
                                            }
                                        }
                                        if (message.editorSetClipPropListCommand != null && message.hasOwnProperty("editorSetClipPropListCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand.verify(message.editorSetClipPropListCommand);
                                                if (error)
                                                    return "editorSetClipPropListCommand." + error;
                                            }
                                        }
                                        if (message.editorGetTrackIdListCommand != null && message.hasOwnProperty("editorGetTrackIdListCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand.verify(message.editorGetTrackIdListCommand);
                                                if (error)
                                                    return "editorGetTrackIdListCommand." + error;
                                            }
                                        }
                                        if (message.editorGetClipIdListCommand != null && message.hasOwnProperty("editorGetClipIdListCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand.verify(message.editorGetClipIdListCommand);
                                                if (error)
                                                    return "editorGetClipIdListCommand." + error;
                                            }
                                        }
                                        if (message.viewerSetPropertiesCommand != null && message.hasOwnProperty("viewerSetPropertiesCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand.verify(message.viewerSetPropertiesCommand);
                                                if (error)
                                                    return "viewerSetPropertiesCommand." + error;
                                            }
                                        }
                                        if (message.viewerPrepareCommand != null && message.hasOwnProperty("viewerPrepareCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand.verify(message.viewerPrepareCommand);
                                                if (error)
                                                    return "viewerPrepareCommand." + error;
                                            }
                                        }
                                        if (message.viewerStartCommand != null && message.hasOwnProperty("viewerStartCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand.verify(message.viewerStartCommand);
                                                if (error)
                                                    return "viewerStartCommand." + error;
                                            }
                                        }
                                        if (message.viewerPauseCommand != null && message.hasOwnProperty("viewerPauseCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand.verify(message.viewerPauseCommand);
                                                if (error)
                                                    return "viewerPauseCommand." + error;
                                            }
                                        }
                                        if (message.viewerStopCommand != null && message.hasOwnProperty("viewerStopCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand.verify(message.viewerStopCommand);
                                                if (error)
                                                    return "viewerStopCommand." + error;
                                            }
                                        }
                                        if (message.viewerSeekToCommand != null && message.hasOwnProperty("viewerSeekToCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand.verify(message.viewerSeekToCommand);
                                                if (error)
                                                    return "viewerSeekToCommand." + error;
                                            }
                                        }
                                        if (message.viewerGetStateCommand != null && message.hasOwnProperty("viewerGetStateCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand.verify(message.viewerGetStateCommand);
                                                if (error)
                                                    return "viewerGetStateCommand." + error;
                                            }
                                        }
                                        if (message.viewerGetDurationUsCommand != null && message.hasOwnProperty("viewerGetDurationUsCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand.verify(message.viewerGetDurationUsCommand);
                                                if (error)
                                                    return "viewerGetDurationUsCommand." + error;
                                            }
                                        }
                                        if (message.exporterRunCommand != null && message.hasOwnProperty("exporterRunCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand.verify(message.exporterRunCommand);
                                                if (error)
                                                    return "exporterRunCommand." + error;
                                            }
                                        }
                                        if (message.exporterCancelCommand != null && message.hasOwnProperty("exporterCancelCommand")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand.verify(message.exporterCancelCommand);
                                                if (error)
                                                    return "exporterCancelCommand." + error;
                                            }
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates a Command message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command} Command
                                     */
                                    Command.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command();
                                        if (object.commandHeader != null) {
                                            if (typeof object.commandHeader !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.commandHeader: object expected");
                                            message.commandHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.fromObject(object.commandHeader);
                                        }
                                        if (object.forceResp != null)
                                            message.forceResp = Boolean(object.forceResp);
                                        if (object.SystemRequireResendCommand != null) {
                                            if (typeof object.SystemRequireResendCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.SystemRequireResendCommand: object expected");
                                            message.SystemRequireResendCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand.fromObject(object.SystemRequireResendCommand);
                                        }
                                        if (object.sessionCreateNewCommand != null) {
                                            if (typeof object.sessionCreateNewCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.sessionCreateNewCommand: object expected");
                                            message.sessionCreateNewCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand.fromObject(object.sessionCreateNewCommand);
                                        }
                                        if (object.sessionPrepareRTCCommand != null) {
                                            if (typeof object.sessionPrepareRTCCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.sessionPrepareRTCCommand: object expected");
                                            message.sessionPrepareRTCCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand.fromObject(object.sessionPrepareRTCCommand);
                                        }
                                        if (object.sessionBeginCommand != null) {
                                            if (typeof object.sessionBeginCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.sessionBeginCommand: object expected");
                                            message.sessionBeginCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand.fromObject(object.sessionBeginCommand);
                                        }
                                        if (object.sessionKeepaliveCommand != null) {
                                            if (typeof object.sessionKeepaliveCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.sessionKeepaliveCommand: object expected");
                                            message.sessionKeepaliveCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand.fromObject(object.sessionKeepaliveCommand);
                                        }
                                        if (object.sessionEndCurrentCommand != null) {
                                            if (typeof object.sessionEndCurrentCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.sessionEndCurrentCommand: object expected");
                                            message.sessionEndCurrentCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand.fromObject(object.sessionEndCurrentCommand);
                                        }
                                        if (object.sessionInvalidCurrentCommand != null) {
                                            if (typeof object.sessionInvalidCurrentCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.sessionInvalidCurrentCommand: object expected");
                                            message.sessionInvalidCurrentCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand.fromObject(object.sessionInvalidCurrentCommand);
                                        }
                                        if (object.projectLoadCommand != null) {
                                            if (typeof object.projectLoadCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.projectLoadCommand: object expected");
                                            message.projectLoadCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand.fromObject(object.projectLoadCommand);
                                        }
                                        if (object.projectSaveCommand != null) {
                                            if (typeof object.projectSaveCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.projectSaveCommand: object expected");
                                            message.projectSaveCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand.fromObject(object.projectSaveCommand);
                                        }
                                        if (object.projectNewCommand != null) {
                                            if (typeof object.projectNewCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.projectNewCommand: object expected");
                                            message.projectNewCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand.fromObject(object.projectNewCommand);
                                        }
                                        if (object.projectCloseCommand != null) {
                                            if (typeof object.projectCloseCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.projectCloseCommand: object expected");
                                            message.projectCloseCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand.fromObject(object.projectCloseCommand);
                                        }
                                        if (object.editorUndoCommand != null) {
                                            if (typeof object.editorUndoCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorUndoCommand: object expected");
                                            message.editorUndoCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand.fromObject(object.editorUndoCommand);
                                        }
                                        if (object.editorRedoCommand != null) {
                                            if (typeof object.editorRedoCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorRedoCommand: object expected");
                                            message.editorRedoCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand.fromObject(object.editorRedoCommand);
                                        }
                                        if (object.editorGetStackSizeCommand != null) {
                                            if (typeof object.editorGetStackSizeCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorGetStackSizeCommand: object expected");
                                            message.editorGetStackSizeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand.fromObject(object.editorGetStackSizeCommand);
                                        }
                                        if (object.editorSetCanvasPropertiesCommand != null) {
                                            if (typeof object.editorSetCanvasPropertiesCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetCanvasPropertiesCommand: object expected");
                                            message.editorSetCanvasPropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand.fromObject(object.editorSetCanvasPropertiesCommand);
                                        }
                                        if (object.editorGetCanvasPropertiesCommand != null) {
                                            if (typeof object.editorGetCanvasPropertiesCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorGetCanvasPropertiesCommand: object expected");
                                            message.editorGetCanvasPropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand.fromObject(object.editorGetCanvasPropertiesCommand);
                                        }
                                        if (object.editorAddMainClipCommand != null) {
                                            if (typeof object.editorAddMainClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorAddMainClipCommand: object expected");
                                            message.editorAddMainClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand.fromObject(object.editorAddMainClipCommand);
                                        }
                                        if (object.editorAddLookupClipCommand != null) {
                                            if (typeof object.editorAddLookupClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorAddLookupClipCommand: object expected");
                                            message.editorAddLookupClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand.fromObject(object.editorAddLookupClipCommand);
                                        }
                                        if (object.editorAddPipClipCommand != null) {
                                            if (typeof object.editorAddPipClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorAddPipClipCommand: object expected");
                                            message.editorAddPipClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand.fromObject(object.editorAddPipClipCommand);
                                        }
                                        if (object.editorAddMusicClipCommand != null) {
                                            if (typeof object.editorAddMusicClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorAddMusicClipCommand: object expected");
                                            message.editorAddMusicClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand.fromObject(object.editorAddMusicClipCommand);
                                        }
                                        if (object.editorAddTextClipCommand != null) {
                                            if (typeof object.editorAddTextClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorAddTextClipCommand: object expected");
                                            message.editorAddTextClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand.fromObject(object.editorAddTextClipCommand);
                                        }
                                        if (object.editorAddStickerClipCommand != null) {
                                            if (typeof object.editorAddStickerClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorAddStickerClipCommand: object expected");
                                            message.editorAddStickerClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand.fromObject(object.editorAddStickerClipCommand);
                                        }
                                        if (object.editorAddExtensionClipCommand != null) {
                                            if (typeof object.editorAddExtensionClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorAddExtensionClipCommand: object expected");
                                            message.editorAddExtensionClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand.fromObject(object.editorAddExtensionClipCommand);
                                        }
                                        if (object.editorChangeClipResourceCommand != null) {
                                            if (typeof object.editorChangeClipResourceCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorChangeClipResourceCommand: object expected");
                                            message.editorChangeClipResourceCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand.fromObject(object.editorChangeClipResourceCommand);
                                        }
                                        if (object.editorSplitClipCommand != null) {
                                            if (typeof object.editorSplitClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSplitClipCommand: object expected");
                                            message.editorSplitClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand.fromObject(object.editorSplitClipCommand);
                                        }
                                        if (object.editorDeleteClipCommand != null) {
                                            if (typeof object.editorDeleteClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorDeleteClipCommand: object expected");
                                            message.editorDeleteClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand.fromObject(object.editorDeleteClipCommand);
                                        }
                                        if (object.editorMoveClipCommand != null) {
                                            if (typeof object.editorMoveClipCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorMoveClipCommand: object expected");
                                            message.editorMoveClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand.fromObject(object.editorMoveClipCommand);
                                        }
                                        if (object.editorRemoveTrackCommand != null) {
                                            if (typeof object.editorRemoveTrackCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorRemoveTrackCommand: object expected");
                                            message.editorRemoveTrackCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand.fromObject(object.editorRemoveTrackCommand);
                                        }
                                        if (object.editorSetClipLookupCommand != null) {
                                            if (typeof object.editorSetClipLookupCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetClipLookupCommand: object expected");
                                            message.editorSetClipLookupCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand.fromObject(object.editorSetClipLookupCommand);
                                        }
                                        if (object.editorSetTransitionDurationUsCommand != null) {
                                            if (typeof object.editorSetTransitionDurationUsCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTransitionDurationUsCommand: object expected");
                                            message.editorSetTransitionDurationUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand.fromObject(object.editorSetTransitionDurationUsCommand);
                                        }
                                        if (object.editorRemoveTransitionCommand != null) {
                                            if (typeof object.editorRemoveTransitionCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorRemoveTransitionCommand: object expected");
                                            message.editorRemoveTransitionCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand.fromObject(object.editorRemoveTransitionCommand);
                                        }
                                        if (object.editorSetClipCropCommand != null) {
                                            if (typeof object.editorSetClipCropCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetClipCropCommand: object expected");
                                            message.editorSetClipCropCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand.fromObject(object.editorSetClipCropCommand);
                                        }
                                        if (object.editorSetClipCanvasBackgroundCommand != null) {
                                            if (typeof object.editorSetClipCanvasBackgroundCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetClipCanvasBackgroundCommand: object expected");
                                            message.editorSetClipCanvasBackgroundCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand.fromObject(object.editorSetClipCanvasBackgroundCommand);
                                        }
                                        if (object.editorSetClipCanvasBackgroundResCommand != null) {
                                            if (typeof object.editorSetClipCanvasBackgroundResCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetClipCanvasBackgroundResCommand: object expected");
                                            message.editorSetClipCanvasBackgroundResCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand.fromObject(object.editorSetClipCanvasBackgroundResCommand);
                                        }
                                        if (object.editorSetClipCanvasBackgroundBlurTypeCommand != null) {
                                            if (typeof object.editorSetClipCanvasBackgroundBlurTypeCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetClipCanvasBackgroundBlurTypeCommand: object expected");
                                            message.editorSetClipCanvasBackgroundBlurTypeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand.fromObject(object.editorSetClipCanvasBackgroundBlurTypeCommand);
                                        }
                                        if (object.editorDeleteMaterialCommand != null) {
                                            if (typeof object.editorDeleteMaterialCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorDeleteMaterialCommand: object expected");
                                            message.editorDeleteMaterialCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand.fromObject(object.editorDeleteMaterialCommand);
                                        }
                                        if (object.editorCheckToAddMaterialCommand != null) {
                                            if (typeof object.editorCheckToAddMaterialCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorCheckToAddMaterialCommand: object expected");
                                            message.editorCheckToAddMaterialCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand.fromObject(object.editorCheckToAddMaterialCommand);
                                        }
                                        if (object.editorSetTransitionEffectCommand != null) {
                                            if (typeof object.editorSetTransitionEffectCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTransitionEffectCommand: object expected");
                                            message.editorSetTransitionEffectCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand.fromObject(object.editorSetTransitionEffectCommand);
                                        }
                                        if (object.editorSetResourcePropertiesCommand != null) {
                                            if (typeof object.editorSetResourcePropertiesCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetResourcePropertiesCommand: object expected");
                                            message.editorSetResourcePropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand.fromObject(object.editorSetResourcePropertiesCommand);
                                        }
                                        if (object.editorGetResourceDurationUsCommand != null) {
                                            if (typeof object.editorGetResourceDurationUsCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorGetResourceDurationUsCommand: object expected");
                                            message.editorGetResourceDurationUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand.fromObject(object.editorGetResourceDurationUsCommand);
                                        }
                                        if (object.editorGetResourceSizeCommand != null) {
                                            if (typeof object.editorGetResourceSizeCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorGetResourceSizeCommand: object expected");
                                            message.editorGetResourceSizeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand.fromObject(object.editorGetResourceSizeCommand);
                                        }
                                        if (object.editorGetClipResourceInfoCommand != null) {
                                            if (typeof object.editorGetClipResourceInfoCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorGetClipResourceInfoCommand: object expected");
                                            message.editorGetClipResourceInfoCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand.fromObject(object.editorGetClipResourceInfoCommand);
                                        }
                                        if (object.editorSetResourceFullKeyFrameWithResIdCommand != null) {
                                            if (typeof object.editorSetResourceFullKeyFrameWithResIdCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetResourceFullKeyFrameWithResIdCommand: object expected");
                                            message.editorSetResourceFullKeyFrameWithResIdCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand.fromObject(object.editorSetResourceFullKeyFrameWithResIdCommand);
                                        }
                                        if (object.editorSetTextCommand != null) {
                                            if (typeof object.editorSetTextCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextCommand: object expected");
                                            message.editorSetTextCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand.fromObject(object.editorSetTextCommand);
                                        }
                                        if (object.editorSetTextColorCommand != null) {
                                            if (typeof object.editorSetTextColorCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextColorCommand: object expected");
                                            message.editorSetTextColorCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand.fromObject(object.editorSetTextColorCommand);
                                        }
                                        if (object.editorSetTextFontCommand != null) {
                                            if (typeof object.editorSetTextFontCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextFontCommand: object expected");
                                            message.editorSetTextFontCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand.fromObject(object.editorSetTextFontCommand);
                                        }
                                        if (object.editorSetDefaultFontFileCommand != null) {
                                            if (typeof object.editorSetDefaultFontFileCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetDefaultFontFileCommand: object expected");
                                            message.editorSetDefaultFontFileCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand.fromObject(object.editorSetDefaultFontFileCommand);
                                        }
                                        if (object.editorSetTextShadowCommand != null) {
                                            if (typeof object.editorSetTextShadowCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextShadowCommand: object expected");
                                            message.editorSetTextShadowCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand.fromObject(object.editorSetTextShadowCommand);
                                        }
                                        if (object.editorSetTextAlignmentCommand != null) {
                                            if (typeof object.editorSetTextAlignmentCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextAlignmentCommand: object expected");
                                            message.editorSetTextAlignmentCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand.fromObject(object.editorSetTextAlignmentCommand);
                                        }
                                        if (object.editorSetTextOutlineCommand != null) {
                                            if (typeof object.editorSetTextOutlineCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextOutlineCommand: object expected");
                                            message.editorSetTextOutlineCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand.fromObject(object.editorSetTextOutlineCommand);
                                        }
                                        if (object.editorSetTextUnderlineCommand != null) {
                                            if (typeof object.editorSetTextUnderlineCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextUnderlineCommand: object expected");
                                            message.editorSetTextUnderlineCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand.fromObject(object.editorSetTextUnderlineCommand);
                                        }
                                        if (object.editorSetTextBoldCommand != null) {
                                            if (typeof object.editorSetTextBoldCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextBoldCommand: object expected");
                                            message.editorSetTextBoldCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand.fromObject(object.editorSetTextBoldCommand);
                                        }
                                        if (object.editorSetTextItalicsCommand != null) {
                                            if (typeof object.editorSetTextItalicsCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextItalicsCommand: object expected");
                                            message.editorSetTextItalicsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand.fromObject(object.editorSetTextItalicsCommand);
                                        }
                                        if (object.editorSetTextWordSpaceCommand != null) {
                                            if (typeof object.editorSetTextWordSpaceCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetTextWordSpaceCommand: object expected");
                                            message.editorSetTextWordSpaceCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand.fromObject(object.editorSetTextWordSpaceCommand);
                                        }
                                        if (object.editorSetScaleCommand != null) {
                                            if (typeof object.editorSetScaleCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetScaleCommand: object expected");
                                            message.editorSetScaleCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand.fromObject(object.editorSetScaleCommand);
                                        }
                                        if (object.editorSetPositionCommand != null) {
                                            if (typeof object.editorSetPositionCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetPositionCommand: object expected");
                                            message.editorSetPositionCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand.fromObject(object.editorSetPositionCommand);
                                        }
                                        if (object.editorSetAnchorCommand != null) {
                                            if (typeof object.editorSetAnchorCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetAnchorCommand: object expected");
                                            message.editorSetAnchorCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand.fromObject(object.editorSetAnchorCommand);
                                        }
                                        if (object.editorSetRotationCommand != null) {
                                            if (typeof object.editorSetRotationCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetRotationCommand: object expected");
                                            message.editorSetRotationCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand.fromObject(object.editorSetRotationCommand);
                                        }
                                        if (object.editorSetClipStartTimeUsCommand != null) {
                                            if (typeof object.editorSetClipStartTimeUsCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetClipStartTimeUsCommand: object expected");
                                            message.editorSetClipStartTimeUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand.fromObject(object.editorSetClipStartTimeUsCommand);
                                        }
                                        if (object.editorSetSourceTimeRangeCommand != null) {
                                            if (typeof object.editorSetSourceTimeRangeCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetSourceTimeRangeCommand: object expected");
                                            message.editorSetSourceTimeRangeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand.fromObject(object.editorSetSourceTimeRangeCommand);
                                        }
                                        if (object.editorSetClipSpeedCommand != null) {
                                            if (typeof object.editorSetClipSpeedCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetClipSpeedCommand: object expected");
                                            message.editorSetClipSpeedCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand.fromObject(object.editorSetClipSpeedCommand);
                                        }
                                        if (object.editorSetClipVolumeCommand != null) {
                                            if (typeof object.editorSetClipVolumeCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetClipVolumeCommand: object expected");
                                            message.editorSetClipVolumeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand.fromObject(object.editorSetClipVolumeCommand);
                                        }
                                        if (object.editorGetClipPropListCommand != null) {
                                            if (typeof object.editorGetClipPropListCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorGetClipPropListCommand: object expected");
                                            message.editorGetClipPropListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand.fromObject(object.editorGetClipPropListCommand);
                                        }
                                        if (object.editorSetClipPropListCommand != null) {
                                            if (typeof object.editorSetClipPropListCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorSetClipPropListCommand: object expected");
                                            message.editorSetClipPropListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand.fromObject(object.editorSetClipPropListCommand);
                                        }
                                        if (object.editorGetTrackIdListCommand != null) {
                                            if (typeof object.editorGetTrackIdListCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorGetTrackIdListCommand: object expected");
                                            message.editorGetTrackIdListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand.fromObject(object.editorGetTrackIdListCommand);
                                        }
                                        if (object.editorGetClipIdListCommand != null) {
                                            if (typeof object.editorGetClipIdListCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.editorGetClipIdListCommand: object expected");
                                            message.editorGetClipIdListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand.fromObject(object.editorGetClipIdListCommand);
                                        }
                                        if (object.viewerSetPropertiesCommand != null) {
                                            if (typeof object.viewerSetPropertiesCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.viewerSetPropertiesCommand: object expected");
                                            message.viewerSetPropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand.fromObject(object.viewerSetPropertiesCommand);
                                        }
                                        if (object.viewerPrepareCommand != null) {
                                            if (typeof object.viewerPrepareCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.viewerPrepareCommand: object expected");
                                            message.viewerPrepareCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand.fromObject(object.viewerPrepareCommand);
                                        }
                                        if (object.viewerStartCommand != null) {
                                            if (typeof object.viewerStartCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.viewerStartCommand: object expected");
                                            message.viewerStartCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand.fromObject(object.viewerStartCommand);
                                        }
                                        if (object.viewerPauseCommand != null) {
                                            if (typeof object.viewerPauseCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.viewerPauseCommand: object expected");
                                            message.viewerPauseCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand.fromObject(object.viewerPauseCommand);
                                        }
                                        if (object.viewerStopCommand != null) {
                                            if (typeof object.viewerStopCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.viewerStopCommand: object expected");
                                            message.viewerStopCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand.fromObject(object.viewerStopCommand);
                                        }
                                        if (object.viewerSeekToCommand != null) {
                                            if (typeof object.viewerSeekToCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.viewerSeekToCommand: object expected");
                                            message.viewerSeekToCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand.fromObject(object.viewerSeekToCommand);
                                        }
                                        if (object.viewerGetStateCommand != null) {
                                            if (typeof object.viewerGetStateCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.viewerGetStateCommand: object expected");
                                            message.viewerGetStateCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand.fromObject(object.viewerGetStateCommand);
                                        }
                                        if (object.viewerGetDurationUsCommand != null) {
                                            if (typeof object.viewerGetDurationUsCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.viewerGetDurationUsCommand: object expected");
                                            message.viewerGetDurationUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand.fromObject(object.viewerGetDurationUsCommand);
                                        }
                                        if (object.exporterRunCommand != null) {
                                            if (typeof object.exporterRunCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.exporterRunCommand: object expected");
                                            message.exporterRunCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand.fromObject(object.exporterRunCommand);
                                        }
                                        if (object.exporterCancelCommand != null) {
                                            if (typeof object.exporterCancelCommand !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command.exporterCancelCommand: object expected");
                                            message.exporterCancelCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand.fromObject(object.exporterCancelCommand);
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a Command message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command} message Command
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    Command.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.commandHeader = null;
                                            object.forceResp = false;
                                        }
                                        if (message.commandHeader != null && message.hasOwnProperty("commandHeader"))
                                            object.commandHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.toObject(message.commandHeader, options);
                                        if (message.forceResp != null && message.hasOwnProperty("forceResp"))
                                            object.forceResp = message.forceResp;
                                        if (message.SystemRequireResendCommand != null && message.hasOwnProperty("SystemRequireResendCommand")) {
                                            object.SystemRequireResendCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand.toObject(message.SystemRequireResendCommand, options);
                                            if (options.oneofs)
                                                object.data = "SystemRequireResendCommand";
                                        }
                                        if (message.sessionCreateNewCommand != null && message.hasOwnProperty("sessionCreateNewCommand")) {
                                            object.sessionCreateNewCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand.toObject(message.sessionCreateNewCommand, options);
                                            if (options.oneofs)
                                                object.data = "sessionCreateNewCommand";
                                        }
                                        if (message.sessionPrepareRTCCommand != null && message.hasOwnProperty("sessionPrepareRTCCommand")) {
                                            object.sessionPrepareRTCCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand.toObject(message.sessionPrepareRTCCommand, options);
                                            if (options.oneofs)
                                                object.data = "sessionPrepareRTCCommand";
                                        }
                                        if (message.sessionBeginCommand != null && message.hasOwnProperty("sessionBeginCommand")) {
                                            object.sessionBeginCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand.toObject(message.sessionBeginCommand, options);
                                            if (options.oneofs)
                                                object.data = "sessionBeginCommand";
                                        }
                                        if (message.sessionKeepaliveCommand != null && message.hasOwnProperty("sessionKeepaliveCommand")) {
                                            object.sessionKeepaliveCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand.toObject(message.sessionKeepaliveCommand, options);
                                            if (options.oneofs)
                                                object.data = "sessionKeepaliveCommand";
                                        }
                                        if (message.sessionEndCurrentCommand != null && message.hasOwnProperty("sessionEndCurrentCommand")) {
                                            object.sessionEndCurrentCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand.toObject(message.sessionEndCurrentCommand, options);
                                            if (options.oneofs)
                                                object.data = "sessionEndCurrentCommand";
                                        }
                                        if (message.sessionInvalidCurrentCommand != null && message.hasOwnProperty("sessionInvalidCurrentCommand")) {
                                            object.sessionInvalidCurrentCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand.toObject(message.sessionInvalidCurrentCommand, options);
                                            if (options.oneofs)
                                                object.data = "sessionInvalidCurrentCommand";
                                        }
                                        if (message.projectLoadCommand != null && message.hasOwnProperty("projectLoadCommand")) {
                                            object.projectLoadCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand.toObject(message.projectLoadCommand, options);
                                            if (options.oneofs)
                                                object.data = "projectLoadCommand";
                                        }
                                        if (message.projectSaveCommand != null && message.hasOwnProperty("projectSaveCommand")) {
                                            object.projectSaveCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand.toObject(message.projectSaveCommand, options);
                                            if (options.oneofs)
                                                object.data = "projectSaveCommand";
                                        }
                                        if (message.projectNewCommand != null && message.hasOwnProperty("projectNewCommand")) {
                                            object.projectNewCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand.toObject(message.projectNewCommand, options);
                                            if (options.oneofs)
                                                object.data = "projectNewCommand";
                                        }
                                        if (message.projectCloseCommand != null && message.hasOwnProperty("projectCloseCommand")) {
                                            object.projectCloseCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand.toObject(message.projectCloseCommand, options);
                                            if (options.oneofs)
                                                object.data = "projectCloseCommand";
                                        }
                                        if (message.editorUndoCommand != null && message.hasOwnProperty("editorUndoCommand")) {
                                            object.editorUndoCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand.toObject(message.editorUndoCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorUndoCommand";
                                        }
                                        if (message.editorRedoCommand != null && message.hasOwnProperty("editorRedoCommand")) {
                                            object.editorRedoCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand.toObject(message.editorRedoCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorRedoCommand";
                                        }
                                        if (message.editorGetStackSizeCommand != null && message.hasOwnProperty("editorGetStackSizeCommand")) {
                                            object.editorGetStackSizeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand.toObject(message.editorGetStackSizeCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorGetStackSizeCommand";
                                        }
                                        if (message.editorSetCanvasPropertiesCommand != null && message.hasOwnProperty("editorSetCanvasPropertiesCommand")) {
                                            object.editorSetCanvasPropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand.toObject(message.editorSetCanvasPropertiesCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetCanvasPropertiesCommand";
                                        }
                                        if (message.editorGetCanvasPropertiesCommand != null && message.hasOwnProperty("editorGetCanvasPropertiesCommand")) {
                                            object.editorGetCanvasPropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand.toObject(message.editorGetCanvasPropertiesCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorGetCanvasPropertiesCommand";
                                        }
                                        if (message.editorAddMainClipCommand != null && message.hasOwnProperty("editorAddMainClipCommand")) {
                                            object.editorAddMainClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand.toObject(message.editorAddMainClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorAddMainClipCommand";
                                        }
                                        if (message.editorAddLookupClipCommand != null && message.hasOwnProperty("editorAddLookupClipCommand")) {
                                            object.editorAddLookupClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand.toObject(message.editorAddLookupClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorAddLookupClipCommand";
                                        }
                                        if (message.editorAddPipClipCommand != null && message.hasOwnProperty("editorAddPipClipCommand")) {
                                            object.editorAddPipClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand.toObject(message.editorAddPipClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorAddPipClipCommand";
                                        }
                                        if (message.editorAddMusicClipCommand != null && message.hasOwnProperty("editorAddMusicClipCommand")) {
                                            object.editorAddMusicClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand.toObject(message.editorAddMusicClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorAddMusicClipCommand";
                                        }
                                        if (message.editorAddTextClipCommand != null && message.hasOwnProperty("editorAddTextClipCommand")) {
                                            object.editorAddTextClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand.toObject(message.editorAddTextClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorAddTextClipCommand";
                                        }
                                        if (message.editorAddStickerClipCommand != null && message.hasOwnProperty("editorAddStickerClipCommand")) {
                                            object.editorAddStickerClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand.toObject(message.editorAddStickerClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorAddStickerClipCommand";
                                        }
                                        if (message.editorAddExtensionClipCommand != null && message.hasOwnProperty("editorAddExtensionClipCommand")) {
                                            object.editorAddExtensionClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand.toObject(message.editorAddExtensionClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorAddExtensionClipCommand";
                                        }
                                        if (message.editorChangeClipResourceCommand != null && message.hasOwnProperty("editorChangeClipResourceCommand")) {
                                            object.editorChangeClipResourceCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand.toObject(message.editorChangeClipResourceCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorChangeClipResourceCommand";
                                        }
                                        if (message.editorSplitClipCommand != null && message.hasOwnProperty("editorSplitClipCommand")) {
                                            object.editorSplitClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand.toObject(message.editorSplitClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSplitClipCommand";
                                        }
                                        if (message.editorDeleteClipCommand != null && message.hasOwnProperty("editorDeleteClipCommand")) {
                                            object.editorDeleteClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand.toObject(message.editorDeleteClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorDeleteClipCommand";
                                        }
                                        if (message.editorMoveClipCommand != null && message.hasOwnProperty("editorMoveClipCommand")) {
                                            object.editorMoveClipCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand.toObject(message.editorMoveClipCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorMoveClipCommand";
                                        }
                                        if (message.editorRemoveTrackCommand != null && message.hasOwnProperty("editorRemoveTrackCommand")) {
                                            object.editorRemoveTrackCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand.toObject(message.editorRemoveTrackCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorRemoveTrackCommand";
                                        }
                                        if (message.editorSetClipLookupCommand != null && message.hasOwnProperty("editorSetClipLookupCommand")) {
                                            object.editorSetClipLookupCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand.toObject(message.editorSetClipLookupCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetClipLookupCommand";
                                        }
                                        if (message.editorSetTransitionDurationUsCommand != null && message.hasOwnProperty("editorSetTransitionDurationUsCommand")) {
                                            object.editorSetTransitionDurationUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand.toObject(message.editorSetTransitionDurationUsCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTransitionDurationUsCommand";
                                        }
                                        if (message.editorRemoveTransitionCommand != null && message.hasOwnProperty("editorRemoveTransitionCommand")) {
                                            object.editorRemoveTransitionCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand.toObject(message.editorRemoveTransitionCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorRemoveTransitionCommand";
                                        }
                                        if (message.editorSetClipCropCommand != null && message.hasOwnProperty("editorSetClipCropCommand")) {
                                            object.editorSetClipCropCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand.toObject(message.editorSetClipCropCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetClipCropCommand";
                                        }
                                        if (message.editorSetClipCanvasBackgroundCommand != null && message.hasOwnProperty("editorSetClipCanvasBackgroundCommand")) {
                                            object.editorSetClipCanvasBackgroundCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand.toObject(message.editorSetClipCanvasBackgroundCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetClipCanvasBackgroundCommand";
                                        }
                                        if (message.editorSetClipCanvasBackgroundResCommand != null && message.hasOwnProperty("editorSetClipCanvasBackgroundResCommand")) {
                                            object.editorSetClipCanvasBackgroundResCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand.toObject(message.editorSetClipCanvasBackgroundResCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetClipCanvasBackgroundResCommand";
                                        }
                                        if (message.editorSetClipCanvasBackgroundBlurTypeCommand != null && message.hasOwnProperty("editorSetClipCanvasBackgroundBlurTypeCommand")) {
                                            object.editorSetClipCanvasBackgroundBlurTypeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand.toObject(message.editorSetClipCanvasBackgroundBlurTypeCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetClipCanvasBackgroundBlurTypeCommand";
                                        }
                                        if (message.editorDeleteMaterialCommand != null && message.hasOwnProperty("editorDeleteMaterialCommand")) {
                                            object.editorDeleteMaterialCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand.toObject(message.editorDeleteMaterialCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorDeleteMaterialCommand";
                                        }
                                        if (message.editorCheckToAddMaterialCommand != null && message.hasOwnProperty("editorCheckToAddMaterialCommand")) {
                                            object.editorCheckToAddMaterialCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand.toObject(message.editorCheckToAddMaterialCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorCheckToAddMaterialCommand";
                                        }
                                        if (message.editorSetTransitionEffectCommand != null && message.hasOwnProperty("editorSetTransitionEffectCommand")) {
                                            object.editorSetTransitionEffectCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand.toObject(message.editorSetTransitionEffectCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTransitionEffectCommand";
                                        }
                                        if (message.editorSetResourcePropertiesCommand != null && message.hasOwnProperty("editorSetResourcePropertiesCommand")) {
                                            object.editorSetResourcePropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand.toObject(message.editorSetResourcePropertiesCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetResourcePropertiesCommand";
                                        }
                                        if (message.editorGetResourceDurationUsCommand != null && message.hasOwnProperty("editorGetResourceDurationUsCommand")) {
                                            object.editorGetResourceDurationUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand.toObject(message.editorGetResourceDurationUsCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorGetResourceDurationUsCommand";
                                        }
                                        if (message.editorGetResourceSizeCommand != null && message.hasOwnProperty("editorGetResourceSizeCommand")) {
                                            object.editorGetResourceSizeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand.toObject(message.editorGetResourceSizeCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorGetResourceSizeCommand";
                                        }
                                        if (message.editorGetClipResourceInfoCommand != null && message.hasOwnProperty("editorGetClipResourceInfoCommand")) {
                                            object.editorGetClipResourceInfoCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand.toObject(message.editorGetClipResourceInfoCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorGetClipResourceInfoCommand";
                                        }
                                        if (message.editorSetResourceFullKeyFrameWithResIdCommand != null && message.hasOwnProperty("editorSetResourceFullKeyFrameWithResIdCommand")) {
                                            object.editorSetResourceFullKeyFrameWithResIdCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand.toObject(message.editorSetResourceFullKeyFrameWithResIdCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetResourceFullKeyFrameWithResIdCommand";
                                        }
                                        if (message.editorSetTextCommand != null && message.hasOwnProperty("editorSetTextCommand")) {
                                            object.editorSetTextCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand.toObject(message.editorSetTextCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextCommand";
                                        }
                                        if (message.editorSetTextColorCommand != null && message.hasOwnProperty("editorSetTextColorCommand")) {
                                            object.editorSetTextColorCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand.toObject(message.editorSetTextColorCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextColorCommand";
                                        }
                                        if (message.editorSetTextFontCommand != null && message.hasOwnProperty("editorSetTextFontCommand")) {
                                            object.editorSetTextFontCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand.toObject(message.editorSetTextFontCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextFontCommand";
                                        }
                                        if (message.editorSetDefaultFontFileCommand != null && message.hasOwnProperty("editorSetDefaultFontFileCommand")) {
                                            object.editorSetDefaultFontFileCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand.toObject(message.editorSetDefaultFontFileCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetDefaultFontFileCommand";
                                        }
                                        if (message.editorSetTextShadowCommand != null && message.hasOwnProperty("editorSetTextShadowCommand")) {
                                            object.editorSetTextShadowCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand.toObject(message.editorSetTextShadowCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextShadowCommand";
                                        }
                                        if (message.editorSetTextAlignmentCommand != null && message.hasOwnProperty("editorSetTextAlignmentCommand")) {
                                            object.editorSetTextAlignmentCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand.toObject(message.editorSetTextAlignmentCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextAlignmentCommand";
                                        }
                                        if (message.editorSetTextOutlineCommand != null && message.hasOwnProperty("editorSetTextOutlineCommand")) {
                                            object.editorSetTextOutlineCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand.toObject(message.editorSetTextOutlineCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextOutlineCommand";
                                        }
                                        if (message.editorSetTextUnderlineCommand != null && message.hasOwnProperty("editorSetTextUnderlineCommand")) {
                                            object.editorSetTextUnderlineCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand.toObject(message.editorSetTextUnderlineCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextUnderlineCommand";
                                        }
                                        if (message.editorSetTextBoldCommand != null && message.hasOwnProperty("editorSetTextBoldCommand")) {
                                            object.editorSetTextBoldCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand.toObject(message.editorSetTextBoldCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextBoldCommand";
                                        }
                                        if (message.editorSetTextItalicsCommand != null && message.hasOwnProperty("editorSetTextItalicsCommand")) {
                                            object.editorSetTextItalicsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand.toObject(message.editorSetTextItalicsCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextItalicsCommand";
                                        }
                                        if (message.editorSetTextWordSpaceCommand != null && message.hasOwnProperty("editorSetTextWordSpaceCommand")) {
                                            object.editorSetTextWordSpaceCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand.toObject(message.editorSetTextWordSpaceCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetTextWordSpaceCommand";
                                        }
                                        if (message.editorSetScaleCommand != null && message.hasOwnProperty("editorSetScaleCommand")) {
                                            object.editorSetScaleCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand.toObject(message.editorSetScaleCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetScaleCommand";
                                        }
                                        if (message.editorSetPositionCommand != null && message.hasOwnProperty("editorSetPositionCommand")) {
                                            object.editorSetPositionCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand.toObject(message.editorSetPositionCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetPositionCommand";
                                        }
                                        if (message.editorSetAnchorCommand != null && message.hasOwnProperty("editorSetAnchorCommand")) {
                                            object.editorSetAnchorCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand.toObject(message.editorSetAnchorCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetAnchorCommand";
                                        }
                                        if (message.editorSetRotationCommand != null && message.hasOwnProperty("editorSetRotationCommand")) {
                                            object.editorSetRotationCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand.toObject(message.editorSetRotationCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetRotationCommand";
                                        }
                                        if (message.editorSetClipStartTimeUsCommand != null && message.hasOwnProperty("editorSetClipStartTimeUsCommand")) {
                                            object.editorSetClipStartTimeUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand.toObject(message.editorSetClipStartTimeUsCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetClipStartTimeUsCommand";
                                        }
                                        if (message.editorSetSourceTimeRangeCommand != null && message.hasOwnProperty("editorSetSourceTimeRangeCommand")) {
                                            object.editorSetSourceTimeRangeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand.toObject(message.editorSetSourceTimeRangeCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetSourceTimeRangeCommand";
                                        }
                                        if (message.editorSetClipSpeedCommand != null && message.hasOwnProperty("editorSetClipSpeedCommand")) {
                                            object.editorSetClipSpeedCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand.toObject(message.editorSetClipSpeedCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetClipSpeedCommand";
                                        }
                                        if (message.editorSetClipVolumeCommand != null && message.hasOwnProperty("editorSetClipVolumeCommand")) {
                                            object.editorSetClipVolumeCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand.toObject(message.editorSetClipVolumeCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetClipVolumeCommand";
                                        }
                                        if (message.editorGetClipPropListCommand != null && message.hasOwnProperty("editorGetClipPropListCommand")) {
                                            object.editorGetClipPropListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand.toObject(message.editorGetClipPropListCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorGetClipPropListCommand";
                                        }
                                        if (message.editorSetClipPropListCommand != null && message.hasOwnProperty("editorSetClipPropListCommand")) {
                                            object.editorSetClipPropListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand.toObject(message.editorSetClipPropListCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorSetClipPropListCommand";
                                        }
                                        if (message.editorGetTrackIdListCommand != null && message.hasOwnProperty("editorGetTrackIdListCommand")) {
                                            object.editorGetTrackIdListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand.toObject(message.editorGetTrackIdListCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorGetTrackIdListCommand";
                                        }
                                        if (message.editorGetClipIdListCommand != null && message.hasOwnProperty("editorGetClipIdListCommand")) {
                                            object.editorGetClipIdListCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand.toObject(message.editorGetClipIdListCommand, options);
                                            if (options.oneofs)
                                                object.data = "editorGetClipIdListCommand";
                                        }
                                        if (message.viewerSetPropertiesCommand != null && message.hasOwnProperty("viewerSetPropertiesCommand")) {
                                            object.viewerSetPropertiesCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand.toObject(message.viewerSetPropertiesCommand, options);
                                            if (options.oneofs)
                                                object.data = "viewerSetPropertiesCommand";
                                        }
                                        if (message.viewerPrepareCommand != null && message.hasOwnProperty("viewerPrepareCommand")) {
                                            object.viewerPrepareCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand.toObject(message.viewerPrepareCommand, options);
                                            if (options.oneofs)
                                                object.data = "viewerPrepareCommand";
                                        }
                                        if (message.viewerStartCommand != null && message.hasOwnProperty("viewerStartCommand")) {
                                            object.viewerStartCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand.toObject(message.viewerStartCommand, options);
                                            if (options.oneofs)
                                                object.data = "viewerStartCommand";
                                        }
                                        if (message.viewerPauseCommand != null && message.hasOwnProperty("viewerPauseCommand")) {
                                            object.viewerPauseCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand.toObject(message.viewerPauseCommand, options);
                                            if (options.oneofs)
                                                object.data = "viewerPauseCommand";
                                        }
                                        if (message.viewerStopCommand != null && message.hasOwnProperty("viewerStopCommand")) {
                                            object.viewerStopCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand.toObject(message.viewerStopCommand, options);
                                            if (options.oneofs)
                                                object.data = "viewerStopCommand";
                                        }
                                        if (message.viewerSeekToCommand != null && message.hasOwnProperty("viewerSeekToCommand")) {
                                            object.viewerSeekToCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand.toObject(message.viewerSeekToCommand, options);
                                            if (options.oneofs)
                                                object.data = "viewerSeekToCommand";
                                        }
                                        if (message.viewerGetStateCommand != null && message.hasOwnProperty("viewerGetStateCommand")) {
                                            object.viewerGetStateCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand.toObject(message.viewerGetStateCommand, options);
                                            if (options.oneofs)
                                                object.data = "viewerGetStateCommand";
                                        }
                                        if (message.viewerGetDurationUsCommand != null && message.hasOwnProperty("viewerGetDurationUsCommand")) {
                                            object.viewerGetDurationUsCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand.toObject(message.viewerGetDurationUsCommand, options);
                                            if (options.oneofs)
                                                object.data = "viewerGetDurationUsCommand";
                                        }
                                        if (message.exporterRunCommand != null && message.hasOwnProperty("exporterRunCommand")) {
                                            object.exporterRunCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand.toObject(message.exporterRunCommand, options);
                                            if (options.oneofs)
                                                object.data = "exporterRunCommand";
                                        }
                                        if (message.exporterCancelCommand != null && message.hasOwnProperty("exporterCancelCommand")) {
                                            object.exporterCancelCommand = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand.toObject(message.exporterCancelCommand, options);
                                            if (options.oneofs)
                                                object.data = "exporterCancelCommand";
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this Command to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Command
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    Command.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return Command;
                                })();

                                proto.Result = (function () {

                                    /**
                                     * Properties of a Result.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader|null} [commandHeader] Result commandHeader
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.ERROR_CODE|null} [errCode] Result errCode
                                     * @property {string|null} [errMsg] Result errMsg
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IVoidResult|null} [voidResult] Result voidResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommandResult|null} [sessionCreateNewCommandResult] Result sessionCreateNewCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCommandResult|null} [sessionPrepareRTCommandResult] Result sessionPrepareRTCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommandResult|null} [editorGetStackSizeCommandResult] Result editorGetStackSizeCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommandResult|null} [editorGetCanvasPropertiesCommandResult] Result editorGetCanvasPropertiesCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommandResult|null} [editorAddMainClipCommandResult] Result editorAddMainClipCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommandResult|null} [editorAddLookupClipCommandResult] Result editorAddLookupClipCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommandResult|null} [editorAddPipClipCommandResult] Result editorAddPipClipCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommandResult|null} [editorAddMusicClipCommandResult] Result editorAddMusicClipCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommandResult|null} [editorAddTextClipCommandResult] Result editorAddTextClipCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommandResult|null} [editorAddStickerClipCommandResult] Result editorAddStickerClipCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommandResult|null} [editorAddExtensionClipCommandResult] Result editorAddExtensionClipCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommandResult|null} [editorSplitClipCommandResult] Result editorSplitClipCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommandResult|null} [editorGetResourceDurationUsCommandResult] Result editorGetResourceDurationUsCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommandResult|null} [editorGetResourceSizeCommandResult] Result editorGetResourceSizeCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommandResult|null} [editorGetClipResourceInfoCommandResult] Result editorGetClipResourceInfoCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListResult|null} [editorGetClipPropListResult] Result editorGetClipPropListResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommandResult|null} [editorGetTrackIdListCommandResult] Result editorGetTrackIdListCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommandResult|null} [editorGetClipIdListCommandResult] Result editorGetClipIdListCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommandResult|null} [viewerGetStateCommandResult] Result viewerGetStateCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommandResult|null} [viewerGetDurationUsCommandResult] Result viewerGetDurationUsCommandResult
                                     */

                                    /**
                                     * Constructs a new Result.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a Result.
                                     * @implements IResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IResult=} [properties] Properties to set
                                     */
                                    function Result(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Result commandHeader.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader|null|undefined} commandHeader
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.commandHeader = null;

                                    /**
                                     * Result errCode.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.ERROR_CODE} errCode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.errCode = 0;

                                    /**
                                     * Result errMsg.
                                     * @member {string} errMsg
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.errMsg = "";

                                    /**
                                     * Result voidResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IVoidResult|null|undefined} voidResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.voidResult = null;

                                    /**
                                     * Result sessionCreateNewCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommandResult|null|undefined} sessionCreateNewCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.sessionCreateNewCommandResult = null;

                                    /**
                                     * Result sessionPrepareRTCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCommandResult|null|undefined} sessionPrepareRTCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.sessionPrepareRTCommandResult = null;

                                    /**
                                     * Result editorGetStackSizeCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommandResult|null|undefined} editorGetStackSizeCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorGetStackSizeCommandResult = null;

                                    /**
                                     * Result editorGetCanvasPropertiesCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommandResult|null|undefined} editorGetCanvasPropertiesCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorGetCanvasPropertiesCommandResult = null;

                                    /**
                                     * Result editorAddMainClipCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommandResult|null|undefined} editorAddMainClipCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorAddMainClipCommandResult = null;

                                    /**
                                     * Result editorAddLookupClipCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommandResult|null|undefined} editorAddLookupClipCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorAddLookupClipCommandResult = null;

                                    /**
                                     * Result editorAddPipClipCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommandResult|null|undefined} editorAddPipClipCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorAddPipClipCommandResult = null;

                                    /**
                                     * Result editorAddMusicClipCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommandResult|null|undefined} editorAddMusicClipCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorAddMusicClipCommandResult = null;

                                    /**
                                     * Result editorAddTextClipCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommandResult|null|undefined} editorAddTextClipCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorAddTextClipCommandResult = null;

                                    /**
                                     * Result editorAddStickerClipCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommandResult|null|undefined} editorAddStickerClipCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorAddStickerClipCommandResult = null;

                                    /**
                                     * Result editorAddExtensionClipCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommandResult|null|undefined} editorAddExtensionClipCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorAddExtensionClipCommandResult = null;

                                    /**
                                     * Result editorSplitClipCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommandResult|null|undefined} editorSplitClipCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorSplitClipCommandResult = null;

                                    /**
                                     * Result editorGetResourceDurationUsCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommandResult|null|undefined} editorGetResourceDurationUsCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorGetResourceDurationUsCommandResult = null;

                                    /**
                                     * Result editorGetResourceSizeCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommandResult|null|undefined} editorGetResourceSizeCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorGetResourceSizeCommandResult = null;

                                    /**
                                     * Result editorGetClipResourceInfoCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommandResult|null|undefined} editorGetClipResourceInfoCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorGetClipResourceInfoCommandResult = null;

                                    /**
                                     * Result editorGetClipPropListResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListResult|null|undefined} editorGetClipPropListResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorGetClipPropListResult = null;

                                    /**
                                     * Result editorGetTrackIdListCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommandResult|null|undefined} editorGetTrackIdListCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorGetTrackIdListCommandResult = null;

                                    /**
                                     * Result editorGetClipIdListCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommandResult|null|undefined} editorGetClipIdListCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.editorGetClipIdListCommandResult = null;

                                    /**
                                     * Result viewerGetStateCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommandResult|null|undefined} viewerGetStateCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.viewerGetStateCommandResult = null;

                                    /**
                                     * Result viewerGetDurationUsCommandResult.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommandResult|null|undefined} viewerGetDurationUsCommandResult
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Result.prototype.viewerGetDurationUsCommandResult = null;

                                    // OneOf field names bound to virtual getters and setters
                                    var $oneOfFields;

                                    /**
                                     * Result data.
                                     * @member {"voidResult"|"sessionCreateNewCommandResult"|"sessionPrepareRTCommandResult"|"editorGetStackSizeCommandResult"|"editorGetCanvasPropertiesCommandResult"|"editorAddMainClipCommandResult"|"editorAddLookupClipCommandResult"|"editorAddPipClipCommandResult"|"editorAddMusicClipCommandResult"|"editorAddTextClipCommandResult"|"editorAddStickerClipCommandResult"|"editorAddExtensionClipCommandResult"|"editorSplitClipCommandResult"|"editorGetResourceDurationUsCommandResult"|"editorGetResourceSizeCommandResult"|"editorGetClipResourceInfoCommandResult"|"editorGetClipPropListResult"|"editorGetTrackIdListCommandResult"|"editorGetClipIdListCommandResult"|"viewerGetStateCommandResult"|"viewerGetDurationUsCommandResult"|undefined} data
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     */
                                    Object.defineProperty(Result.prototype, "data", {
                                        get: $util.oneOfGetter($oneOfFields = ["voidResult", "sessionCreateNewCommandResult", "sessionPrepareRTCommandResult", "editorGetStackSizeCommandResult", "editorGetCanvasPropertiesCommandResult", "editorAddMainClipCommandResult", "editorAddLookupClipCommandResult", "editorAddPipClipCommandResult", "editorAddMusicClipCommandResult", "editorAddTextClipCommandResult", "editorAddStickerClipCommandResult", "editorAddExtensionClipCommandResult", "editorSplitClipCommandResult", "editorGetResourceDurationUsCommandResult", "editorGetResourceSizeCommandResult", "editorGetClipResourceInfoCommandResult", "editorGetClipPropListResult", "editorGetTrackIdListCommandResult", "editorGetClipIdListCommandResult", "viewerGetStateCommandResult", "viewerGetDurationUsCommandResult"]),
                                        set: $util.oneOfSetter($oneOfFields)
                                    });

                                    /**
                                     * Creates a new Result instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result} Result instance
                                     */
                                    Result.create = function create(properties) {
                                        return new Result(properties);
                                    };

                                    /**
                                     * Encodes the specified Result message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IResult} message Result message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    Result.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.commandHeader != null && Object.hasOwnProperty.call(message, "commandHeader"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.encode(message.commandHeader, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        if (message.errCode != null && Object.hasOwnProperty.call(message, "errCode"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.errCode);
                                        if (message.errMsg != null && Object.hasOwnProperty.call(message, "errMsg"))
                                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.errMsg);
                                        if (message.voidResult != null && Object.hasOwnProperty.call(message, "voidResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.encode(message.voidResult, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();
                                        if (message.sessionCreateNewCommandResult != null && Object.hasOwnProperty.call(message, "sessionCreateNewCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult.encode(message.sessionCreateNewCommandResult, writer.uint32(/* id 200, wireType 2 =*/1602).fork()).ldelim();
                                        if (message.sessionPrepareRTCommandResult != null && Object.hasOwnProperty.call(message, "sessionPrepareRTCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult.encode(message.sessionPrepareRTCommandResult, writer.uint32(/* id 201, wireType 2 =*/1610).fork()).ldelim();
                                        if (message.editorGetStackSizeCommandResult != null && Object.hasOwnProperty.call(message, "editorGetStackSizeCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult.encode(message.editorGetStackSizeCommandResult, writer.uint32(/* id 3007, wireType 2 =*/24058).fork()).ldelim();
                                        if (message.editorGetCanvasPropertiesCommandResult != null && Object.hasOwnProperty.call(message, "editorGetCanvasPropertiesCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult.encode(message.editorGetCanvasPropertiesCommandResult, writer.uint32(/* id 3009, wireType 2 =*/24074).fork()).ldelim();
                                        if (message.editorAddMainClipCommandResult != null && Object.hasOwnProperty.call(message, "editorAddMainClipCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult.encode(message.editorAddMainClipCommandResult, writer.uint32(/* id 3010, wireType 2 =*/24082).fork()).ldelim();
                                        if (message.editorAddLookupClipCommandResult != null && Object.hasOwnProperty.call(message, "editorAddLookupClipCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult.encode(message.editorAddLookupClipCommandResult, writer.uint32(/* id 3011, wireType 2 =*/24090).fork()).ldelim();
                                        if (message.editorAddPipClipCommandResult != null && Object.hasOwnProperty.call(message, "editorAddPipClipCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult.encode(message.editorAddPipClipCommandResult, writer.uint32(/* id 3012, wireType 2 =*/24098).fork()).ldelim();
                                        if (message.editorAddMusicClipCommandResult != null && Object.hasOwnProperty.call(message, "editorAddMusicClipCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult.encode(message.editorAddMusicClipCommandResult, writer.uint32(/* id 3013, wireType 2 =*/24106).fork()).ldelim();
                                        if (message.editorAddTextClipCommandResult != null && Object.hasOwnProperty.call(message, "editorAddTextClipCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult.encode(message.editorAddTextClipCommandResult, writer.uint32(/* id 3014, wireType 2 =*/24114).fork()).ldelim();
                                        if (message.editorAddStickerClipCommandResult != null && Object.hasOwnProperty.call(message, "editorAddStickerClipCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult.encode(message.editorAddStickerClipCommandResult, writer.uint32(/* id 3015, wireType 2 =*/24122).fork()).ldelim();
                                        if (message.editorAddExtensionClipCommandResult != null && Object.hasOwnProperty.call(message, "editorAddExtensionClipCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult.encode(message.editorAddExtensionClipCommandResult, writer.uint32(/* id 3016, wireType 2 =*/24130).fork()).ldelim();
                                        if (message.editorSplitClipCommandResult != null && Object.hasOwnProperty.call(message, "editorSplitClipCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult.encode(message.editorSplitClipCommandResult, writer.uint32(/* id 3018, wireType 2 =*/24146).fork()).ldelim();
                                        if (message.editorGetResourceDurationUsCommandResult != null && Object.hasOwnProperty.call(message, "editorGetResourceDurationUsCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult.encode(message.editorGetResourceDurationUsCommandResult, writer.uint32(/* id 3038, wireType 2 =*/24306).fork()).ldelim();
                                        if (message.editorGetResourceSizeCommandResult != null && Object.hasOwnProperty.call(message, "editorGetResourceSizeCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult.encode(message.editorGetResourceSizeCommandResult, writer.uint32(/* id 3039, wireType 2 =*/24314).fork()).ldelim();
                                        if (message.editorGetClipResourceInfoCommandResult != null && Object.hasOwnProperty.call(message, "editorGetClipResourceInfoCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult.encode(message.editorGetClipResourceInfoCommandResult, writer.uint32(/* id 3040, wireType 2 =*/24322).fork()).ldelim();
                                        if (message.editorGetClipPropListResult != null && Object.hasOwnProperty.call(message, "editorGetClipPropListResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult.encode(message.editorGetClipPropListResult, writer.uint32(/* id 3064, wireType 2 =*/24514).fork()).ldelim();
                                        if (message.editorGetTrackIdListCommandResult != null && Object.hasOwnProperty.call(message, "editorGetTrackIdListCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult.encode(message.editorGetTrackIdListCommandResult, writer.uint32(/* id 3071, wireType 2 =*/24570).fork()).ldelim();
                                        if (message.editorGetClipIdListCommandResult != null && Object.hasOwnProperty.call(message, "editorGetClipIdListCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult.encode(message.editorGetClipIdListCommandResult, writer.uint32(/* id 3072, wireType 2 =*/24578).fork()).ldelim();
                                        if (message.viewerGetStateCommandResult != null && Object.hasOwnProperty.call(message, "viewerGetStateCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult.encode(message.viewerGetStateCommandResult, writer.uint32(/* id 4010, wireType 2 =*/32082).fork()).ldelim();
                                        if (message.viewerGetDurationUsCommandResult != null && Object.hasOwnProperty.call(message, "viewerGetDurationUsCommandResult"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult.encode(message.viewerGetDurationUsCommandResult, writer.uint32(/* id 4011, wireType 2 =*/32090).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified Result message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IResult} message Result message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    Result.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a Result message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result} Result
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    Result.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.commandHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.decode(reader, reader.uint32());
                                                    break;
                                                case 2:
                                                    message.errCode = reader.int32();
                                                    break;
                                                case 3:
                                                    message.errMsg = reader.string();
                                                    break;
                                                case 101:
                                                    message.voidResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.decode(reader, reader.uint32());
                                                    break;
                                                case 200:
                                                    message.sessionCreateNewCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 201:
                                                    message.sessionPrepareRTCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3007:
                                                    message.editorGetStackSizeCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3009:
                                                    message.editorGetCanvasPropertiesCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3010:
                                                    message.editorAddMainClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3011:
                                                    message.editorAddLookupClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3012:
                                                    message.editorAddPipClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3013:
                                                    message.editorAddMusicClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3014:
                                                    message.editorAddTextClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3015:
                                                    message.editorAddStickerClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3016:
                                                    message.editorAddExtensionClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3018:
                                                    message.editorSplitClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3038:
                                                    message.editorGetResourceDurationUsCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3039:
                                                    message.editorGetResourceSizeCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3040:
                                                    message.editorGetClipResourceInfoCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3064:
                                                    message.editorGetClipPropListResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3071:
                                                    message.editorGetTrackIdListCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 3072:
                                                    message.editorGetClipIdListCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 4010:
                                                    message.viewerGetStateCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                case 4011:
                                                    message.viewerGetDurationUsCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult.decode(reader, reader.uint32());
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a Result message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result} Result
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    Result.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a Result message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    Result.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        var properties = {};
                                        if (message.commandHeader != null && message.hasOwnProperty("commandHeader")) {
                                            var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.verify(message.commandHeader);
                                            if (error)
                                                return "commandHeader." + error;
                                        }
                                        if (message.errCode != null && message.hasOwnProperty("errCode"))
                                            switch (message.errCode) {
                                                default:
                                                    return "errCode: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 101:
                                                case 102:
                                                case 110:
                                                case 111:
                                                case 121:
                                                case 122:
                                                case 131:
                                                    break;
                                            }
                                        if (message.errMsg != null && message.hasOwnProperty("errMsg"))
                                            if (!$util.isString(message.errMsg))
                                                return "errMsg: string expected";
                                        if (message.voidResult != null && message.hasOwnProperty("voidResult")) {
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.verify(message.voidResult);
                                                if (error)
                                                    return "voidResult." + error;
                                            }
                                        }
                                        if (message.sessionCreateNewCommandResult != null && message.hasOwnProperty("sessionCreateNewCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult.verify(message.sessionCreateNewCommandResult);
                                                if (error)
                                                    return "sessionCreateNewCommandResult." + error;
                                            }
                                        }
                                        if (message.sessionPrepareRTCommandResult != null && message.hasOwnProperty("sessionPrepareRTCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult.verify(message.sessionPrepareRTCommandResult);
                                                if (error)
                                                    return "sessionPrepareRTCommandResult." + error;
                                            }
                                        }
                                        if (message.editorGetStackSizeCommandResult != null && message.hasOwnProperty("editorGetStackSizeCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult.verify(message.editorGetStackSizeCommandResult);
                                                if (error)
                                                    return "editorGetStackSizeCommandResult." + error;
                                            }
                                        }
                                        if (message.editorGetCanvasPropertiesCommandResult != null && message.hasOwnProperty("editorGetCanvasPropertiesCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult.verify(message.editorGetCanvasPropertiesCommandResult);
                                                if (error)
                                                    return "editorGetCanvasPropertiesCommandResult." + error;
                                            }
                                        }
                                        if (message.editorAddMainClipCommandResult != null && message.hasOwnProperty("editorAddMainClipCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult.verify(message.editorAddMainClipCommandResult);
                                                if (error)
                                                    return "editorAddMainClipCommandResult." + error;
                                            }
                                        }
                                        if (message.editorAddLookupClipCommandResult != null && message.hasOwnProperty("editorAddLookupClipCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult.verify(message.editorAddLookupClipCommandResult);
                                                if (error)
                                                    return "editorAddLookupClipCommandResult." + error;
                                            }
                                        }
                                        if (message.editorAddPipClipCommandResult != null && message.hasOwnProperty("editorAddPipClipCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult.verify(message.editorAddPipClipCommandResult);
                                                if (error)
                                                    return "editorAddPipClipCommandResult." + error;
                                            }
                                        }
                                        if (message.editorAddMusicClipCommandResult != null && message.hasOwnProperty("editorAddMusicClipCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult.verify(message.editorAddMusicClipCommandResult);
                                                if (error)
                                                    return "editorAddMusicClipCommandResult." + error;
                                            }
                                        }
                                        if (message.editorAddTextClipCommandResult != null && message.hasOwnProperty("editorAddTextClipCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult.verify(message.editorAddTextClipCommandResult);
                                                if (error)
                                                    return "editorAddTextClipCommandResult." + error;
                                            }
                                        }
                                        if (message.editorAddStickerClipCommandResult != null && message.hasOwnProperty("editorAddStickerClipCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult.verify(message.editorAddStickerClipCommandResult);
                                                if (error)
                                                    return "editorAddStickerClipCommandResult." + error;
                                            }
                                        }
                                        if (message.editorAddExtensionClipCommandResult != null && message.hasOwnProperty("editorAddExtensionClipCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult.verify(message.editorAddExtensionClipCommandResult);
                                                if (error)
                                                    return "editorAddExtensionClipCommandResult." + error;
                                            }
                                        }
                                        if (message.editorSplitClipCommandResult != null && message.hasOwnProperty("editorSplitClipCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult.verify(message.editorSplitClipCommandResult);
                                                if (error)
                                                    return "editorSplitClipCommandResult." + error;
                                            }
                                        }
                                        if (message.editorGetResourceDurationUsCommandResult != null && message.hasOwnProperty("editorGetResourceDurationUsCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult.verify(message.editorGetResourceDurationUsCommandResult);
                                                if (error)
                                                    return "editorGetResourceDurationUsCommandResult." + error;
                                            }
                                        }
                                        if (message.editorGetResourceSizeCommandResult != null && message.hasOwnProperty("editorGetResourceSizeCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult.verify(message.editorGetResourceSizeCommandResult);
                                                if (error)
                                                    return "editorGetResourceSizeCommandResult." + error;
                                            }
                                        }
                                        if (message.editorGetClipResourceInfoCommandResult != null && message.hasOwnProperty("editorGetClipResourceInfoCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult.verify(message.editorGetClipResourceInfoCommandResult);
                                                if (error)
                                                    return "editorGetClipResourceInfoCommandResult." + error;
                                            }
                                        }
                                        if (message.editorGetClipPropListResult != null && message.hasOwnProperty("editorGetClipPropListResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult.verify(message.editorGetClipPropListResult);
                                                if (error)
                                                    return "editorGetClipPropListResult." + error;
                                            }
                                        }
                                        if (message.editorGetTrackIdListCommandResult != null && message.hasOwnProperty("editorGetTrackIdListCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult.verify(message.editorGetTrackIdListCommandResult);
                                                if (error)
                                                    return "editorGetTrackIdListCommandResult." + error;
                                            }
                                        }
                                        if (message.editorGetClipIdListCommandResult != null && message.hasOwnProperty("editorGetClipIdListCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult.verify(message.editorGetClipIdListCommandResult);
                                                if (error)
                                                    return "editorGetClipIdListCommandResult." + error;
                                            }
                                        }
                                        if (message.viewerGetStateCommandResult != null && message.hasOwnProperty("viewerGetStateCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult.verify(message.viewerGetStateCommandResult);
                                                if (error)
                                                    return "viewerGetStateCommandResult." + error;
                                            }
                                        }
                                        if (message.viewerGetDurationUsCommandResult != null && message.hasOwnProperty("viewerGetDurationUsCommandResult")) {
                                            if (properties.data === 1)
                                                return "data: multiple values";
                                            properties.data = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult.verify(message.viewerGetDurationUsCommandResult);
                                                if (error)
                                                    return "viewerGetDurationUsCommandResult." + error;
                                            }
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates a Result message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result} Result
                                     */
                                    Result.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result();
                                        if (object.commandHeader != null) {
                                            if (typeof object.commandHeader !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.commandHeader: object expected");
                                            message.commandHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.fromObject(object.commandHeader);
                                        }
                                        switch (object.errCode) {
                                            case "ERR_UNDEFINE":
                                            case 0:
                                                message.errCode = 0;
                                                break;
                                            case "ERROR_SUCCESS":
                                            case 1:
                                                message.errCode = 1;
                                                break;
                                            case "ERROR_SYS_INTERNAL_UNKNOWN":
                                            case 2:
                                                message.errCode = 2;
                                                break;
                                            case "ERROR_SYS_INTERNAL_CORE_FAILED":
                                            case 3:
                                                message.errCode = 3;
                                                break;
                                            case "ERROR_PARA_MISSED":
                                            case 101:
                                                message.errCode = 101;
                                                break;
                                            case "ERROR_PARA_INVALID":
                                            case 102:
                                                message.errCode = 102;
                                                break;
                                            case "ERROR_SESSION_ID_MISSED":
                                            case 110:
                                                message.errCode = 110;
                                                break;
                                            case "ERROR_SESSION_ID_INVALID":
                                            case 111:
                                                message.errCode = 111;
                                                break;
                                            case "ERROR_RESOURCE_URI_INVALID":
                                            case 121:
                                                message.errCode = 121;
                                                break;
                                            case "ERROR_RESOURCE_NOT_FOUND":
                                            case 122:
                                                message.errCode = 122;
                                                break;
                                            case "ERROR_RTC_UNKNOWN":
                                            case 131:
                                                message.errCode = 131;
                                                break;
                                        }
                                        if (object.errMsg != null)
                                            message.errMsg = String(object.errMsg);
                                        if (object.voidResult != null) {
                                            if (typeof object.voidResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.voidResult: object expected");
                                            message.voidResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.fromObject(object.voidResult);
                                        }
                                        if (object.sessionCreateNewCommandResult != null) {
                                            if (typeof object.sessionCreateNewCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.sessionCreateNewCommandResult: object expected");
                                            message.sessionCreateNewCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult.fromObject(object.sessionCreateNewCommandResult);
                                        }
                                        if (object.sessionPrepareRTCommandResult != null) {
                                            if (typeof object.sessionPrepareRTCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.sessionPrepareRTCommandResult: object expected");
                                            message.sessionPrepareRTCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult.fromObject(object.sessionPrepareRTCommandResult);
                                        }
                                        if (object.editorGetStackSizeCommandResult != null) {
                                            if (typeof object.editorGetStackSizeCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorGetStackSizeCommandResult: object expected");
                                            message.editorGetStackSizeCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult.fromObject(object.editorGetStackSizeCommandResult);
                                        }
                                        if (object.editorGetCanvasPropertiesCommandResult != null) {
                                            if (typeof object.editorGetCanvasPropertiesCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorGetCanvasPropertiesCommandResult: object expected");
                                            message.editorGetCanvasPropertiesCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult.fromObject(object.editorGetCanvasPropertiesCommandResult);
                                        }
                                        if (object.editorAddMainClipCommandResult != null) {
                                            if (typeof object.editorAddMainClipCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorAddMainClipCommandResult: object expected");
                                            message.editorAddMainClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult.fromObject(object.editorAddMainClipCommandResult);
                                        }
                                        if (object.editorAddLookupClipCommandResult != null) {
                                            if (typeof object.editorAddLookupClipCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorAddLookupClipCommandResult: object expected");
                                            message.editorAddLookupClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult.fromObject(object.editorAddLookupClipCommandResult);
                                        }
                                        if (object.editorAddPipClipCommandResult != null) {
                                            if (typeof object.editorAddPipClipCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorAddPipClipCommandResult: object expected");
                                            message.editorAddPipClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult.fromObject(object.editorAddPipClipCommandResult);
                                        }
                                        if (object.editorAddMusicClipCommandResult != null) {
                                            if (typeof object.editorAddMusicClipCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorAddMusicClipCommandResult: object expected");
                                            message.editorAddMusicClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult.fromObject(object.editorAddMusicClipCommandResult);
                                        }
                                        if (object.editorAddTextClipCommandResult != null) {
                                            if (typeof object.editorAddTextClipCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorAddTextClipCommandResult: object expected");
                                            message.editorAddTextClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult.fromObject(object.editorAddTextClipCommandResult);
                                        }
                                        if (object.editorAddStickerClipCommandResult != null) {
                                            if (typeof object.editorAddStickerClipCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorAddStickerClipCommandResult: object expected");
                                            message.editorAddStickerClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult.fromObject(object.editorAddStickerClipCommandResult);
                                        }
                                        if (object.editorAddExtensionClipCommandResult != null) {
                                            if (typeof object.editorAddExtensionClipCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorAddExtensionClipCommandResult: object expected");
                                            message.editorAddExtensionClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult.fromObject(object.editorAddExtensionClipCommandResult);
                                        }
                                        if (object.editorSplitClipCommandResult != null) {
                                            if (typeof object.editorSplitClipCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorSplitClipCommandResult: object expected");
                                            message.editorSplitClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult.fromObject(object.editorSplitClipCommandResult);
                                        }
                                        if (object.editorGetResourceDurationUsCommandResult != null) {
                                            if (typeof object.editorGetResourceDurationUsCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorGetResourceDurationUsCommandResult: object expected");
                                            message.editorGetResourceDurationUsCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult.fromObject(object.editorGetResourceDurationUsCommandResult);
                                        }
                                        if (object.editorGetResourceSizeCommandResult != null) {
                                            if (typeof object.editorGetResourceSizeCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorGetResourceSizeCommandResult: object expected");
                                            message.editorGetResourceSizeCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult.fromObject(object.editorGetResourceSizeCommandResult);
                                        }
                                        if (object.editorGetClipResourceInfoCommandResult != null) {
                                            if (typeof object.editorGetClipResourceInfoCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorGetClipResourceInfoCommandResult: object expected");
                                            message.editorGetClipResourceInfoCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult.fromObject(object.editorGetClipResourceInfoCommandResult);
                                        }
                                        if (object.editorGetClipPropListResult != null) {
                                            if (typeof object.editorGetClipPropListResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorGetClipPropListResult: object expected");
                                            message.editorGetClipPropListResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult.fromObject(object.editorGetClipPropListResult);
                                        }
                                        if (object.editorGetTrackIdListCommandResult != null) {
                                            if (typeof object.editorGetTrackIdListCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorGetTrackIdListCommandResult: object expected");
                                            message.editorGetTrackIdListCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult.fromObject(object.editorGetTrackIdListCommandResult);
                                        }
                                        if (object.editorGetClipIdListCommandResult != null) {
                                            if (typeof object.editorGetClipIdListCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.editorGetClipIdListCommandResult: object expected");
                                            message.editorGetClipIdListCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult.fromObject(object.editorGetClipIdListCommandResult);
                                        }
                                        if (object.viewerGetStateCommandResult != null) {
                                            if (typeof object.viewerGetStateCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.viewerGetStateCommandResult: object expected");
                                            message.viewerGetStateCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult.fromObject(object.viewerGetStateCommandResult);
                                        }
                                        if (object.viewerGetDurationUsCommandResult != null) {
                                            if (typeof object.viewerGetDurationUsCommandResult !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.viewerGetDurationUsCommandResult: object expected");
                                            message.viewerGetDurationUsCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult.fromObject(object.viewerGetDurationUsCommandResult);
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a Result message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result} message Result
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    Result.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.commandHeader = null;
                                            object.errCode = options.enums === String ? "ERR_UNDEFINE" : 0;
                                            object.errMsg = "";
                                        }
                                        if (message.commandHeader != null && message.hasOwnProperty("commandHeader"))
                                            object.commandHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.toObject(message.commandHeader, options);
                                        if (message.errCode != null && message.hasOwnProperty("errCode"))
                                            object.errCode = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.ERROR_CODE[message.errCode] : message.errCode;
                                        if (message.errMsg != null && message.hasOwnProperty("errMsg"))
                                            object.errMsg = message.errMsg;
                                        if (message.voidResult != null && message.hasOwnProperty("voidResult")) {
                                            object.voidResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.toObject(message.voidResult, options);
                                            if (options.oneofs)
                                                object.data = "voidResult";
                                        }
                                        if (message.sessionCreateNewCommandResult != null && message.hasOwnProperty("sessionCreateNewCommandResult")) {
                                            object.sessionCreateNewCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult.toObject(message.sessionCreateNewCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "sessionCreateNewCommandResult";
                                        }
                                        if (message.sessionPrepareRTCommandResult != null && message.hasOwnProperty("sessionPrepareRTCommandResult")) {
                                            object.sessionPrepareRTCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult.toObject(message.sessionPrepareRTCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "sessionPrepareRTCommandResult";
                                        }
                                        if (message.editorGetStackSizeCommandResult != null && message.hasOwnProperty("editorGetStackSizeCommandResult")) {
                                            object.editorGetStackSizeCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult.toObject(message.editorGetStackSizeCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorGetStackSizeCommandResult";
                                        }
                                        if (message.editorGetCanvasPropertiesCommandResult != null && message.hasOwnProperty("editorGetCanvasPropertiesCommandResult")) {
                                            object.editorGetCanvasPropertiesCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult.toObject(message.editorGetCanvasPropertiesCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorGetCanvasPropertiesCommandResult";
                                        }
                                        if (message.editorAddMainClipCommandResult != null && message.hasOwnProperty("editorAddMainClipCommandResult")) {
                                            object.editorAddMainClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult.toObject(message.editorAddMainClipCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorAddMainClipCommandResult";
                                        }
                                        if (message.editorAddLookupClipCommandResult != null && message.hasOwnProperty("editorAddLookupClipCommandResult")) {
                                            object.editorAddLookupClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult.toObject(message.editorAddLookupClipCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorAddLookupClipCommandResult";
                                        }
                                        if (message.editorAddPipClipCommandResult != null && message.hasOwnProperty("editorAddPipClipCommandResult")) {
                                            object.editorAddPipClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult.toObject(message.editorAddPipClipCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorAddPipClipCommandResult";
                                        }
                                        if (message.editorAddMusicClipCommandResult != null && message.hasOwnProperty("editorAddMusicClipCommandResult")) {
                                            object.editorAddMusicClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult.toObject(message.editorAddMusicClipCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorAddMusicClipCommandResult";
                                        }
                                        if (message.editorAddTextClipCommandResult != null && message.hasOwnProperty("editorAddTextClipCommandResult")) {
                                            object.editorAddTextClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult.toObject(message.editorAddTextClipCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorAddTextClipCommandResult";
                                        }
                                        if (message.editorAddStickerClipCommandResult != null && message.hasOwnProperty("editorAddStickerClipCommandResult")) {
                                            object.editorAddStickerClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult.toObject(message.editorAddStickerClipCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorAddStickerClipCommandResult";
                                        }
                                        if (message.editorAddExtensionClipCommandResult != null && message.hasOwnProperty("editorAddExtensionClipCommandResult")) {
                                            object.editorAddExtensionClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult.toObject(message.editorAddExtensionClipCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorAddExtensionClipCommandResult";
                                        }
                                        if (message.editorSplitClipCommandResult != null && message.hasOwnProperty("editorSplitClipCommandResult")) {
                                            object.editorSplitClipCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult.toObject(message.editorSplitClipCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorSplitClipCommandResult";
                                        }
                                        if (message.editorGetResourceDurationUsCommandResult != null && message.hasOwnProperty("editorGetResourceDurationUsCommandResult")) {
                                            object.editorGetResourceDurationUsCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult.toObject(message.editorGetResourceDurationUsCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorGetResourceDurationUsCommandResult";
                                        }
                                        if (message.editorGetResourceSizeCommandResult != null && message.hasOwnProperty("editorGetResourceSizeCommandResult")) {
                                            object.editorGetResourceSizeCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult.toObject(message.editorGetResourceSizeCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorGetResourceSizeCommandResult";
                                        }
                                        if (message.editorGetClipResourceInfoCommandResult != null && message.hasOwnProperty("editorGetClipResourceInfoCommandResult")) {
                                            object.editorGetClipResourceInfoCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult.toObject(message.editorGetClipResourceInfoCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorGetClipResourceInfoCommandResult";
                                        }
                                        if (message.editorGetClipPropListResult != null && message.hasOwnProperty("editorGetClipPropListResult")) {
                                            object.editorGetClipPropListResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult.toObject(message.editorGetClipPropListResult, options);
                                            if (options.oneofs)
                                                object.data = "editorGetClipPropListResult";
                                        }
                                        if (message.editorGetTrackIdListCommandResult != null && message.hasOwnProperty("editorGetTrackIdListCommandResult")) {
                                            object.editorGetTrackIdListCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult.toObject(message.editorGetTrackIdListCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorGetTrackIdListCommandResult";
                                        }
                                        if (message.editorGetClipIdListCommandResult != null && message.hasOwnProperty("editorGetClipIdListCommandResult")) {
                                            object.editorGetClipIdListCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult.toObject(message.editorGetClipIdListCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "editorGetClipIdListCommandResult";
                                        }
                                        if (message.viewerGetStateCommandResult != null && message.hasOwnProperty("viewerGetStateCommandResult")) {
                                            object.viewerGetStateCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult.toObject(message.viewerGetStateCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "viewerGetStateCommandResult";
                                        }
                                        if (message.viewerGetDurationUsCommandResult != null && message.hasOwnProperty("viewerGetDurationUsCommandResult")) {
                                            object.viewerGetDurationUsCommandResult = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult.toObject(message.viewerGetDurationUsCommandResult, options);
                                            if (options.oneofs)
                                                object.data = "viewerGetDurationUsCommandResult";
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this Result to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    Result.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    /**
                                     * ERROR_CODE enum.
                                     * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.Result.ERROR_CODE
                                     * @enum {number}
                                     * @property {number} ERR_UNDEFINE=0 ERR_UNDEFINE value
                                     * @property {number} ERROR_SUCCESS=1 ERROR_SUCCESS value
                                     * @property {number} ERROR_SYS_INTERNAL_UNKNOWN=2 ERROR_SYS_INTERNAL_UNKNOWN value
                                     * @property {number} ERROR_SYS_INTERNAL_CORE_FAILED=3 ERROR_SYS_INTERNAL_CORE_FAILED value
                                     * @property {number} ERROR_PARA_MISSED=101 100~200 *
                                     * @property {number} ERROR_PARA_INVALID=102 ERROR_PARA_INVALID value
                                     * @property {number} ERROR_SESSION_ID_MISSED=110 ERROR_SESSION_ID_MISSED value
                                     * @property {number} ERROR_SESSION_ID_INVALID=111 ERROR_SESSION_ID_INVALID value
                                     * @property {number} ERROR_RESOURCE_URI_INVALID=121 ERROR_RESOURCE_URI_INVALID value
                                     * @property {number} ERROR_RESOURCE_NOT_FOUND=122 ERROR_RESOURCE_NOT_FOUND value
                                     * @property {number} ERROR_RTC_UNKNOWN=131 ERROR_RTC_UNKNOWN value
                                     */
                                    Result.ERROR_CODE = (function () {
                                        var valuesById = {}, values = Object.create(valuesById);
                                        values[valuesById[0] = "ERR_UNDEFINE"] = 0;
                                        values[valuesById[1] = "ERROR_SUCCESS"] = 1;
                                        values[valuesById[2] = "ERROR_SYS_INTERNAL_UNKNOWN"] = 2;
                                        values[valuesById[3] = "ERROR_SYS_INTERNAL_CORE_FAILED"] = 3;
                                        values[valuesById[101] = "ERROR_PARA_MISSED"] = 101;
                                        values[valuesById[102] = "ERROR_PARA_INVALID"] = 102;
                                        values[valuesById[110] = "ERROR_SESSION_ID_MISSED"] = 110;
                                        values[valuesById[111] = "ERROR_SESSION_ID_INVALID"] = 111;
                                        values[valuesById[121] = "ERROR_RESOURCE_URI_INVALID"] = 121;
                                        values[valuesById[122] = "ERROR_RESOURCE_NOT_FOUND"] = 122;
                                        values[valuesById[131] = "ERROR_RTC_UNKNOWN"] = 131;
                                        return values;
                                    })();

                                    return Result;
                                })();

                                proto.VoidResult = (function () {

                                    /**
                                     * Properties of a VoidResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IVoidResult
                                     */

                                    /**
                                     * Constructs a new VoidResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a VoidResult.
                                     * @implements IVoidResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IVoidResult=} [properties] Properties to set
                                     */
                                    function VoidResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new VoidResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IVoidResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult} VoidResult instance
                                     */
                                    VoidResult.create = function create(properties) {
                                        return new VoidResult(properties);
                                    };

                                    /**
                                     * Encodes the specified VoidResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IVoidResult} message VoidResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    VoidResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified VoidResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IVoidResult} message VoidResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    VoidResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a VoidResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult} VoidResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    VoidResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a VoidResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult} VoidResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    VoidResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a VoidResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    VoidResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a VoidResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult} VoidResult
                                     */
                                    VoidResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult();
                                    };

                                    /**
                                     * Creates a plain object from a VoidResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult} message VoidResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    VoidResult.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this VoidResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    VoidResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return VoidResult;
                                })();

                                proto.SystemRequireResendCommand = (function () {

                                    /**
                                     * Properties of a SystemRequireResendCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ISystemRequireResendCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader|null} [commandHeader] SystemRequireResendCommand commandHeader
                                     */

                                    /**
                                     * Constructs a new SystemRequireResendCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc System *
                                     * @implements ISystemRequireResendCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISystemRequireResendCommand=} [properties] Properties to set
                                     */
                                    function SystemRequireResendCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * SystemRequireResendCommand commandHeader.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ICommandHeader|null|undefined} commandHeader
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @instance
                                     */
                                    SystemRequireResendCommand.prototype.commandHeader = null;

                                    /**
                                     * Creates a new SystemRequireResendCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISystemRequireResendCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand} SystemRequireResendCommand instance
                                     */
                                    SystemRequireResendCommand.create = function create(properties) {
                                        return new SystemRequireResendCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified SystemRequireResendCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISystemRequireResendCommand} message SystemRequireResendCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SystemRequireResendCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.commandHeader != null && Object.hasOwnProperty.call(message, "commandHeader"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.encode(message.commandHeader, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified SystemRequireResendCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISystemRequireResendCommand} message SystemRequireResendCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SystemRequireResendCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a SystemRequireResendCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand} SystemRequireResendCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SystemRequireResendCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.commandHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.decode(reader, reader.uint32());
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a SystemRequireResendCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand} SystemRequireResendCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SystemRequireResendCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a SystemRequireResendCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    SystemRequireResendCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.commandHeader != null && message.hasOwnProperty("commandHeader")) {
                                            var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.verify(message.commandHeader);
                                            if (error)
                                                return "commandHeader." + error;
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates a SystemRequireResendCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand} SystemRequireResendCommand
                                     */
                                    SystemRequireResendCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand();
                                        if (object.commandHeader != null) {
                                            if (typeof object.commandHeader !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand.commandHeader: object expected");
                                            message.commandHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.fromObject(object.commandHeader);
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a SystemRequireResendCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand} message SystemRequireResendCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    SystemRequireResendCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.commandHeader = null;
                                        if (message.commandHeader != null && message.hasOwnProperty("commandHeader"))
                                            object.commandHeader = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.CommandHeader.toObject(message.commandHeader, options);
                                        return object;
                                    };

                                    /**
                                     * Converts this SystemRequireResendCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SystemRequireResendCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    SystemRequireResendCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return SystemRequireResendCommand;
                                })();

                                proto.SessionCreateNewCommand = (function () {

                                    /**
                                     * Properties of a SessionCreateNewCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ISessionCreateNewCommand
                                     * @property {string|null} [appKey] SessionCreateNewCommand appKey
                                     * @property {string|null} [appToken] SessionCreateNewCommand appToken
                                     */

                                    /**
                                     * Constructs a new SessionCreateNewCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Session related *
                                     * @implements ISessionCreateNewCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommand=} [properties] Properties to set
                                     */
                                    function SessionCreateNewCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * SessionCreateNewCommand appKey.
                                     * @member {string} appKey
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @instance
                                     */
                                    SessionCreateNewCommand.prototype.appKey = "";

                                    /**
                                     * SessionCreateNewCommand appToken.
                                     * @member {string} appToken
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @instance
                                     */
                                    SessionCreateNewCommand.prototype.appToken = "";

                                    /**
                                     * Creates a new SessionCreateNewCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand} SessionCreateNewCommand instance
                                     */
                                    SessionCreateNewCommand.create = function create(properties) {
                                        return new SessionCreateNewCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified SessionCreateNewCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommand} message SessionCreateNewCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionCreateNewCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.appKey != null && Object.hasOwnProperty.call(message, "appKey"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.appKey);
                                        if (message.appToken != null && Object.hasOwnProperty.call(message, "appToken"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.appToken);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified SessionCreateNewCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommand} message SessionCreateNewCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionCreateNewCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a SessionCreateNewCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand} SessionCreateNewCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionCreateNewCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.appKey = reader.string();
                                                    break;
                                                case 2:
                                                    message.appToken = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a SessionCreateNewCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand} SessionCreateNewCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionCreateNewCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a SessionCreateNewCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    SessionCreateNewCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.appKey != null && message.hasOwnProperty("appKey"))
                                            if (!$util.isString(message.appKey))
                                                return "appKey: string expected";
                                        if (message.appToken != null && message.hasOwnProperty("appToken"))
                                            if (!$util.isString(message.appToken))
                                                return "appToken: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a SessionCreateNewCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand} SessionCreateNewCommand
                                     */
                                    SessionCreateNewCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand();
                                        if (object.appKey != null)
                                            message.appKey = String(object.appKey);
                                        if (object.appToken != null)
                                            message.appToken = String(object.appToken);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a SessionCreateNewCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand} message SessionCreateNewCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    SessionCreateNewCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.appKey = "";
                                            object.appToken = "";
                                        }
                                        if (message.appKey != null && message.hasOwnProperty("appKey"))
                                            object.appKey = message.appKey;
                                        if (message.appToken != null && message.hasOwnProperty("appToken"))
                                            object.appToken = message.appToken;
                                        return object;
                                    };

                                    /**
                                     * Converts this SessionCreateNewCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    SessionCreateNewCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return SessionCreateNewCommand;
                                })();

                                proto.SessionCreateNewCommandResult = (function () {

                                    /**
                                     * Properties of a SessionCreateNewCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ISessionCreateNewCommandResult
                                     * @property {string|null} [sessionId] SessionCreateNewCommandResult sessionId
                                     */

                                    /**
                                     * Constructs a new SessionCreateNewCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a SessionCreateNewCommandResult.
                                     * @implements ISessionCreateNewCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommandResult=} [properties] Properties to set
                                     */
                                    function SessionCreateNewCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * SessionCreateNewCommandResult sessionId.
                                     * @member {string} sessionId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @instance
                                     */
                                    SessionCreateNewCommandResult.prototype.sessionId = "";

                                    /**
                                     * Creates a new SessionCreateNewCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult} SessionCreateNewCommandResult instance
                                     */
                                    SessionCreateNewCommandResult.create = function create(properties) {
                                        return new SessionCreateNewCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified SessionCreateNewCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommandResult} message SessionCreateNewCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionCreateNewCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.sessionId != null && Object.hasOwnProperty.call(message, "sessionId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sessionId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified SessionCreateNewCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionCreateNewCommandResult} message SessionCreateNewCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionCreateNewCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a SessionCreateNewCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult} SessionCreateNewCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionCreateNewCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.sessionId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a SessionCreateNewCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult} SessionCreateNewCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionCreateNewCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a SessionCreateNewCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    SessionCreateNewCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                            if (!$util.isString(message.sessionId))
                                                return "sessionId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a SessionCreateNewCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult} SessionCreateNewCommandResult
                                     */
                                    SessionCreateNewCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult();
                                        if (object.sessionId != null)
                                            message.sessionId = String(object.sessionId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a SessionCreateNewCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult} message SessionCreateNewCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    SessionCreateNewCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.sessionId = "";
                                        if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                            object.sessionId = message.sessionId;
                                        return object;
                                    };

                                    /**
                                     * Converts this SessionCreateNewCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionCreateNewCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    SessionCreateNewCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return SessionCreateNewCommandResult;
                                })();

                                proto.SessionPrepareRTCCommand = (function () {

                                    /**
                                     * Properties of a SessionPrepareRTCCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ISessionPrepareRTCCommand
                                     */

                                    /**
                                     * Constructs a new SessionPrepareRTCCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a SessionPrepareRTCCommand.
                                     * @implements ISessionPrepareRTCCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCCommand=} [properties] Properties to set
                                     */
                                    function SessionPrepareRTCCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new SessionPrepareRTCCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand} SessionPrepareRTCCommand instance
                                     */
                                    SessionPrepareRTCCommand.create = function create(properties) {
                                        return new SessionPrepareRTCCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified SessionPrepareRTCCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCCommand} message SessionPrepareRTCCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionPrepareRTCCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified SessionPrepareRTCCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCCommand} message SessionPrepareRTCCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionPrepareRTCCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a SessionPrepareRTCCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand} SessionPrepareRTCCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionPrepareRTCCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a SessionPrepareRTCCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand} SessionPrepareRTCCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionPrepareRTCCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a SessionPrepareRTCCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    SessionPrepareRTCCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a SessionPrepareRTCCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand} SessionPrepareRTCCommand
                                     */
                                    SessionPrepareRTCCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand();
                                    };

                                    /**
                                     * Creates a plain object from a SessionPrepareRTCCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand} message SessionPrepareRTCCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    SessionPrepareRTCCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this SessionPrepareRTCCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    SessionPrepareRTCCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return SessionPrepareRTCCommand;
                                })();

                                proto.SessionPrepareRTCommandResult = (function () {

                                    /**
                                     * Properties of a SessionPrepareRTCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ISessionPrepareRTCommandResult
                                     * @property {string|null} [streamUrl] SessionPrepareRTCommandResult streamUrl
                                     * @property {string|null} [msgUrl] SessionPrepareRTCommandResult msgUrl
                                     */

                                    /**
                                     * Constructs a new SessionPrepareRTCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a SessionPrepareRTCommandResult.
                                     * @implements ISessionPrepareRTCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCommandResult=} [properties] Properties to set
                                     */
                                    function SessionPrepareRTCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * SessionPrepareRTCommandResult streamUrl.
                                     * @member {string} streamUrl
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @instance
                                     */
                                    SessionPrepareRTCommandResult.prototype.streamUrl = "";

                                    /**
                                     * SessionPrepareRTCommandResult msgUrl.
                                     * @member {string} msgUrl
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @instance
                                     */
                                    SessionPrepareRTCommandResult.prototype.msgUrl = "";

                                    /**
                                     * Creates a new SessionPrepareRTCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult} SessionPrepareRTCommandResult instance
                                     */
                                    SessionPrepareRTCommandResult.create = function create(properties) {
                                        return new SessionPrepareRTCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified SessionPrepareRTCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCommandResult} message SessionPrepareRTCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionPrepareRTCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.streamUrl != null && Object.hasOwnProperty.call(message, "streamUrl"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.streamUrl);
                                        if (message.msgUrl != null && Object.hasOwnProperty.call(message, "msgUrl"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.msgUrl);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified SessionPrepareRTCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionPrepareRTCommandResult} message SessionPrepareRTCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionPrepareRTCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a SessionPrepareRTCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult} SessionPrepareRTCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionPrepareRTCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.streamUrl = reader.string();
                                                    break;
                                                case 2:
                                                    message.msgUrl = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a SessionPrepareRTCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult} SessionPrepareRTCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionPrepareRTCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a SessionPrepareRTCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    SessionPrepareRTCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.streamUrl != null && message.hasOwnProperty("streamUrl"))
                                            if (!$util.isString(message.streamUrl))
                                                return "streamUrl: string expected";
                                        if (message.msgUrl != null && message.hasOwnProperty("msgUrl"))
                                            if (!$util.isString(message.msgUrl))
                                                return "msgUrl: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a SessionPrepareRTCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult} SessionPrepareRTCommandResult
                                     */
                                    SessionPrepareRTCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult();
                                        if (object.streamUrl != null)
                                            message.streamUrl = String(object.streamUrl);
                                        if (object.msgUrl != null)
                                            message.msgUrl = String(object.msgUrl);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a SessionPrepareRTCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult} message SessionPrepareRTCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    SessionPrepareRTCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.streamUrl = "";
                                            object.msgUrl = "";
                                        }
                                        if (message.streamUrl != null && message.hasOwnProperty("streamUrl"))
                                            object.streamUrl = message.streamUrl;
                                        if (message.msgUrl != null && message.hasOwnProperty("msgUrl"))
                                            object.msgUrl = message.msgUrl;
                                        return object;
                                    };

                                    /**
                                     * Converts this SessionPrepareRTCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionPrepareRTCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    SessionPrepareRTCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return SessionPrepareRTCommandResult;
                                })();

                                proto.SessionBeginCommand = (function () {

                                    /**
                                     * Properties of a SessionBeginCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ISessionBeginCommand
                                     */

                                    /**
                                     * Constructs a new SessionBeginCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a SessionBeginCommand.
                                     * @implements ISessionBeginCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionBeginCommand=} [properties] Properties to set
                                     */
                                    function SessionBeginCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new SessionBeginCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionBeginCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand} SessionBeginCommand instance
                                     */
                                    SessionBeginCommand.create = function create(properties) {
                                        return new SessionBeginCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified SessionBeginCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionBeginCommand} message SessionBeginCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionBeginCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified SessionBeginCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionBeginCommand} message SessionBeginCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionBeginCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a SessionBeginCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand} SessionBeginCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionBeginCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a SessionBeginCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand} SessionBeginCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionBeginCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a SessionBeginCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    SessionBeginCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a SessionBeginCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand} SessionBeginCommand
                                     */
                                    SessionBeginCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand();
                                    };

                                    /**
                                     * Creates a plain object from a SessionBeginCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand} message SessionBeginCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    SessionBeginCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this SessionBeginCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionBeginCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    SessionBeginCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return SessionBeginCommand;
                                })();

                                proto.SessionKeepaliveCommand = (function () {

                                    /**
                                     * Properties of a SessionKeepaliveCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ISessionKeepaliveCommand
                                     */

                                    /**
                                     * Constructs a new SessionKeepaliveCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a SessionKeepaliveCommand.
                                     * @implements ISessionKeepaliveCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionKeepaliveCommand=} [properties] Properties to set
                                     */
                                    function SessionKeepaliveCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new SessionKeepaliveCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionKeepaliveCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand} SessionKeepaliveCommand instance
                                     */
                                    SessionKeepaliveCommand.create = function create(properties) {
                                        return new SessionKeepaliveCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified SessionKeepaliveCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionKeepaliveCommand} message SessionKeepaliveCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionKeepaliveCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified SessionKeepaliveCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionKeepaliveCommand} message SessionKeepaliveCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionKeepaliveCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a SessionKeepaliveCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand} SessionKeepaliveCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionKeepaliveCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a SessionKeepaliveCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand} SessionKeepaliveCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionKeepaliveCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a SessionKeepaliveCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    SessionKeepaliveCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a SessionKeepaliveCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand} SessionKeepaliveCommand
                                     */
                                    SessionKeepaliveCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand();
                                    };

                                    /**
                                     * Creates a plain object from a SessionKeepaliveCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand} message SessionKeepaliveCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    SessionKeepaliveCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this SessionKeepaliveCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionKeepaliveCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    SessionKeepaliveCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return SessionKeepaliveCommand;
                                })();

                                proto.SessionEndCurrentCommand = (function () {

                                    /**
                                     * Properties of a SessionEndCurrentCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ISessionEndCurrentCommand
                                     */

                                    /**
                                     * Constructs a new SessionEndCurrentCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a SessionEndCurrentCommand.
                                     * @implements ISessionEndCurrentCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionEndCurrentCommand=} [properties] Properties to set
                                     */
                                    function SessionEndCurrentCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new SessionEndCurrentCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionEndCurrentCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand} SessionEndCurrentCommand instance
                                     */
                                    SessionEndCurrentCommand.create = function create(properties) {
                                        return new SessionEndCurrentCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified SessionEndCurrentCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionEndCurrentCommand} message SessionEndCurrentCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionEndCurrentCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified SessionEndCurrentCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionEndCurrentCommand} message SessionEndCurrentCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionEndCurrentCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a SessionEndCurrentCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand} SessionEndCurrentCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionEndCurrentCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a SessionEndCurrentCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand} SessionEndCurrentCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionEndCurrentCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a SessionEndCurrentCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    SessionEndCurrentCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a SessionEndCurrentCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand} SessionEndCurrentCommand
                                     */
                                    SessionEndCurrentCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand();
                                    };

                                    /**
                                     * Creates a plain object from a SessionEndCurrentCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand} message SessionEndCurrentCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    SessionEndCurrentCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this SessionEndCurrentCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionEndCurrentCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    SessionEndCurrentCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return SessionEndCurrentCommand;
                                })();

                                proto.SessionInvalidCurrentCommand = (function () {

                                    /**
                                     * Properties of a SessionInvalidCurrentCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface ISessionInvalidCurrentCommand
                                     */

                                    /**
                                     * Constructs a new SessionInvalidCurrentCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a SessionInvalidCurrentCommand.
                                     * @implements ISessionInvalidCurrentCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionInvalidCurrentCommand=} [properties] Properties to set
                                     */
                                    function SessionInvalidCurrentCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new SessionInvalidCurrentCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionInvalidCurrentCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand} SessionInvalidCurrentCommand instance
                                     */
                                    SessionInvalidCurrentCommand.create = function create(properties) {
                                        return new SessionInvalidCurrentCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified SessionInvalidCurrentCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionInvalidCurrentCommand} message SessionInvalidCurrentCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionInvalidCurrentCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified SessionInvalidCurrentCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ISessionInvalidCurrentCommand} message SessionInvalidCurrentCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    SessionInvalidCurrentCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a SessionInvalidCurrentCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand} SessionInvalidCurrentCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionInvalidCurrentCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a SessionInvalidCurrentCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand} SessionInvalidCurrentCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    SessionInvalidCurrentCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a SessionInvalidCurrentCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    SessionInvalidCurrentCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a SessionInvalidCurrentCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand} SessionInvalidCurrentCommand
                                     */
                                    SessionInvalidCurrentCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand();
                                    };

                                    /**
                                     * Creates a plain object from a SessionInvalidCurrentCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand} message SessionInvalidCurrentCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    SessionInvalidCurrentCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this SessionInvalidCurrentCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SessionInvalidCurrentCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    SessionInvalidCurrentCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return SessionInvalidCurrentCommand;
                                })();

                                proto.ProjectInfo = (function () {

                                    /**
                                     * Properties of a ProjectInfo.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IProjectInfo
                                     * @property {string|null} [projectId] ProjectInfo projectId
                                     * @property {string|null} [projectName] ProjectInfo projectName
                                     */

                                    /**
                                     * Constructs a new ProjectInfo.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Project *
                                     * @implements IProjectInfo
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectInfo=} [properties] Properties to set
                                     */
                                    function ProjectInfo(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ProjectInfo projectId.
                                     * @member {string} projectId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @instance
                                     */
                                    ProjectInfo.prototype.projectId = "";

                                    /**
                                     * ProjectInfo projectName.
                                     * @member {string} projectName
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @instance
                                     */
                                    ProjectInfo.prototype.projectName = "";

                                    /**
                                     * Creates a new ProjectInfo instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectInfo=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo} ProjectInfo instance
                                     */
                                    ProjectInfo.create = function create(properties) {
                                        return new ProjectInfo(properties);
                                    };

                                    /**
                                     * Encodes the specified ProjectInfo message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectInfo} message ProjectInfo message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectInfo.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                                        if (message.projectName != null && Object.hasOwnProperty.call(message, "projectName"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectName);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ProjectInfo message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectInfo} message ProjectInfo message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ProjectInfo message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo} ProjectInfo
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectInfo.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.projectId = reader.string();
                                                    break;
                                                case 2:
                                                    message.projectName = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ProjectInfo message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo} ProjectInfo
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectInfo.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ProjectInfo message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ProjectInfo.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                                            if (!$util.isString(message.projectId))
                                                return "projectId: string expected";
                                        if (message.projectName != null && message.hasOwnProperty("projectName"))
                                            if (!$util.isString(message.projectName))
                                                return "projectName: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ProjectInfo message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo} ProjectInfo
                                     */
                                    ProjectInfo.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo();
                                        if (object.projectId != null)
                                            message.projectId = String(object.projectId);
                                        if (object.projectName != null)
                                            message.projectName = String(object.projectName);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a ProjectInfo message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo} message ProjectInfo
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ProjectInfo.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.projectId = "";
                                            object.projectName = "";
                                        }
                                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                                            object.projectId = message.projectId;
                                        if (message.projectName != null && message.hasOwnProperty("projectName"))
                                            object.projectName = message.projectName;
                                        return object;
                                    };

                                    /**
                                     * Converts this ProjectInfo to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ProjectInfo.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ProjectInfo;
                                })();

                                proto.ProjectGetProjectListCommand = (function () {

                                    /**
                                     * Properties of a ProjectGetProjectListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IProjectGetProjectListCommand
                                     */

                                    /**
                                     * Constructs a new ProjectGetProjectListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ProjectGetProjectListCommand.
                                     * @implements IProjectGetProjectListCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectGetProjectListCommand=} [properties] Properties to set
                                     */
                                    function ProjectGetProjectListCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ProjectGetProjectListCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectGetProjectListCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand} ProjectGetProjectListCommand instance
                                     */
                                    ProjectGetProjectListCommand.create = function create(properties) {
                                        return new ProjectGetProjectListCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ProjectGetProjectListCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectGetProjectListCommand} message ProjectGetProjectListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectGetProjectListCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ProjectGetProjectListCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectGetProjectListCommand} message ProjectGetProjectListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectGetProjectListCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ProjectGetProjectListCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand} ProjectGetProjectListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectGetProjectListCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ProjectGetProjectListCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand} ProjectGetProjectListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectGetProjectListCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ProjectGetProjectListCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ProjectGetProjectListCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ProjectGetProjectListCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand} ProjectGetProjectListCommand
                                     */
                                    ProjectGetProjectListCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand();
                                    };

                                    /**
                                     * Creates a plain object from a ProjectGetProjectListCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand} message ProjectGetProjectListCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ProjectGetProjectListCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ProjectGetProjectListCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ProjectGetProjectListCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ProjectGetProjectListCommand;
                                })();

                                proto.ProjectGetProjectListResult = (function () {

                                    /**
                                     * Properties of a ProjectGetProjectListResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IProjectGetProjectListResult
                                     * @property {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectInfo>|null} [projectList] ProjectGetProjectListResult projectList
                                     */

                                    /**
                                     * Constructs a new ProjectGetProjectListResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ProjectGetProjectListResult.
                                     * @implements IProjectGetProjectListResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectGetProjectListResult=} [properties] Properties to set
                                     */
                                    function ProjectGetProjectListResult(properties) {
                                        this.projectList = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ProjectGetProjectListResult projectList.
                                     * @member {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectInfo>} projectList
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @instance
                                     */
                                    ProjectGetProjectListResult.prototype.projectList = $util.emptyArray;

                                    /**
                                     * Creates a new ProjectGetProjectListResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectGetProjectListResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult} ProjectGetProjectListResult instance
                                     */
                                    ProjectGetProjectListResult.create = function create(properties) {
                                        return new ProjectGetProjectListResult(properties);
                                    };

                                    /**
                                     * Encodes the specified ProjectGetProjectListResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectGetProjectListResult} message ProjectGetProjectListResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectGetProjectListResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.projectList != null && message.projectList.length)
                                            for (var i = 0; i < message.projectList.length; ++i)
                                                $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo.encode(message.projectList[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ProjectGetProjectListResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectGetProjectListResult} message ProjectGetProjectListResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectGetProjectListResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ProjectGetProjectListResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult} ProjectGetProjectListResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectGetProjectListResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    if (!(message.projectList && message.projectList.length))
                                                        message.projectList = [];
                                                    message.projectList.push($root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo.decode(reader, reader.uint32()));
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ProjectGetProjectListResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult} ProjectGetProjectListResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectGetProjectListResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ProjectGetProjectListResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ProjectGetProjectListResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.projectList != null && message.hasOwnProperty("projectList")) {
                                            if (!Array.isArray(message.projectList))
                                                return "projectList: array expected";
                                            for (var i = 0; i < message.projectList.length; ++i) {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo.verify(message.projectList[i]);
                                                if (error)
                                                    return "projectList." + error;
                                            }
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates a ProjectGetProjectListResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult} ProjectGetProjectListResult
                                     */
                                    ProjectGetProjectListResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult();
                                        if (object.projectList) {
                                            if (!Array.isArray(object.projectList))
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult.projectList: array expected");
                                            message.projectList = [];
                                            for (var i = 0; i < object.projectList.length; ++i) {
                                                if (typeof object.projectList[i] !== "object")
                                                    throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult.projectList: object expected");
                                                message.projectList[i] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo.fromObject(object.projectList[i]);
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a ProjectGetProjectListResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult} message ProjectGetProjectListResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ProjectGetProjectListResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.projectList = [];
                                        if (message.projectList && message.projectList.length) {
                                            object.projectList = [];
                                            for (var j = 0; j < message.projectList.length; ++j)
                                                object.projectList[j] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectInfo.toObject(message.projectList[j], options);
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this ProjectGetProjectListResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectGetProjectListResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ProjectGetProjectListResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ProjectGetProjectListResult;
                                })();

                                proto.ProjectLoadCommand = (function () {

                                    /**
                                     * Properties of a ProjectLoadCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IProjectLoadCommand
                                     * @property {string|null} [projectId] ProjectLoadCommand projectId
                                     */

                                    /**
                                     * Constructs a new ProjectLoadCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ProjectLoadCommand.
                                     * @implements IProjectLoadCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectLoadCommand=} [properties] Properties to set
                                     */
                                    function ProjectLoadCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ProjectLoadCommand projectId.
                                     * @member {string} projectId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @instance
                                     */
                                    ProjectLoadCommand.prototype.projectId = "";

                                    /**
                                     * Creates a new ProjectLoadCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectLoadCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand} ProjectLoadCommand instance
                                     */
                                    ProjectLoadCommand.create = function create(properties) {
                                        return new ProjectLoadCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ProjectLoadCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectLoadCommand} message ProjectLoadCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectLoadCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ProjectLoadCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectLoadCommand} message ProjectLoadCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectLoadCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ProjectLoadCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand} ProjectLoadCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectLoadCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.projectId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ProjectLoadCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand} ProjectLoadCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectLoadCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ProjectLoadCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ProjectLoadCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                                            if (!$util.isString(message.projectId))
                                                return "projectId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ProjectLoadCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand} ProjectLoadCommand
                                     */
                                    ProjectLoadCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand();
                                        if (object.projectId != null)
                                            message.projectId = String(object.projectId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a ProjectLoadCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand} message ProjectLoadCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ProjectLoadCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.projectId = "";
                                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                                            object.projectId = message.projectId;
                                        return object;
                                    };

                                    /**
                                     * Converts this ProjectLoadCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectLoadCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ProjectLoadCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ProjectLoadCommand;
                                })();

                                proto.ProjectSaveCommand = (function () {

                                    /**
                                     * Properties of a ProjectSaveCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IProjectSaveCommand
                                     * @property {string|null} [projectId] ProjectSaveCommand projectId
                                     * @property {string|null} [projectName] ProjectSaveCommand projectName
                                     */

                                    /**
                                     * Constructs a new ProjectSaveCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ProjectSaveCommand.
                                     * @implements IProjectSaveCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectSaveCommand=} [properties] Properties to set
                                     */
                                    function ProjectSaveCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ProjectSaveCommand projectId.
                                     * @member {string} projectId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @instance
                                     */
                                    ProjectSaveCommand.prototype.projectId = "";

                                    /**
                                     * ProjectSaveCommand projectName.
                                     * @member {string} projectName
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @instance
                                     */
                                    ProjectSaveCommand.prototype.projectName = "";

                                    /**
                                     * Creates a new ProjectSaveCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectSaveCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand} ProjectSaveCommand instance
                                     */
                                    ProjectSaveCommand.create = function create(properties) {
                                        return new ProjectSaveCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ProjectSaveCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectSaveCommand} message ProjectSaveCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectSaveCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                                        if (message.projectName != null && Object.hasOwnProperty.call(message, "projectName"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectName);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ProjectSaveCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectSaveCommand} message ProjectSaveCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectSaveCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ProjectSaveCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand} ProjectSaveCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectSaveCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.projectId = reader.string();
                                                    break;
                                                case 2:
                                                    message.projectName = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ProjectSaveCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand} ProjectSaveCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectSaveCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ProjectSaveCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ProjectSaveCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                                            if (!$util.isString(message.projectId))
                                                return "projectId: string expected";
                                        if (message.projectName != null && message.hasOwnProperty("projectName"))
                                            if (!$util.isString(message.projectName))
                                                return "projectName: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ProjectSaveCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand} ProjectSaveCommand
                                     */
                                    ProjectSaveCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand();
                                        if (object.projectId != null)
                                            message.projectId = String(object.projectId);
                                        if (object.projectName != null)
                                            message.projectName = String(object.projectName);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a ProjectSaveCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand} message ProjectSaveCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ProjectSaveCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.projectId = "";
                                            object.projectName = "";
                                        }
                                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                                            object.projectId = message.projectId;
                                        if (message.projectName != null && message.hasOwnProperty("projectName"))
                                            object.projectName = message.projectName;
                                        return object;
                                    };

                                    /**
                                     * Converts this ProjectSaveCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectSaveCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ProjectSaveCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ProjectSaveCommand;
                                })();

                                proto.ProjectNewCommand = (function () {

                                    /**
                                     * Properties of a ProjectNewCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IProjectNewCommand
                                     */

                                    /**
                                     * Constructs a new ProjectNewCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ProjectNewCommand.
                                     * @implements IProjectNewCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectNewCommand=} [properties] Properties to set
                                     */
                                    function ProjectNewCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ProjectNewCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectNewCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand} ProjectNewCommand instance
                                     */
                                    ProjectNewCommand.create = function create(properties) {
                                        return new ProjectNewCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ProjectNewCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectNewCommand} message ProjectNewCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectNewCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ProjectNewCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectNewCommand} message ProjectNewCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectNewCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ProjectNewCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand} ProjectNewCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectNewCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ProjectNewCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand} ProjectNewCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectNewCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ProjectNewCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ProjectNewCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ProjectNewCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand} ProjectNewCommand
                                     */
                                    ProjectNewCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand();
                                    };

                                    /**
                                     * Creates a plain object from a ProjectNewCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand} message ProjectNewCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ProjectNewCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ProjectNewCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectNewCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ProjectNewCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ProjectNewCommand;
                                })();

                                proto.ProjectCloseCommand = (function () {

                                    /**
                                     * Properties of a ProjectCloseCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IProjectCloseCommand
                                     */

                                    /**
                                     * Constructs a new ProjectCloseCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ProjectCloseCommand.
                                     * @implements IProjectCloseCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectCloseCommand=} [properties] Properties to set
                                     */
                                    function ProjectCloseCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ProjectCloseCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectCloseCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand} ProjectCloseCommand instance
                                     */
                                    ProjectCloseCommand.create = function create(properties) {
                                        return new ProjectCloseCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ProjectCloseCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectCloseCommand} message ProjectCloseCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectCloseCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ProjectCloseCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IProjectCloseCommand} message ProjectCloseCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ProjectCloseCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ProjectCloseCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand} ProjectCloseCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectCloseCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ProjectCloseCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand} ProjectCloseCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ProjectCloseCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ProjectCloseCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ProjectCloseCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ProjectCloseCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand} ProjectCloseCommand
                                     */
                                    ProjectCloseCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand();
                                    };

                                    /**
                                     * Creates a plain object from a ProjectCloseCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand} message ProjectCloseCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ProjectCloseCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ProjectCloseCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ProjectCloseCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ProjectCloseCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ProjectCloseCommand;
                                })();

                                proto.EditorUndoCommand = (function () {

                                    /**
                                     * Properties of an EditorUndoCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorUndoCommand
                                     */

                                    /**
                                     * Constructs a new EditorUndoCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorUndoCommand.
                                     * @implements IEditorUndoCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorUndoCommand=} [properties] Properties to set
                                     */
                                    function EditorUndoCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new EditorUndoCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorUndoCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand} EditorUndoCommand instance
                                     */
                                    EditorUndoCommand.create = function create(properties) {
                                        return new EditorUndoCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorUndoCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorUndoCommand} message EditorUndoCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorUndoCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorUndoCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorUndoCommand} message EditorUndoCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorUndoCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorUndoCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand} EditorUndoCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorUndoCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorUndoCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand} EditorUndoCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorUndoCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorUndoCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorUndoCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorUndoCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand} EditorUndoCommand
                                     */
                                    EditorUndoCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand();
                                    };

                                    /**
                                     * Creates a plain object from an EditorUndoCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand} message EditorUndoCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorUndoCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this EditorUndoCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorUndoCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorUndoCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorUndoCommand;
                                })();

                                proto.EditorRedoCommand = (function () {

                                    /**
                                     * Properties of an EditorRedoCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorRedoCommand
                                     */

                                    /**
                                     * Constructs a new EditorRedoCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorRedoCommand.
                                     * @implements IEditorRedoCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRedoCommand=} [properties] Properties to set
                                     */
                                    function EditorRedoCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new EditorRedoCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRedoCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand} EditorRedoCommand instance
                                     */
                                    EditorRedoCommand.create = function create(properties) {
                                        return new EditorRedoCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorRedoCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRedoCommand} message EditorRedoCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorRedoCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorRedoCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRedoCommand} message EditorRedoCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorRedoCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorRedoCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand} EditorRedoCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorRedoCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorRedoCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand} EditorRedoCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorRedoCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorRedoCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorRedoCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorRedoCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand} EditorRedoCommand
                                     */
                                    EditorRedoCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand();
                                    };

                                    /**
                                     * Creates a plain object from an EditorRedoCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand} message EditorRedoCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorRedoCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this EditorRedoCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRedoCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorRedoCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorRedoCommand;
                                })();

                                proto.EditorGetStackSizeCommand = (function () {

                                    /**
                                     * Properties of an EditorGetStackSizeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetStackSizeCommand
                                     */

                                    /**
                                     * Constructs a new EditorGetStackSizeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetStackSizeCommand.
                                     * @implements IEditorGetStackSizeCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommand=} [properties] Properties to set
                                     */
                                    function EditorGetStackSizeCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new EditorGetStackSizeCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand} EditorGetStackSizeCommand instance
                                     */
                                    EditorGetStackSizeCommand.create = function create(properties) {
                                        return new EditorGetStackSizeCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetStackSizeCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommand} message EditorGetStackSizeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetStackSizeCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetStackSizeCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommand} message EditorGetStackSizeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetStackSizeCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetStackSizeCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand} EditorGetStackSizeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetStackSizeCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetStackSizeCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand} EditorGetStackSizeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetStackSizeCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetStackSizeCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetStackSizeCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetStackSizeCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand} EditorGetStackSizeCommand
                                     */
                                    EditorGetStackSizeCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand();
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetStackSizeCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand} message EditorGetStackSizeCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetStackSizeCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this EditorGetStackSizeCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetStackSizeCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetStackSizeCommand;
                                })();

                                proto.EditorGetStackSizeCommandResult = (function () {

                                    /**
                                     * Properties of an EditorGetStackSizeCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetStackSizeCommandResult
                                     * @property {number|null} [redoStackSize] EditorGetStackSizeCommandResult redoStackSize
                                     * @property {number|null} [undoStackSize] EditorGetStackSizeCommandResult undoStackSize
                                     */

                                    /**
                                     * Constructs a new EditorGetStackSizeCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetStackSizeCommandResult.
                                     * @implements IEditorGetStackSizeCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommandResult=} [properties] Properties to set
                                     */
                                    function EditorGetStackSizeCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetStackSizeCommandResult redoStackSize.
                                     * @member {number} redoStackSize
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @instance
                                     */
                                    EditorGetStackSizeCommandResult.prototype.redoStackSize = 0;

                                    /**
                                     * EditorGetStackSizeCommandResult undoStackSize.
                                     * @member {number} undoStackSize
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @instance
                                     */
                                    EditorGetStackSizeCommandResult.prototype.undoStackSize = 0;

                                    /**
                                     * Creates a new EditorGetStackSizeCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult} EditorGetStackSizeCommandResult instance
                                     */
                                    EditorGetStackSizeCommandResult.create = function create(properties) {
                                        return new EditorGetStackSizeCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetStackSizeCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommandResult} message EditorGetStackSizeCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetStackSizeCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.redoStackSize != null && Object.hasOwnProperty.call(message, "redoStackSize"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.redoStackSize);
                                        if (message.undoStackSize != null && Object.hasOwnProperty.call(message, "undoStackSize"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.undoStackSize);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetStackSizeCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetStackSizeCommandResult} message EditorGetStackSizeCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetStackSizeCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetStackSizeCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult} EditorGetStackSizeCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetStackSizeCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.redoStackSize = reader.uint32();
                                                    break;
                                                case 2:
                                                    message.undoStackSize = reader.uint32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetStackSizeCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult} EditorGetStackSizeCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetStackSizeCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetStackSizeCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetStackSizeCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.redoStackSize != null && message.hasOwnProperty("redoStackSize"))
                                            if (!$util.isInteger(message.redoStackSize))
                                                return "redoStackSize: integer expected";
                                        if (message.undoStackSize != null && message.hasOwnProperty("undoStackSize"))
                                            if (!$util.isInteger(message.undoStackSize))
                                                return "undoStackSize: integer expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetStackSizeCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult} EditorGetStackSizeCommandResult
                                     */
                                    EditorGetStackSizeCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult();
                                        if (object.redoStackSize != null)
                                            message.redoStackSize = object.redoStackSize >>> 0;
                                        if (object.undoStackSize != null)
                                            message.undoStackSize = object.undoStackSize >>> 0;
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetStackSizeCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult} message EditorGetStackSizeCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetStackSizeCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.redoStackSize = 0;
                                            object.undoStackSize = 0;
                                        }
                                        if (message.redoStackSize != null && message.hasOwnProperty("redoStackSize"))
                                            object.redoStackSize = message.redoStackSize;
                                        if (message.undoStackSize != null && message.hasOwnProperty("undoStackSize"))
                                            object.undoStackSize = message.undoStackSize;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetStackSizeCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetStackSizeCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetStackSizeCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetStackSizeCommandResult;
                                })();

                                /**
                                 * ScaleType enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType
                                 * @enum {number}
                                 * @property {number} Invalid=0 Invalid value
                                 * @property {number} FixXY=1 FixXY value
                                 * @property {number} CenterInside=2 CenterInside value
                                 * @property {number} CenterCrop=3 CenterCrop value
                                 * @property {number} StartCrop=4 StartCrop value
                                 * @property {number} EndCrop=5 EndCrop value
                                 * @property {number} FitStart=6 FitStart value
                                 * @property {number} FitEnd=7 FitEnd value
                                 */
                                proto.ScaleType = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "Invalid"] = 0;
                                    values[valuesById[1] = "FixXY"] = 1;
                                    values[valuesById[2] = "CenterInside"] = 2;
                                    values[valuesById[3] = "CenterCrop"] = 3;
                                    values[valuesById[4] = "StartCrop"] = 4;
                                    values[valuesById[5] = "EndCrop"] = 5;
                                    values[valuesById[6] = "FitStart"] = 6;
                                    values[valuesById[7] = "FitEnd"] = 7;
                                    return values;
                                })();

                                proto.EditorSetCanvasPropertiesCommand = (function () {

                                    /**
                                     * Properties of an EditorSetCanvasPropertiesCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetCanvasPropertiesCommand
                                     * @property {number|null} [width] EditorSetCanvasPropertiesCommand width
                                     * @property {number|null} [height] EditorSetCanvasPropertiesCommand height
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType|null} [scaleType] EditorSetCanvasPropertiesCommand scaleType
                                     * @property {number|null} [backgroundColor] EditorSetCanvasPropertiesCommand backgroundColor
                                     */

                                    /**
                                     * Constructs a new EditorSetCanvasPropertiesCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetCanvasPropertiesCommand.
                                     * @implements IEditorSetCanvasPropertiesCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetCanvasPropertiesCommand=} [properties] Properties to set
                                     */
                                    function EditorSetCanvasPropertiesCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetCanvasPropertiesCommand width.
                                     * @member {number} width
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @instance
                                     */
                                    EditorSetCanvasPropertiesCommand.prototype.width = 0;

                                    /**
                                     * EditorSetCanvasPropertiesCommand height.
                                     * @member {number} height
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @instance
                                     */
                                    EditorSetCanvasPropertiesCommand.prototype.height = 0;

                                    /**
                                     * EditorSetCanvasPropertiesCommand scaleType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType} scaleType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @instance
                                     */
                                    EditorSetCanvasPropertiesCommand.prototype.scaleType = 0;

                                    /**
                                     * EditorSetCanvasPropertiesCommand backgroundColor.
                                     * @member {number} backgroundColor
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @instance
                                     */
                                    EditorSetCanvasPropertiesCommand.prototype.backgroundColor = 0;

                                    /**
                                     * Creates a new EditorSetCanvasPropertiesCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetCanvasPropertiesCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand} EditorSetCanvasPropertiesCommand instance
                                     */
                                    EditorSetCanvasPropertiesCommand.create = function create(properties) {
                                        return new EditorSetCanvasPropertiesCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetCanvasPropertiesCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetCanvasPropertiesCommand} message EditorSetCanvasPropertiesCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetCanvasPropertiesCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.width);
                                        if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.height);
                                        if (message.scaleType != null && Object.hasOwnProperty.call(message, "scaleType"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.scaleType);
                                        if (message.backgroundColor != null && Object.hasOwnProperty.call(message, "backgroundColor"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.backgroundColor);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetCanvasPropertiesCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetCanvasPropertiesCommand} message EditorSetCanvasPropertiesCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetCanvasPropertiesCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetCanvasPropertiesCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand} EditorSetCanvasPropertiesCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetCanvasPropertiesCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.width = reader.uint32();
                                                    break;
                                                case 2:
                                                    message.height = reader.uint32();
                                                    break;
                                                case 3:
                                                    message.scaleType = reader.int32();
                                                    break;
                                                case 4:
                                                    message.backgroundColor = reader.uint32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetCanvasPropertiesCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand} EditorSetCanvasPropertiesCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetCanvasPropertiesCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetCanvasPropertiesCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetCanvasPropertiesCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            if (!$util.isInteger(message.width))
                                                return "width: integer expected";
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            if (!$util.isInteger(message.height))
                                                return "height: integer expected";
                                        if (message.scaleType != null && message.hasOwnProperty("scaleType"))
                                            switch (message.scaleType) {
                                                default:
                                                    return "scaleType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                case 5:
                                                case 6:
                                                case 7:
                                                    break;
                                            }
                                        if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor"))
                                            if (!$util.isInteger(message.backgroundColor))
                                                return "backgroundColor: integer expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetCanvasPropertiesCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand} EditorSetCanvasPropertiesCommand
                                     */
                                    EditorSetCanvasPropertiesCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand();
                                        if (object.width != null)
                                            message.width = object.width >>> 0;
                                        if (object.height != null)
                                            message.height = object.height >>> 0;
                                        switch (object.scaleType) {
                                            case "Invalid":
                                            case 0:
                                                message.scaleType = 0;
                                                break;
                                            case "FixXY":
                                            case 1:
                                                message.scaleType = 1;
                                                break;
                                            case "CenterInside":
                                            case 2:
                                                message.scaleType = 2;
                                                break;
                                            case "CenterCrop":
                                            case 3:
                                                message.scaleType = 3;
                                                break;
                                            case "StartCrop":
                                            case 4:
                                                message.scaleType = 4;
                                                break;
                                            case "EndCrop":
                                            case 5:
                                                message.scaleType = 5;
                                                break;
                                            case "FitStart":
                                            case 6:
                                                message.scaleType = 6;
                                                break;
                                            case "FitEnd":
                                            case 7:
                                                message.scaleType = 7;
                                                break;
                                        }
                                        if (object.backgroundColor != null)
                                            message.backgroundColor = object.backgroundColor >>> 0;
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetCanvasPropertiesCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand} message EditorSetCanvasPropertiesCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetCanvasPropertiesCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.width = 0;
                                            object.height = 0;
                                            object.scaleType = options.enums === String ? "Invalid" : 0;
                                            object.backgroundColor = 0;
                                        }
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            object.width = message.width;
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            object.height = message.height;
                                        if (message.scaleType != null && message.hasOwnProperty("scaleType"))
                                            object.scaleType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType[message.scaleType] : message.scaleType;
                                        if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor"))
                                            object.backgroundColor = message.backgroundColor;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetCanvasPropertiesCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetCanvasPropertiesCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetCanvasPropertiesCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetCanvasPropertiesCommand;
                                })();

                                proto.EditorGetCanvasPropertiesCommand = (function () {

                                    /**
                                     * Properties of an EditorGetCanvasPropertiesCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetCanvasPropertiesCommand
                                     */

                                    /**
                                     * Constructs a new EditorGetCanvasPropertiesCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetCanvasPropertiesCommand.
                                     * @implements IEditorGetCanvasPropertiesCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommand=} [properties] Properties to set
                                     */
                                    function EditorGetCanvasPropertiesCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new EditorGetCanvasPropertiesCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand} EditorGetCanvasPropertiesCommand instance
                                     */
                                    EditorGetCanvasPropertiesCommand.create = function create(properties) {
                                        return new EditorGetCanvasPropertiesCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetCanvasPropertiesCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommand} message EditorGetCanvasPropertiesCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetCanvasPropertiesCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetCanvasPropertiesCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommand} message EditorGetCanvasPropertiesCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetCanvasPropertiesCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetCanvasPropertiesCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand} EditorGetCanvasPropertiesCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetCanvasPropertiesCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetCanvasPropertiesCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand} EditorGetCanvasPropertiesCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetCanvasPropertiesCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetCanvasPropertiesCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetCanvasPropertiesCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetCanvasPropertiesCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand} EditorGetCanvasPropertiesCommand
                                     */
                                    EditorGetCanvasPropertiesCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand();
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetCanvasPropertiesCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand} message EditorGetCanvasPropertiesCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetCanvasPropertiesCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this EditorGetCanvasPropertiesCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetCanvasPropertiesCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetCanvasPropertiesCommand;
                                })();

                                proto.EditorGetCanvasPropertiesCommandResult = (function () {

                                    /**
                                     * Properties of an EditorGetCanvasPropertiesCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetCanvasPropertiesCommandResult
                                     * @property {number|null} [width] EditorGetCanvasPropertiesCommandResult width
                                     * @property {number|null} [height] EditorGetCanvasPropertiesCommandResult height
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType|null} [scaleType] EditorGetCanvasPropertiesCommandResult scaleType
                                     * @property {number|null} [backgroundColor] EditorGetCanvasPropertiesCommandResult backgroundColor
                                     */

                                    /**
                                     * Constructs a new EditorGetCanvasPropertiesCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetCanvasPropertiesCommandResult.
                                     * @implements IEditorGetCanvasPropertiesCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommandResult=} [properties] Properties to set
                                     */
                                    function EditorGetCanvasPropertiesCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetCanvasPropertiesCommandResult width.
                                     * @member {number} width
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @instance
                                     */
                                    EditorGetCanvasPropertiesCommandResult.prototype.width = 0;

                                    /**
                                     * EditorGetCanvasPropertiesCommandResult height.
                                     * @member {number} height
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @instance
                                     */
                                    EditorGetCanvasPropertiesCommandResult.prototype.height = 0;

                                    /**
                                     * EditorGetCanvasPropertiesCommandResult scaleType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType} scaleType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @instance
                                     */
                                    EditorGetCanvasPropertiesCommandResult.prototype.scaleType = 0;

                                    /**
                                     * EditorGetCanvasPropertiesCommandResult backgroundColor.
                                     * @member {number} backgroundColor
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @instance
                                     */
                                    EditorGetCanvasPropertiesCommandResult.prototype.backgroundColor = 0;

                                    /**
                                     * Creates a new EditorGetCanvasPropertiesCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult} EditorGetCanvasPropertiesCommandResult instance
                                     */
                                    EditorGetCanvasPropertiesCommandResult.create = function create(properties) {
                                        return new EditorGetCanvasPropertiesCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetCanvasPropertiesCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommandResult} message EditorGetCanvasPropertiesCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetCanvasPropertiesCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.width);
                                        if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.height);
                                        if (message.scaleType != null && Object.hasOwnProperty.call(message, "scaleType"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.scaleType);
                                        if (message.backgroundColor != null && Object.hasOwnProperty.call(message, "backgroundColor"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.backgroundColor);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetCanvasPropertiesCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetCanvasPropertiesCommandResult} message EditorGetCanvasPropertiesCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetCanvasPropertiesCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetCanvasPropertiesCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult} EditorGetCanvasPropertiesCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetCanvasPropertiesCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.width = reader.uint32();
                                                    break;
                                                case 2:
                                                    message.height = reader.uint32();
                                                    break;
                                                case 3:
                                                    message.scaleType = reader.int32();
                                                    break;
                                                case 4:
                                                    message.backgroundColor = reader.uint32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetCanvasPropertiesCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult} EditorGetCanvasPropertiesCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetCanvasPropertiesCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetCanvasPropertiesCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetCanvasPropertiesCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            if (!$util.isInteger(message.width))
                                                return "width: integer expected";
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            if (!$util.isInteger(message.height))
                                                return "height: integer expected";
                                        if (message.scaleType != null && message.hasOwnProperty("scaleType"))
                                            switch (message.scaleType) {
                                                default:
                                                    return "scaleType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                case 5:
                                                case 6:
                                                case 7:
                                                    break;
                                            }
                                        if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor"))
                                            if (!$util.isInteger(message.backgroundColor))
                                                return "backgroundColor: integer expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetCanvasPropertiesCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult} EditorGetCanvasPropertiesCommandResult
                                     */
                                    EditorGetCanvasPropertiesCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult();
                                        if (object.width != null)
                                            message.width = object.width >>> 0;
                                        if (object.height != null)
                                            message.height = object.height >>> 0;
                                        switch (object.scaleType) {
                                            case "Invalid":
                                            case 0:
                                                message.scaleType = 0;
                                                break;
                                            case "FixXY":
                                            case 1:
                                                message.scaleType = 1;
                                                break;
                                            case "CenterInside":
                                            case 2:
                                                message.scaleType = 2;
                                                break;
                                            case "CenterCrop":
                                            case 3:
                                                message.scaleType = 3;
                                                break;
                                            case "StartCrop":
                                            case 4:
                                                message.scaleType = 4;
                                                break;
                                            case "EndCrop":
                                            case 5:
                                                message.scaleType = 5;
                                                break;
                                            case "FitStart":
                                            case 6:
                                                message.scaleType = 6;
                                                break;
                                            case "FitEnd":
                                            case 7:
                                                message.scaleType = 7;
                                                break;
                                        }
                                        if (object.backgroundColor != null)
                                            message.backgroundColor = object.backgroundColor >>> 0;
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetCanvasPropertiesCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult} message EditorGetCanvasPropertiesCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetCanvasPropertiesCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.width = 0;
                                            object.height = 0;
                                            object.scaleType = options.enums === String ? "Invalid" : 0;
                                            object.backgroundColor = 0;
                                        }
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            object.width = message.width;
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            object.height = message.height;
                                        if (message.scaleType != null && message.hasOwnProperty("scaleType"))
                                            object.scaleType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType[message.scaleType] : message.scaleType;
                                        if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor"))
                                            object.backgroundColor = message.backgroundColor;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetCanvasPropertiesCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetCanvasPropertiesCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetCanvasPropertiesCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetCanvasPropertiesCommandResult;
                                })();

                                proto.EditorAddMainClipCommand = (function () {

                                    /**
                                     * Properties of an EditorAddMainClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddMainClipCommand
                                     * @property {string|null} [resourceUri] EditorAddMainClipCommand resourceUri
                                     * @property {number|Long|null} [startTime] EditorAddMainClipCommand startTime
                                     * @property {number|Long|null} [endTime] EditorAddMainClipCommand endTime
                                     */

                                    /**
                                     * Constructs a new EditorAddMainClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddMainClipCommand.
                                     * @implements IEditorAddMainClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommand=} [properties] Properties to set
                                     */
                                    function EditorAddMainClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddMainClipCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @instance
                                     */
                                    EditorAddMainClipCommand.prototype.resourceUri = "";

                                    /**
                                     * EditorAddMainClipCommand startTime.
                                     * @member {number|Long} startTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @instance
                                     */
                                    EditorAddMainClipCommand.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorAddMainClipCommand endTime.
                                     * @member {number|Long} endTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @instance
                                     */
                                    EditorAddMainClipCommand.prototype.endTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorAddMainClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand} EditorAddMainClipCommand instance
                                     */
                                    EditorAddMainClipCommand.create = function create(properties) {
                                        return new EditorAddMainClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddMainClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommand} message EditorAddMainClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddMainClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceUri);
                                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.startTime);
                                        if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.endTime);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddMainClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommand} message EditorAddMainClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddMainClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddMainClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand} EditorAddMainClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddMainClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                case 2:
                                                    message.startTime = reader.int64();
                                                    break;
                                                case 3:
                                                    message.endTime = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddMainClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand} EditorAddMainClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddMainClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddMainClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddMainClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))
                                                return "startTime: integer|Long expected";
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))
                                                return "endTime: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddMainClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand} EditorAddMainClipCommand
                                     */
                                    EditorAddMainClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand();
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        if (object.startTime != null)
                                            if ($util.Long)
                                                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;
                                            else if (typeof object.startTime === "string")
                                                message.startTime = parseInt(object.startTime, 10);
                                            else if (typeof object.startTime === "number")
                                                message.startTime = object.startTime;
                                            else if (typeof object.startTime === "object")
                                                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();
                                        if (object.endTime != null)
                                            if ($util.Long)
                                                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;
                                            else if (typeof object.endTime === "string")
                                                message.endTime = parseInt(object.endTime, 10);
                                            else if (typeof object.endTime === "number")
                                                message.endTime = object.endTime;
                                            else if (typeof object.endTime === "object")
                                                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddMainClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand} message EditorAddMainClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddMainClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.resourceUri = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.startTime = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.endTime = options.longs === String ? "0" : 0;
                                        }
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (typeof message.startTime === "number")
                                                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;
                                            else
                                                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (typeof message.endTime === "number")
                                                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;
                                            else
                                                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddMainClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddMainClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddMainClipCommand;
                                })();

                                proto.EditorAddMainClipCommandResult = (function () {

                                    /**
                                     * Properties of an EditorAddMainClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddMainClipCommandResult
                                     * @property {string|null} [clipId] EditorAddMainClipCommandResult clipId
                                     */

                                    /**
                                     * Constructs a new EditorAddMainClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddMainClipCommandResult.
                                     * @implements IEditorAddMainClipCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommandResult=} [properties] Properties to set
                                     */
                                    function EditorAddMainClipCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddMainClipCommandResult clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @instance
                                     */
                                    EditorAddMainClipCommandResult.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorAddMainClipCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult} EditorAddMainClipCommandResult instance
                                     */
                                    EditorAddMainClipCommandResult.create = function create(properties) {
                                        return new EditorAddMainClipCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddMainClipCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommandResult} message EditorAddMainClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddMainClipCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddMainClipCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMainClipCommandResult} message EditorAddMainClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddMainClipCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddMainClipCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult} EditorAddMainClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddMainClipCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddMainClipCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult} EditorAddMainClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddMainClipCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddMainClipCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddMainClipCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddMainClipCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult} EditorAddMainClipCommandResult
                                     */
                                    EditorAddMainClipCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddMainClipCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult} message EditorAddMainClipCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddMainClipCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddMainClipCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMainClipCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddMainClipCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddMainClipCommandResult;
                                })();

                                proto.EditorAddLookupClipCommand = (function () {

                                    /**
                                     * Properties of an EditorAddLookupClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddLookupClipCommand
                                     * @property {string|null} [trackId] EditorAddLookupClipCommand trackId
                                     * @property {string|null} [resourceUri] EditorAddLookupClipCommand resourceUri
                                     * @property {number|null} [intensity] EditorAddLookupClipCommand intensity
                                     * @property {number|Long|null} [startTime] EditorAddLookupClipCommand startTime
                                     * @property {number|Long|null} [duration] EditorAddLookupClipCommand duration
                                     */

                                    /**
                                     * Constructs a new EditorAddLookupClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddLookupClipCommand.
                                     * @implements IEditorAddLookupClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommand=} [properties] Properties to set
                                     */
                                    function EditorAddLookupClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddLookupClipCommand trackId.
                                     * @member {string} trackId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @instance
                                     */
                                    EditorAddLookupClipCommand.prototype.trackId = "";

                                    /**
                                     * EditorAddLookupClipCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @instance
                                     */
                                    EditorAddLookupClipCommand.prototype.resourceUri = "";

                                    /**
                                     * EditorAddLookupClipCommand intensity.
                                     * @member {number} intensity
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @instance
                                     */
                                    EditorAddLookupClipCommand.prototype.intensity = 0;

                                    /**
                                     * EditorAddLookupClipCommand startTime.
                                     * @member {number|Long} startTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @instance
                                     */
                                    EditorAddLookupClipCommand.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorAddLookupClipCommand duration.
                                     * @member {number|Long} duration
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @instance
                                     */
                                    EditorAddLookupClipCommand.prototype.duration = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;

                                    /**
                                     * Creates a new EditorAddLookupClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand} EditorAddLookupClipCommand instance
                                     */
                                    EditorAddLookupClipCommand.create = function create(properties) {
                                        return new EditorAddLookupClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddLookupClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommand} message EditorAddLookupClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddLookupClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.trackId != null && Object.hasOwnProperty.call(message, "trackId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        if (message.intensity != null && Object.hasOwnProperty.call(message, "intensity"))
                                            writer.uint32(/* id 3, wireType 5 =*/29).float(message.intensity);
                                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.startTime);
                                        if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                            writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.duration);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddLookupClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommand} message EditorAddLookupClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddLookupClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddLookupClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand} EditorAddLookupClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddLookupClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.trackId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                case 3:
                                                    message.intensity = reader.float();
                                                    break;
                                                case 4:
                                                    message.startTime = reader.int64();
                                                    break;
                                                case 5:
                                                    message.duration = reader.uint64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddLookupClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand} EditorAddLookupClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddLookupClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddLookupClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddLookupClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            if (!$util.isString(message.trackId))
                                                return "trackId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        if (message.intensity != null && message.hasOwnProperty("intensity"))
                                            if (typeof message.intensity !== "number")
                                                return "intensity: number expected";
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))
                                                return "startTime: integer|Long expected";
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (!$util.isInteger(message.duration) && !(message.duration && $util.isInteger(message.duration.low) && $util.isInteger(message.duration.high)))
                                                return "duration: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddLookupClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand} EditorAddLookupClipCommand
                                     */
                                    EditorAddLookupClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand();
                                        if (object.trackId != null)
                                            message.trackId = String(object.trackId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        if (object.intensity != null)
                                            message.intensity = Number(object.intensity);
                                        if (object.startTime != null)
                                            if ($util.Long)
                                                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;
                                            else if (typeof object.startTime === "string")
                                                message.startTime = parseInt(object.startTime, 10);
                                            else if (typeof object.startTime === "number")
                                                message.startTime = object.startTime;
                                            else if (typeof object.startTime === "object")
                                                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();
                                        if (object.duration != null)
                                            if ($util.Long)
                                                (message.duration = $util.Long.fromValue(object.duration)).unsigned = true;
                                            else if (typeof object.duration === "string")
                                                message.duration = parseInt(object.duration, 10);
                                            else if (typeof object.duration === "number")
                                                message.duration = object.duration;
                                            else if (typeof object.duration === "object")
                                                message.duration = new $util.LongBits(object.duration.low >>> 0, object.duration.high >>> 0).toNumber(true);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddLookupClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand} message EditorAddLookupClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddLookupClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.trackId = "";
                                            object.resourceUri = "";
                                            object.intensity = 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.startTime = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, true);
                                                object.duration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.duration = options.longs === String ? "0" : 0;
                                        }
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            object.trackId = message.trackId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        if (message.intensity != null && message.hasOwnProperty("intensity"))
                                            object.intensity = options.json && !isFinite(message.intensity) ? String(message.intensity) : message.intensity;
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (typeof message.startTime === "number")
                                                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;
                                            else
                                                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (typeof message.duration === "number")
                                                object.duration = options.longs === String ? String(message.duration) : message.duration;
                                            else
                                                object.duration = options.longs === String ? $util.Long.prototype.toString.call(message.duration) : options.longs === Number ? new $util.LongBits(message.duration.low >>> 0, message.duration.high >>> 0).toNumber(true) : message.duration;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddLookupClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddLookupClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddLookupClipCommand;
                                })();

                                proto.EditorAddLookupClipCommandResult = (function () {

                                    /**
                                     * Properties of an EditorAddLookupClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddLookupClipCommandResult
                                     * @property {string|null} [clipId] EditorAddLookupClipCommandResult clipId
                                     */

                                    /**
                                     * Constructs a new EditorAddLookupClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddLookupClipCommandResult.
                                     * @implements IEditorAddLookupClipCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommandResult=} [properties] Properties to set
                                     */
                                    function EditorAddLookupClipCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddLookupClipCommandResult clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @instance
                                     */
                                    EditorAddLookupClipCommandResult.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorAddLookupClipCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult} EditorAddLookupClipCommandResult instance
                                     */
                                    EditorAddLookupClipCommandResult.create = function create(properties) {
                                        return new EditorAddLookupClipCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddLookupClipCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommandResult} message EditorAddLookupClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddLookupClipCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddLookupClipCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddLookupClipCommandResult} message EditorAddLookupClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddLookupClipCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddLookupClipCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult} EditorAddLookupClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddLookupClipCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddLookupClipCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult} EditorAddLookupClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddLookupClipCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddLookupClipCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddLookupClipCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddLookupClipCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult} EditorAddLookupClipCommandResult
                                     */
                                    EditorAddLookupClipCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddLookupClipCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult} message EditorAddLookupClipCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddLookupClipCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddLookupClipCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddLookupClipCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddLookupClipCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddLookupClipCommandResult;
                                })();

                                proto.EditorAddPipClipCommand = (function () {

                                    /**
                                     * Properties of an EditorAddPipClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddPipClipCommand
                                     * @property {string|null} [trackId] EditorAddPipClipCommand trackId
                                     * @property {string|null} [resourceUri] EditorAddPipClipCommand resourceUri
                                     * @property {number|Long|null} [timePosition] EditorAddPipClipCommand timePosition
                                     * @property {number|Long|null} [startTime] EditorAddPipClipCommand startTime
                                     * @property {number|Long|null} [endTime] EditorAddPipClipCommand endTime
                                     */

                                    /**
                                     * Constructs a new EditorAddPipClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddPipClipCommand.
                                     * @implements IEditorAddPipClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommand=} [properties] Properties to set
                                     */
                                    function EditorAddPipClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddPipClipCommand trackId.
                                     * @member {string} trackId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @instance
                                     */
                                    EditorAddPipClipCommand.prototype.trackId = "";

                                    /**
                                     * EditorAddPipClipCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @instance
                                     */
                                    EditorAddPipClipCommand.prototype.resourceUri = "";

                                    /**
                                     * EditorAddPipClipCommand timePosition.
                                     * @member {number|Long} timePosition
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @instance
                                     */
                                    EditorAddPipClipCommand.prototype.timePosition = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorAddPipClipCommand startTime.
                                     * @member {number|Long} startTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @instance
                                     */
                                    EditorAddPipClipCommand.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorAddPipClipCommand endTime.
                                     * @member {number|Long} endTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @instance
                                     */
                                    EditorAddPipClipCommand.prototype.endTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorAddPipClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand} EditorAddPipClipCommand instance
                                     */
                                    EditorAddPipClipCommand.create = function create(properties) {
                                        return new EditorAddPipClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddPipClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommand} message EditorAddPipClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddPipClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.trackId != null && Object.hasOwnProperty.call(message, "trackId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        if (message.timePosition != null && Object.hasOwnProperty.call(message, "timePosition"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.timePosition);
                                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.startTime);
                                        if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.endTime);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddPipClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommand} message EditorAddPipClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddPipClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddPipClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand} EditorAddPipClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddPipClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.trackId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                case 3:
                                                    message.timePosition = reader.int64();
                                                    break;
                                                case 4:
                                                    message.startTime = reader.int64();
                                                    break;
                                                case 5:
                                                    message.endTime = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddPipClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand} EditorAddPipClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddPipClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddPipClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddPipClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            if (!$util.isString(message.trackId))
                                                return "trackId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        if (message.timePosition != null && message.hasOwnProperty("timePosition"))
                                            if (!$util.isInteger(message.timePosition) && !(message.timePosition && $util.isInteger(message.timePosition.low) && $util.isInteger(message.timePosition.high)))
                                                return "timePosition: integer|Long expected";
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))
                                                return "startTime: integer|Long expected";
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))
                                                return "endTime: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddPipClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand} EditorAddPipClipCommand
                                     */
                                    EditorAddPipClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand();
                                        if (object.trackId != null)
                                            message.trackId = String(object.trackId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        if (object.timePosition != null)
                                            if ($util.Long)
                                                (message.timePosition = $util.Long.fromValue(object.timePosition)).unsigned = false;
                                            else if (typeof object.timePosition === "string")
                                                message.timePosition = parseInt(object.timePosition, 10);
                                            else if (typeof object.timePosition === "number")
                                                message.timePosition = object.timePosition;
                                            else if (typeof object.timePosition === "object")
                                                message.timePosition = new $util.LongBits(object.timePosition.low >>> 0, object.timePosition.high >>> 0).toNumber();
                                        if (object.startTime != null)
                                            if ($util.Long)
                                                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;
                                            else if (typeof object.startTime === "string")
                                                message.startTime = parseInt(object.startTime, 10);
                                            else if (typeof object.startTime === "number")
                                                message.startTime = object.startTime;
                                            else if (typeof object.startTime === "object")
                                                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();
                                        if (object.endTime != null)
                                            if ($util.Long)
                                                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;
                                            else if (typeof object.endTime === "string")
                                                message.endTime = parseInt(object.endTime, 10);
                                            else if (typeof object.endTime === "number")
                                                message.endTime = object.endTime;
                                            else if (typeof object.endTime === "object")
                                                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddPipClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand} message EditorAddPipClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddPipClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.trackId = "";
                                            object.resourceUri = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.timePosition = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.timePosition = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.startTime = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.endTime = options.longs === String ? "0" : 0;
                                        }
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            object.trackId = message.trackId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        if (message.timePosition != null && message.hasOwnProperty("timePosition"))
                                            if (typeof message.timePosition === "number")
                                                object.timePosition = options.longs === String ? String(message.timePosition) : message.timePosition;
                                            else
                                                object.timePosition = options.longs === String ? $util.Long.prototype.toString.call(message.timePosition) : options.longs === Number ? new $util.LongBits(message.timePosition.low >>> 0, message.timePosition.high >>> 0).toNumber() : message.timePosition;
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (typeof message.startTime === "number")
                                                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;
                                            else
                                                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (typeof message.endTime === "number")
                                                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;
                                            else
                                                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddPipClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddPipClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddPipClipCommand;
                                })();

                                proto.EditorAddPipClipCommandResult = (function () {

                                    /**
                                     * Properties of an EditorAddPipClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddPipClipCommandResult
                                     * @property {string|null} [clipId] EditorAddPipClipCommandResult clipId
                                     */

                                    /**
                                     * Constructs a new EditorAddPipClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddPipClipCommandResult.
                                     * @implements IEditorAddPipClipCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommandResult=} [properties] Properties to set
                                     */
                                    function EditorAddPipClipCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddPipClipCommandResult clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @instance
                                     */
                                    EditorAddPipClipCommandResult.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorAddPipClipCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult} EditorAddPipClipCommandResult instance
                                     */
                                    EditorAddPipClipCommandResult.create = function create(properties) {
                                        return new EditorAddPipClipCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddPipClipCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommandResult} message EditorAddPipClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddPipClipCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddPipClipCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddPipClipCommandResult} message EditorAddPipClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddPipClipCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddPipClipCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult} EditorAddPipClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddPipClipCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddPipClipCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult} EditorAddPipClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddPipClipCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddPipClipCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddPipClipCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddPipClipCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult} EditorAddPipClipCommandResult
                                     */
                                    EditorAddPipClipCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddPipClipCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult} message EditorAddPipClipCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddPipClipCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddPipClipCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddPipClipCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddPipClipCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddPipClipCommandResult;
                                })();

                                proto.EditorAddMusicClipCommand = (function () {

                                    /**
                                     * Properties of an EditorAddMusicClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddMusicClipCommand
                                     * @property {string|null} [trackId] EditorAddMusicClipCommand trackId
                                     * @property {string|null} [resourceUri] EditorAddMusicClipCommand resourceUri
                                     * @property {number|Long|null} [timePosition] EditorAddMusicClipCommand timePosition
                                     * @property {number|Long|null} [startTime] EditorAddMusicClipCommand startTime
                                     * @property {number|Long|null} [endTime] EditorAddMusicClipCommand endTime
                                     */

                                    /**
                                     * Constructs a new EditorAddMusicClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddMusicClipCommand.
                                     * @implements IEditorAddMusicClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommand=} [properties] Properties to set
                                     */
                                    function EditorAddMusicClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddMusicClipCommand trackId.
                                     * @member {string} trackId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @instance
                                     */
                                    EditorAddMusicClipCommand.prototype.trackId = "";

                                    /**
                                     * EditorAddMusicClipCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @instance
                                     */
                                    EditorAddMusicClipCommand.prototype.resourceUri = "";

                                    /**
                                     * EditorAddMusicClipCommand timePosition.
                                     * @member {number|Long} timePosition
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @instance
                                     */
                                    EditorAddMusicClipCommand.prototype.timePosition = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorAddMusicClipCommand startTime.
                                     * @member {number|Long} startTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @instance
                                     */
                                    EditorAddMusicClipCommand.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorAddMusicClipCommand endTime.
                                     * @member {number|Long} endTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @instance
                                     */
                                    EditorAddMusicClipCommand.prototype.endTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorAddMusicClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand} EditorAddMusicClipCommand instance
                                     */
                                    EditorAddMusicClipCommand.create = function create(properties) {
                                        return new EditorAddMusicClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddMusicClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommand} message EditorAddMusicClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddMusicClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.trackId != null && Object.hasOwnProperty.call(message, "trackId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        if (message.timePosition != null && Object.hasOwnProperty.call(message, "timePosition"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.timePosition);
                                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.startTime);
                                        if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.endTime);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddMusicClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommand} message EditorAddMusicClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddMusicClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddMusicClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand} EditorAddMusicClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddMusicClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.trackId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                case 3:
                                                    message.timePosition = reader.int64();
                                                    break;
                                                case 4:
                                                    message.startTime = reader.int64();
                                                    break;
                                                case 5:
                                                    message.endTime = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddMusicClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand} EditorAddMusicClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddMusicClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddMusicClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddMusicClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            if (!$util.isString(message.trackId))
                                                return "trackId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        if (message.timePosition != null && message.hasOwnProperty("timePosition"))
                                            if (!$util.isInteger(message.timePosition) && !(message.timePosition && $util.isInteger(message.timePosition.low) && $util.isInteger(message.timePosition.high)))
                                                return "timePosition: integer|Long expected";
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))
                                                return "startTime: integer|Long expected";
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))
                                                return "endTime: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddMusicClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand} EditorAddMusicClipCommand
                                     */
                                    EditorAddMusicClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand();
                                        if (object.trackId != null)
                                            message.trackId = String(object.trackId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        if (object.timePosition != null)
                                            if ($util.Long)
                                                (message.timePosition = $util.Long.fromValue(object.timePosition)).unsigned = false;
                                            else if (typeof object.timePosition === "string")
                                                message.timePosition = parseInt(object.timePosition, 10);
                                            else if (typeof object.timePosition === "number")
                                                message.timePosition = object.timePosition;
                                            else if (typeof object.timePosition === "object")
                                                message.timePosition = new $util.LongBits(object.timePosition.low >>> 0, object.timePosition.high >>> 0).toNumber();
                                        if (object.startTime != null)
                                            if ($util.Long)
                                                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;
                                            else if (typeof object.startTime === "string")
                                                message.startTime = parseInt(object.startTime, 10);
                                            else if (typeof object.startTime === "number")
                                                message.startTime = object.startTime;
                                            else if (typeof object.startTime === "object")
                                                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();
                                        if (object.endTime != null)
                                            if ($util.Long)
                                                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;
                                            else if (typeof object.endTime === "string")
                                                message.endTime = parseInt(object.endTime, 10);
                                            else if (typeof object.endTime === "number")
                                                message.endTime = object.endTime;
                                            else if (typeof object.endTime === "object")
                                                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddMusicClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand} message EditorAddMusicClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddMusicClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.trackId = "";
                                            object.resourceUri = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.timePosition = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.timePosition = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.startTime = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.endTime = options.longs === String ? "0" : 0;
                                        }
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            object.trackId = message.trackId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        if (message.timePosition != null && message.hasOwnProperty("timePosition"))
                                            if (typeof message.timePosition === "number")
                                                object.timePosition = options.longs === String ? String(message.timePosition) : message.timePosition;
                                            else
                                                object.timePosition = options.longs === String ? $util.Long.prototype.toString.call(message.timePosition) : options.longs === Number ? new $util.LongBits(message.timePosition.low >>> 0, message.timePosition.high >>> 0).toNumber() : message.timePosition;
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (typeof message.startTime === "number")
                                                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;
                                            else
                                                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (typeof message.endTime === "number")
                                                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;
                                            else
                                                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddMusicClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddMusicClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddMusicClipCommand;
                                })();

                                proto.EditorAddMusicClipCommandResult = (function () {

                                    /**
                                     * Properties of an EditorAddMusicClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddMusicClipCommandResult
                                     * @property {string|null} [clipId] EditorAddMusicClipCommandResult clipId
                                     */

                                    /**
                                     * Constructs a new EditorAddMusicClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddMusicClipCommandResult.
                                     * @implements IEditorAddMusicClipCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommandResult=} [properties] Properties to set
                                     */
                                    function EditorAddMusicClipCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddMusicClipCommandResult clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @instance
                                     */
                                    EditorAddMusicClipCommandResult.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorAddMusicClipCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult} EditorAddMusicClipCommandResult instance
                                     */
                                    EditorAddMusicClipCommandResult.create = function create(properties) {
                                        return new EditorAddMusicClipCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddMusicClipCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommandResult} message EditorAddMusicClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddMusicClipCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddMusicClipCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddMusicClipCommandResult} message EditorAddMusicClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddMusicClipCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddMusicClipCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult} EditorAddMusicClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddMusicClipCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddMusicClipCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult} EditorAddMusicClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddMusicClipCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddMusicClipCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddMusicClipCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddMusicClipCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult} EditorAddMusicClipCommandResult
                                     */
                                    EditorAddMusicClipCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddMusicClipCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult} message EditorAddMusicClipCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddMusicClipCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddMusicClipCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddMusicClipCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddMusicClipCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddMusicClipCommandResult;
                                })();

                                proto.EditorAddTextClipCommand = (function () {

                                    /**
                                     * Properties of an EditorAddTextClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddTextClipCommand
                                     * @property {string|null} [trackId] EditorAddTextClipCommand trackId
                                     * @property {string|null} [content] EditorAddTextClipCommand content
                                     * @property {number|Long|null} [startTime] EditorAddTextClipCommand startTime
                                     * @property {number|Long|null} [duration] EditorAddTextClipCommand duration
                                     */

                                    /**
                                     * Constructs a new EditorAddTextClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddTextClipCommand.
                                     * @implements IEditorAddTextClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommand=} [properties] Properties to set
                                     */
                                    function EditorAddTextClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddTextClipCommand trackId.
                                     * @member {string} trackId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @instance
                                     */
                                    EditorAddTextClipCommand.prototype.trackId = "";

                                    /**
                                     * EditorAddTextClipCommand content.
                                     * @member {string} content
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @instance
                                     */
                                    EditorAddTextClipCommand.prototype.content = "";

                                    /**
                                     * EditorAddTextClipCommand startTime.
                                     * @member {number|Long} startTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @instance
                                     */
                                    EditorAddTextClipCommand.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorAddTextClipCommand duration.
                                     * @member {number|Long} duration
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @instance
                                     */
                                    EditorAddTextClipCommand.prototype.duration = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorAddTextClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand} EditorAddTextClipCommand instance
                                     */
                                    EditorAddTextClipCommand.create = function create(properties) {
                                        return new EditorAddTextClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddTextClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommand} message EditorAddTextClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddTextClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.trackId != null && Object.hasOwnProperty.call(message, "trackId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackId);
                                        if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);
                                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.startTime);
                                        if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.duration);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddTextClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommand} message EditorAddTextClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddTextClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddTextClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand} EditorAddTextClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddTextClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.trackId = reader.string();
                                                    break;
                                                case 2:
                                                    message.content = reader.string();
                                                    break;
                                                case 3:
                                                    message.startTime = reader.int64();
                                                    break;
                                                case 4:
                                                    message.duration = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddTextClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand} EditorAddTextClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddTextClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddTextClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddTextClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            if (!$util.isString(message.trackId))
                                                return "trackId: string expected";
                                        if (message.content != null && message.hasOwnProperty("content"))
                                            if (!$util.isString(message.content))
                                                return "content: string expected";
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))
                                                return "startTime: integer|Long expected";
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (!$util.isInteger(message.duration) && !(message.duration && $util.isInteger(message.duration.low) && $util.isInteger(message.duration.high)))
                                                return "duration: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddTextClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand} EditorAddTextClipCommand
                                     */
                                    EditorAddTextClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand();
                                        if (object.trackId != null)
                                            message.trackId = String(object.trackId);
                                        if (object.content != null)
                                            message.content = String(object.content);
                                        if (object.startTime != null)
                                            if ($util.Long)
                                                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;
                                            else if (typeof object.startTime === "string")
                                                message.startTime = parseInt(object.startTime, 10);
                                            else if (typeof object.startTime === "number")
                                                message.startTime = object.startTime;
                                            else if (typeof object.startTime === "object")
                                                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();
                                        if (object.duration != null)
                                            if ($util.Long)
                                                (message.duration = $util.Long.fromValue(object.duration)).unsigned = false;
                                            else if (typeof object.duration === "string")
                                                message.duration = parseInt(object.duration, 10);
                                            else if (typeof object.duration === "number")
                                                message.duration = object.duration;
                                            else if (typeof object.duration === "object")
                                                message.duration = new $util.LongBits(object.duration.low >>> 0, object.duration.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddTextClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand} message EditorAddTextClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddTextClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.trackId = "";
                                            object.content = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.startTime = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.duration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.duration = options.longs === String ? "0" : 0;
                                        }
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            object.trackId = message.trackId;
                                        if (message.content != null && message.hasOwnProperty("content"))
                                            object.content = message.content;
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (typeof message.startTime === "number")
                                                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;
                                            else
                                                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (typeof message.duration === "number")
                                                object.duration = options.longs === String ? String(message.duration) : message.duration;
                                            else
                                                object.duration = options.longs === String ? $util.Long.prototype.toString.call(message.duration) : options.longs === Number ? new $util.LongBits(message.duration.low >>> 0, message.duration.high >>> 0).toNumber() : message.duration;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddTextClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddTextClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddTextClipCommand;
                                })();

                                proto.EditorAddTextClipCommandResult = (function () {

                                    /**
                                     * Properties of an EditorAddTextClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddTextClipCommandResult
                                     * @property {string|null} [clipId] EditorAddTextClipCommandResult clipId
                                     */

                                    /**
                                     * Constructs a new EditorAddTextClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddTextClipCommandResult.
                                     * @implements IEditorAddTextClipCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommandResult=} [properties] Properties to set
                                     */
                                    function EditorAddTextClipCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddTextClipCommandResult clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @instance
                                     */
                                    EditorAddTextClipCommandResult.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorAddTextClipCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult} EditorAddTextClipCommandResult instance
                                     */
                                    EditorAddTextClipCommandResult.create = function create(properties) {
                                        return new EditorAddTextClipCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddTextClipCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommandResult} message EditorAddTextClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddTextClipCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddTextClipCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddTextClipCommandResult} message EditorAddTextClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddTextClipCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddTextClipCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult} EditorAddTextClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddTextClipCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddTextClipCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult} EditorAddTextClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddTextClipCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddTextClipCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddTextClipCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddTextClipCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult} EditorAddTextClipCommandResult
                                     */
                                    EditorAddTextClipCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddTextClipCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult} message EditorAddTextClipCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddTextClipCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddTextClipCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddTextClipCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddTextClipCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddTextClipCommandResult;
                                })();

                                proto.EditorAddStickerClipCommand = (function () {

                                    /**
                                     * Properties of an EditorAddStickerClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddStickerClipCommand
                                     * @property {string|null} [trackId] EditorAddStickerClipCommand trackId
                                     * @property {string|null} [resourceUri] EditorAddStickerClipCommand resourceUri
                                     * @property {number|Long|null} [startTime] EditorAddStickerClipCommand startTime
                                     * @property {number|Long|null} [duration] EditorAddStickerClipCommand duration
                                     */

                                    /**
                                     * Constructs a new EditorAddStickerClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddStickerClipCommand.
                                     * @implements IEditorAddStickerClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommand=} [properties] Properties to set
                                     */
                                    function EditorAddStickerClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddStickerClipCommand trackId.
                                     * @member {string} trackId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @instance
                                     */
                                    EditorAddStickerClipCommand.prototype.trackId = "";

                                    /**
                                     * EditorAddStickerClipCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @instance
                                     */
                                    EditorAddStickerClipCommand.prototype.resourceUri = "";

                                    /**
                                     * EditorAddStickerClipCommand startTime.
                                     * @member {number|Long} startTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @instance
                                     */
                                    EditorAddStickerClipCommand.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorAddStickerClipCommand duration.
                                     * @member {number|Long} duration
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @instance
                                     */
                                    EditorAddStickerClipCommand.prototype.duration = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;

                                    /**
                                     * Creates a new EditorAddStickerClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand} EditorAddStickerClipCommand instance
                                     */
                                    EditorAddStickerClipCommand.create = function create(properties) {
                                        return new EditorAddStickerClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddStickerClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommand} message EditorAddStickerClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddStickerClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.trackId != null && Object.hasOwnProperty.call(message, "trackId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.startTime);
                                        if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.duration);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddStickerClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommand} message EditorAddStickerClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddStickerClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddStickerClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand} EditorAddStickerClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddStickerClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.trackId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                case 3:
                                                    message.startTime = reader.int64();
                                                    break;
                                                case 4:
                                                    message.duration = reader.uint64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddStickerClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand} EditorAddStickerClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddStickerClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddStickerClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddStickerClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            if (!$util.isString(message.trackId))
                                                return "trackId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))
                                                return "startTime: integer|Long expected";
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (!$util.isInteger(message.duration) && !(message.duration && $util.isInteger(message.duration.low) && $util.isInteger(message.duration.high)))
                                                return "duration: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddStickerClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand} EditorAddStickerClipCommand
                                     */
                                    EditorAddStickerClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand();
                                        if (object.trackId != null)
                                            message.trackId = String(object.trackId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        if (object.startTime != null)
                                            if ($util.Long)
                                                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;
                                            else if (typeof object.startTime === "string")
                                                message.startTime = parseInt(object.startTime, 10);
                                            else if (typeof object.startTime === "number")
                                                message.startTime = object.startTime;
                                            else if (typeof object.startTime === "object")
                                                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();
                                        if (object.duration != null)
                                            if ($util.Long)
                                                (message.duration = $util.Long.fromValue(object.duration)).unsigned = true;
                                            else if (typeof object.duration === "string")
                                                message.duration = parseInt(object.duration, 10);
                                            else if (typeof object.duration === "number")
                                                message.duration = object.duration;
                                            else if (typeof object.duration === "object")
                                                message.duration = new $util.LongBits(object.duration.low >>> 0, object.duration.high >>> 0).toNumber(true);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddStickerClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand} message EditorAddStickerClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddStickerClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.trackId = "";
                                            object.resourceUri = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.startTime = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, true);
                                                object.duration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.duration = options.longs === String ? "0" : 0;
                                        }
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            object.trackId = message.trackId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (typeof message.startTime === "number")
                                                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;
                                            else
                                                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (typeof message.duration === "number")
                                                object.duration = options.longs === String ? String(message.duration) : message.duration;
                                            else
                                                object.duration = options.longs === String ? $util.Long.prototype.toString.call(message.duration) : options.longs === Number ? new $util.LongBits(message.duration.low >>> 0, message.duration.high >>> 0).toNumber(true) : message.duration;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddStickerClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddStickerClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddStickerClipCommand;
                                })();

                                proto.EditorAddStickerClipCommandResult = (function () {

                                    /**
                                     * Properties of an EditorAddStickerClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddStickerClipCommandResult
                                     * @property {string|null} [clipId] EditorAddStickerClipCommandResult clipId
                                     */

                                    /**
                                     * Constructs a new EditorAddStickerClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddStickerClipCommandResult.
                                     * @implements IEditorAddStickerClipCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommandResult=} [properties] Properties to set
                                     */
                                    function EditorAddStickerClipCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddStickerClipCommandResult clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @instance
                                     */
                                    EditorAddStickerClipCommandResult.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorAddStickerClipCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult} EditorAddStickerClipCommandResult instance
                                     */
                                    EditorAddStickerClipCommandResult.create = function create(properties) {
                                        return new EditorAddStickerClipCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddStickerClipCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommandResult} message EditorAddStickerClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddStickerClipCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddStickerClipCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddStickerClipCommandResult} message EditorAddStickerClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddStickerClipCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddStickerClipCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult} EditorAddStickerClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddStickerClipCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddStickerClipCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult} EditorAddStickerClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddStickerClipCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddStickerClipCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddStickerClipCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddStickerClipCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult} EditorAddStickerClipCommandResult
                                     */
                                    EditorAddStickerClipCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddStickerClipCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult} message EditorAddStickerClipCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddStickerClipCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddStickerClipCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddStickerClipCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddStickerClipCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddStickerClipCommandResult;
                                })();

                                /**
                                 * SourceType enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SourceType
                                 * @enum {number}
                                 * @property {number} SourceInvalid=0 SourceInvalid value
                                 * @property {number} SourceUnknown=1 SourceUnknown value
                                 * @property {number} SourceTexture=2 SourceTexture value
                                 * @property {number} SourcePcm=3 SourcePcm value
                                 * @property {number} SourceAll=4 SourceAll value
                                 */
                                proto.SourceType = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "SourceInvalid"] = 0;
                                    values[valuesById[1] = "SourceUnknown"] = 1;
                                    values[valuesById[2] = "SourceTexture"] = 2;
                                    values[valuesById[3] = "SourcePcm"] = 3;
                                    values[valuesById[4] = "SourceAll"] = 4;
                                    return values;
                                })();

                                proto.EditorAddExtensionClipCommand = (function () {

                                    /**
                                     * Properties of an EditorAddExtensionClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddExtensionClipCommand
                                     * @property {string|null} [trackId] EditorAddExtensionClipCommand trackId
                                     * @property {string|null} [resourceUri] EditorAddExtensionClipCommand resourceUri
                                     * @property {number|Long|null} [startTime] EditorAddExtensionClipCommand startTime
                                     * @property {number|Long|null} [duration] EditorAddExtensionClipCommand duration
                                     * @property {string|null} [name] EditorAddExtensionClipCommand name
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SourceType|null} [sourceType] EditorAddExtensionClipCommand sourceType
                                     * @property {number|Long|null} [flag] EditorAddExtensionClipCommand flag
                                     */

                                    /**
                                     * Constructs a new EditorAddExtensionClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddExtensionClipCommand.
                                     * @implements IEditorAddExtensionClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommand=} [properties] Properties to set
                                     */
                                    function EditorAddExtensionClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddExtensionClipCommand trackId.
                                     * @member {string} trackId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @instance
                                     */
                                    EditorAddExtensionClipCommand.prototype.trackId = "";

                                    /**
                                     * EditorAddExtensionClipCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @instance
                                     */
                                    EditorAddExtensionClipCommand.prototype.resourceUri = "";

                                    /**
                                     * EditorAddExtensionClipCommand startTime.
                                     * @member {number|Long} startTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @instance
                                     */
                                    EditorAddExtensionClipCommand.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorAddExtensionClipCommand duration.
                                     * @member {number|Long} duration
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @instance
                                     */
                                    EditorAddExtensionClipCommand.prototype.duration = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;

                                    /**
                                     * EditorAddExtensionClipCommand name.
                                     * @member {string} name
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @instance
                                     */
                                    EditorAddExtensionClipCommand.prototype.name = "";

                                    /**
                                     * EditorAddExtensionClipCommand sourceType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SourceType} sourceType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @instance
                                     */
                                    EditorAddExtensionClipCommand.prototype.sourceType = 0;

                                    /**
                                     * EditorAddExtensionClipCommand flag.
                                     * @member {number|Long} flag
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @instance
                                     */
                                    EditorAddExtensionClipCommand.prototype.flag = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorAddExtensionClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand} EditorAddExtensionClipCommand instance
                                     */
                                    EditorAddExtensionClipCommand.create = function create(properties) {
                                        return new EditorAddExtensionClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddExtensionClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommand} message EditorAddExtensionClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddExtensionClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.trackId != null && Object.hasOwnProperty.call(message, "trackId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.startTime);
                                        if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.duration);
                                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                                        if (message.sourceType != null && Object.hasOwnProperty.call(message, "sourceType"))
                                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.sourceType);
                                        if (message.flag != null && Object.hasOwnProperty.call(message, "flag"))
                                            writer.uint32(/* id 7, wireType 0 =*/56).int64(message.flag);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddExtensionClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommand} message EditorAddExtensionClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddExtensionClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddExtensionClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand} EditorAddExtensionClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddExtensionClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.trackId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                case 3:
                                                    message.startTime = reader.int64();
                                                    break;
                                                case 4:
                                                    message.duration = reader.uint64();
                                                    break;
                                                case 5:
                                                    message.name = reader.string();
                                                    break;
                                                case 6:
                                                    message.sourceType = reader.int32();
                                                    break;
                                                case 7:
                                                    message.flag = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddExtensionClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand} EditorAddExtensionClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddExtensionClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddExtensionClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddExtensionClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            if (!$util.isString(message.trackId))
                                                return "trackId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))
                                                return "startTime: integer|Long expected";
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (!$util.isInteger(message.duration) && !(message.duration && $util.isInteger(message.duration.low) && $util.isInteger(message.duration.high)))
                                                return "duration: integer|Long expected";
                                        if (message.name != null && message.hasOwnProperty("name"))
                                            if (!$util.isString(message.name))
                                                return "name: string expected";
                                        if (message.sourceType != null && message.hasOwnProperty("sourceType"))
                                            switch (message.sourceType) {
                                                default:
                                                    return "sourceType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                    break;
                                            }
                                        if (message.flag != null && message.hasOwnProperty("flag"))
                                            if (!$util.isInteger(message.flag) && !(message.flag && $util.isInteger(message.flag.low) && $util.isInteger(message.flag.high)))
                                                return "flag: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddExtensionClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand} EditorAddExtensionClipCommand
                                     */
                                    EditorAddExtensionClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand();
                                        if (object.trackId != null)
                                            message.trackId = String(object.trackId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        if (object.startTime != null)
                                            if ($util.Long)
                                                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;
                                            else if (typeof object.startTime === "string")
                                                message.startTime = parseInt(object.startTime, 10);
                                            else if (typeof object.startTime === "number")
                                                message.startTime = object.startTime;
                                            else if (typeof object.startTime === "object")
                                                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();
                                        if (object.duration != null)
                                            if ($util.Long)
                                                (message.duration = $util.Long.fromValue(object.duration)).unsigned = true;
                                            else if (typeof object.duration === "string")
                                                message.duration = parseInt(object.duration, 10);
                                            else if (typeof object.duration === "number")
                                                message.duration = object.duration;
                                            else if (typeof object.duration === "object")
                                                message.duration = new $util.LongBits(object.duration.low >>> 0, object.duration.high >>> 0).toNumber(true);
                                        if (object.name != null)
                                            message.name = String(object.name);
                                        switch (object.sourceType) {
                                            case "SourceInvalid":
                                            case 0:
                                                message.sourceType = 0;
                                                break;
                                            case "SourceUnknown":
                                            case 1:
                                                message.sourceType = 1;
                                                break;
                                            case "SourceTexture":
                                            case 2:
                                                message.sourceType = 2;
                                                break;
                                            case "SourcePcm":
                                            case 3:
                                                message.sourceType = 3;
                                                break;
                                            case "SourceAll":
                                            case 4:
                                                message.sourceType = 4;
                                                break;
                                        }
                                        if (object.flag != null)
                                            if ($util.Long)
                                                (message.flag = $util.Long.fromValue(object.flag)).unsigned = false;
                                            else if (typeof object.flag === "string")
                                                message.flag = parseInt(object.flag, 10);
                                            else if (typeof object.flag === "number")
                                                message.flag = object.flag;
                                            else if (typeof object.flag === "object")
                                                message.flag = new $util.LongBits(object.flag.low >>> 0, object.flag.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddExtensionClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand} message EditorAddExtensionClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddExtensionClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.trackId = "";
                                            object.resourceUri = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.startTime = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, true);
                                                object.duration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.duration = options.longs === String ? "0" : 0;
                                            object.name = "";
                                            object.sourceType = options.enums === String ? "SourceInvalid" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.flag = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.flag = options.longs === String ? "0" : 0;
                                        }
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            object.trackId = message.trackId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (typeof message.startTime === "number")
                                                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;
                                            else
                                                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (typeof message.duration === "number")
                                                object.duration = options.longs === String ? String(message.duration) : message.duration;
                                            else
                                                object.duration = options.longs === String ? $util.Long.prototype.toString.call(message.duration) : options.longs === Number ? new $util.LongBits(message.duration.low >>> 0, message.duration.high >>> 0).toNumber(true) : message.duration;
                                        if (message.name != null && message.hasOwnProperty("name"))
                                            object.name = message.name;
                                        if (message.sourceType != null && message.hasOwnProperty("sourceType"))
                                            object.sourceType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SourceType[message.sourceType] : message.sourceType;
                                        if (message.flag != null && message.hasOwnProperty("flag"))
                                            if (typeof message.flag === "number")
                                                object.flag = options.longs === String ? String(message.flag) : message.flag;
                                            else
                                                object.flag = options.longs === String ? $util.Long.prototype.toString.call(message.flag) : options.longs === Number ? new $util.LongBits(message.flag.low >>> 0, message.flag.high >>> 0).toNumber() : message.flag;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddExtensionClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddExtensionClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddExtensionClipCommand;
                                })();

                                proto.EditorAddExtensionClipCommandResult = (function () {

                                    /**
                                     * Properties of an EditorAddExtensionClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorAddExtensionClipCommandResult
                                     * @property {string|null} [clipId] EditorAddExtensionClipCommandResult clipId
                                     */

                                    /**
                                     * Constructs a new EditorAddExtensionClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorAddExtensionClipCommandResult.
                                     * @implements IEditorAddExtensionClipCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommandResult=} [properties] Properties to set
                                     */
                                    function EditorAddExtensionClipCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorAddExtensionClipCommandResult clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @instance
                                     */
                                    EditorAddExtensionClipCommandResult.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorAddExtensionClipCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult} EditorAddExtensionClipCommandResult instance
                                     */
                                    EditorAddExtensionClipCommandResult.create = function create(properties) {
                                        return new EditorAddExtensionClipCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorAddExtensionClipCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommandResult} message EditorAddExtensionClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddExtensionClipCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorAddExtensionClipCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorAddExtensionClipCommandResult} message EditorAddExtensionClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorAddExtensionClipCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorAddExtensionClipCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult} EditorAddExtensionClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddExtensionClipCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorAddExtensionClipCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult} EditorAddExtensionClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorAddExtensionClipCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorAddExtensionClipCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorAddExtensionClipCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorAddExtensionClipCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult} EditorAddExtensionClipCommandResult
                                     */
                                    EditorAddExtensionClipCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorAddExtensionClipCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult} message EditorAddExtensionClipCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorAddExtensionClipCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorAddExtensionClipCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorAddExtensionClipCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorAddExtensionClipCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorAddExtensionClipCommandResult;
                                })();

                                proto.EditorChangeClipResourceCommand = (function () {

                                    /**
                                     * Properties of an EditorChangeClipResourceCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorChangeClipResourceCommand
                                     * @property {string|null} [clipId] EditorChangeClipResourceCommand clipId
                                     * @property {string|null} [resourceUri] EditorChangeClipResourceCommand resourceUri
                                     * @property {number|Long|null} [startTime] EditorChangeClipResourceCommand startTime
                                     * @property {number|Long|null} [endTime] EditorChangeClipResourceCommand endTime
                                     */

                                    /**
                                     * Constructs a new EditorChangeClipResourceCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorChangeClipResourceCommand.
                                     * @implements IEditorChangeClipResourceCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorChangeClipResourceCommand=} [properties] Properties to set
                                     */
                                    function EditorChangeClipResourceCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorChangeClipResourceCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @instance
                                     */
                                    EditorChangeClipResourceCommand.prototype.clipId = "";

                                    /**
                                     * EditorChangeClipResourceCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @instance
                                     */
                                    EditorChangeClipResourceCommand.prototype.resourceUri = "";

                                    /**
                                     * EditorChangeClipResourceCommand startTime.
                                     * @member {number|Long} startTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @instance
                                     */
                                    EditorChangeClipResourceCommand.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorChangeClipResourceCommand endTime.
                                     * @member {number|Long} endTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @instance
                                     */
                                    EditorChangeClipResourceCommand.prototype.endTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorChangeClipResourceCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorChangeClipResourceCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand} EditorChangeClipResourceCommand instance
                                     */
                                    EditorChangeClipResourceCommand.create = function create(properties) {
                                        return new EditorChangeClipResourceCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorChangeClipResourceCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorChangeClipResourceCommand} message EditorChangeClipResourceCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorChangeClipResourceCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.startTime);
                                        if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.endTime);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorChangeClipResourceCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorChangeClipResourceCommand} message EditorChangeClipResourceCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorChangeClipResourceCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorChangeClipResourceCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand} EditorChangeClipResourceCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorChangeClipResourceCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                case 3:
                                                    message.startTime = reader.int64();
                                                    break;
                                                case 4:
                                                    message.endTime = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorChangeClipResourceCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand} EditorChangeClipResourceCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorChangeClipResourceCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorChangeClipResourceCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorChangeClipResourceCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))
                                                return "startTime: integer|Long expected";
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))
                                                return "endTime: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorChangeClipResourceCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand} EditorChangeClipResourceCommand
                                     */
                                    EditorChangeClipResourceCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        if (object.startTime != null)
                                            if ($util.Long)
                                                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;
                                            else if (typeof object.startTime === "string")
                                                message.startTime = parseInt(object.startTime, 10);
                                            else if (typeof object.startTime === "number")
                                                message.startTime = object.startTime;
                                            else if (typeof object.startTime === "object")
                                                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();
                                        if (object.endTime != null)
                                            if ($util.Long)
                                                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;
                                            else if (typeof object.endTime === "string")
                                                message.endTime = parseInt(object.endTime, 10);
                                            else if (typeof object.endTime === "number")
                                                message.endTime = object.endTime;
                                            else if (typeof object.endTime === "object")
                                                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorChangeClipResourceCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand} message EditorChangeClipResourceCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorChangeClipResourceCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.resourceUri = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.startTime = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.endTime = options.longs === String ? "0" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (typeof message.startTime === "number")
                                                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;
                                            else
                                                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (typeof message.endTime === "number")
                                                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;
                                            else
                                                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorChangeClipResourceCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorChangeClipResourceCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorChangeClipResourceCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorChangeClipResourceCommand;
                                })();

                                proto.EditorSplitClipCommand = (function () {

                                    /**
                                     * Properties of an EditorSplitClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSplitClipCommand
                                     * @property {string|null} [clipId] EditorSplitClipCommand clipId
                                     * @property {number|Long|null} [position] EditorSplitClipCommand position
                                     */

                                    /**
                                     * Constructs a new EditorSplitClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSplitClipCommand.
                                     * @implements IEditorSplitClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommand=} [properties] Properties to set
                                     */
                                    function EditorSplitClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSplitClipCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @instance
                                     */
                                    EditorSplitClipCommand.prototype.clipId = "";

                                    /**
                                     * EditorSplitClipCommand position.
                                     * @member {number|Long} position
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @instance
                                     */
                                    EditorSplitClipCommand.prototype.position = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorSplitClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand} EditorSplitClipCommand instance
                                     */
                                    EditorSplitClipCommand.create = function create(properties) {
                                        return new EditorSplitClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSplitClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommand} message EditorSplitClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSplitClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.position != null && Object.hasOwnProperty.call(message, "position"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.position);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSplitClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommand} message EditorSplitClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSplitClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSplitClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand} EditorSplitClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSplitClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.position = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSplitClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand} EditorSplitClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSplitClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSplitClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSplitClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.position != null && message.hasOwnProperty("position"))
                                            if (!$util.isInteger(message.position) && !(message.position && $util.isInteger(message.position.low) && $util.isInteger(message.position.high)))
                                                return "position: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSplitClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand} EditorSplitClipCommand
                                     */
                                    EditorSplitClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.position != null)
                                            if ($util.Long)
                                                (message.position = $util.Long.fromValue(object.position)).unsigned = false;
                                            else if (typeof object.position === "string")
                                                message.position = parseInt(object.position, 10);
                                            else if (typeof object.position === "number")
                                                message.position = object.position;
                                            else if (typeof object.position === "object")
                                                message.position = new $util.LongBits(object.position.low >>> 0, object.position.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSplitClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand} message EditorSplitClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSplitClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.position = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.position = options.longs === String ? "0" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.position != null && message.hasOwnProperty("position"))
                                            if (typeof message.position === "number")
                                                object.position = options.longs === String ? String(message.position) : message.position;
                                            else
                                                object.position = options.longs === String ? $util.Long.prototype.toString.call(message.position) : options.longs === Number ? new $util.LongBits(message.position.low >>> 0, message.position.high >>> 0).toNumber() : message.position;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSplitClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSplitClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSplitClipCommand;
                                })();

                                proto.EditorSplitClipCommandResult = (function () {

                                    /**
                                     * Properties of an EditorSplitClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSplitClipCommandResult
                                     * @property {string|null} [clipId] EditorSplitClipCommandResult clipId
                                     */

                                    /**
                                     * Constructs a new EditorSplitClipCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSplitClipCommandResult.
                                     * @implements IEditorSplitClipCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommandResult=} [properties] Properties to set
                                     */
                                    function EditorSplitClipCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSplitClipCommandResult clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @instance
                                     */
                                    EditorSplitClipCommandResult.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorSplitClipCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult} EditorSplitClipCommandResult instance
                                     */
                                    EditorSplitClipCommandResult.create = function create(properties) {
                                        return new EditorSplitClipCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSplitClipCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommandResult} message EditorSplitClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSplitClipCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSplitClipCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSplitClipCommandResult} message EditorSplitClipCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSplitClipCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSplitClipCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult} EditorSplitClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSplitClipCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSplitClipCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult} EditorSplitClipCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSplitClipCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSplitClipCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSplitClipCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSplitClipCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult} EditorSplitClipCommandResult
                                     */
                                    EditorSplitClipCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSplitClipCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult} message EditorSplitClipCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSplitClipCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSplitClipCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSplitClipCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSplitClipCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSplitClipCommandResult;
                                })();

                                proto.EditorDeleteClipCommand = (function () {

                                    /**
                                     * Properties of an EditorDeleteClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorDeleteClipCommand
                                     * @property {string|null} [clipId] EditorDeleteClipCommand clipId
                                     */

                                    /**
                                     * Constructs a new EditorDeleteClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorDeleteClipCommand.
                                     * @implements IEditorDeleteClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteClipCommand=} [properties] Properties to set
                                     */
                                    function EditorDeleteClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorDeleteClipCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @instance
                                     */
                                    EditorDeleteClipCommand.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorDeleteClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand} EditorDeleteClipCommand instance
                                     */
                                    EditorDeleteClipCommand.create = function create(properties) {
                                        return new EditorDeleteClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorDeleteClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteClipCommand} message EditorDeleteClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorDeleteClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorDeleteClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteClipCommand} message EditorDeleteClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorDeleteClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorDeleteClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand} EditorDeleteClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorDeleteClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorDeleteClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand} EditorDeleteClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorDeleteClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorDeleteClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorDeleteClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorDeleteClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand} EditorDeleteClipCommand
                                     */
                                    EditorDeleteClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorDeleteClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand} message EditorDeleteClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorDeleteClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorDeleteClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorDeleteClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorDeleteClipCommand;
                                })();

                                proto.EditorMoveClipCommand = (function () {

                                    /**
                                     * Properties of an EditorMoveClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorMoveClipCommand
                                     * @property {string|null} [clipId] EditorMoveClipCommand clipId
                                     * @property {number|Long|null} [timePosition] EditorMoveClipCommand timePosition
                                     * @property {string|null} [trackId] EditorMoveClipCommand trackId
                                     */

                                    /**
                                     * Constructs a new EditorMoveClipCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorMoveClipCommand.
                                     * @implements IEditorMoveClipCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorMoveClipCommand=} [properties] Properties to set
                                     */
                                    function EditorMoveClipCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorMoveClipCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @instance
                                     */
                                    EditorMoveClipCommand.prototype.clipId = "";

                                    /**
                                     * EditorMoveClipCommand timePosition.
                                     * @member {number|Long} timePosition
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @instance
                                     */
                                    EditorMoveClipCommand.prototype.timePosition = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorMoveClipCommand trackId.
                                     * @member {string} trackId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @instance
                                     */
                                    EditorMoveClipCommand.prototype.trackId = "";

                                    /**
                                     * Creates a new EditorMoveClipCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorMoveClipCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand} EditorMoveClipCommand instance
                                     */
                                    EditorMoveClipCommand.create = function create(properties) {
                                        return new EditorMoveClipCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorMoveClipCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorMoveClipCommand} message EditorMoveClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorMoveClipCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.timePosition != null && Object.hasOwnProperty.call(message, "timePosition"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.timePosition);
                                        if (message.trackId != null && Object.hasOwnProperty.call(message, "trackId"))
                                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.trackId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorMoveClipCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorMoveClipCommand} message EditorMoveClipCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorMoveClipCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorMoveClipCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand} EditorMoveClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorMoveClipCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.timePosition = reader.int64();
                                                    break;
                                                case 3:
                                                    message.trackId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorMoveClipCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand} EditorMoveClipCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorMoveClipCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorMoveClipCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorMoveClipCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.timePosition != null && message.hasOwnProperty("timePosition"))
                                            if (!$util.isInteger(message.timePosition) && !(message.timePosition && $util.isInteger(message.timePosition.low) && $util.isInteger(message.timePosition.high)))
                                                return "timePosition: integer|Long expected";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            if (!$util.isString(message.trackId))
                                                return "trackId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorMoveClipCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand} EditorMoveClipCommand
                                     */
                                    EditorMoveClipCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.timePosition != null)
                                            if ($util.Long)
                                                (message.timePosition = $util.Long.fromValue(object.timePosition)).unsigned = false;
                                            else if (typeof object.timePosition === "string")
                                                message.timePosition = parseInt(object.timePosition, 10);
                                            else if (typeof object.timePosition === "number")
                                                message.timePosition = object.timePosition;
                                            else if (typeof object.timePosition === "object")
                                                message.timePosition = new $util.LongBits(object.timePosition.low >>> 0, object.timePosition.high >>> 0).toNumber();
                                        if (object.trackId != null)
                                            message.trackId = String(object.trackId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorMoveClipCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand} message EditorMoveClipCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorMoveClipCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.timePosition = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.timePosition = options.longs === String ? "0" : 0;
                                            object.trackId = "";
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.timePosition != null && message.hasOwnProperty("timePosition"))
                                            if (typeof message.timePosition === "number")
                                                object.timePosition = options.longs === String ? String(message.timePosition) : message.timePosition;
                                            else
                                                object.timePosition = options.longs === String ? $util.Long.prototype.toString.call(message.timePosition) : options.longs === Number ? new $util.LongBits(message.timePosition.low >>> 0, message.timePosition.high >>> 0).toNumber() : message.timePosition;
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            object.trackId = message.trackId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorMoveClipCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorMoveClipCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorMoveClipCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorMoveClipCommand;
                                })();

                                proto.EditorRemoveTrackCommand = (function () {

                                    /**
                                     * Properties of an EditorRemoveTrackCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorRemoveTrackCommand
                                     * @property {string|null} [trackId] EditorRemoveTrackCommand trackId
                                     */

                                    /**
                                     * Constructs a new EditorRemoveTrackCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorRemoveTrackCommand.
                                     * @implements IEditorRemoveTrackCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTrackCommand=} [properties] Properties to set
                                     */
                                    function EditorRemoveTrackCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorRemoveTrackCommand trackId.
                                     * @member {string} trackId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @instance
                                     */
                                    EditorRemoveTrackCommand.prototype.trackId = "";

                                    /**
                                     * Creates a new EditorRemoveTrackCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTrackCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand} EditorRemoveTrackCommand instance
                                     */
                                    EditorRemoveTrackCommand.create = function create(properties) {
                                        return new EditorRemoveTrackCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorRemoveTrackCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTrackCommand} message EditorRemoveTrackCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorRemoveTrackCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.trackId != null && Object.hasOwnProperty.call(message, "trackId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorRemoveTrackCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTrackCommand} message EditorRemoveTrackCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorRemoveTrackCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorRemoveTrackCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand} EditorRemoveTrackCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorRemoveTrackCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.trackId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorRemoveTrackCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand} EditorRemoveTrackCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorRemoveTrackCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorRemoveTrackCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorRemoveTrackCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            if (!$util.isString(message.trackId))
                                                return "trackId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorRemoveTrackCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand} EditorRemoveTrackCommand
                                     */
                                    EditorRemoveTrackCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand();
                                        if (object.trackId != null)
                                            message.trackId = String(object.trackId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorRemoveTrackCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand} message EditorRemoveTrackCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorRemoveTrackCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.trackId = "";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            object.trackId = message.trackId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorRemoveTrackCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTrackCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorRemoveTrackCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorRemoveTrackCommand;
                                })();

                                proto.EditorSetClipLookupCommand = (function () {

                                    /**
                                     * Properties of an EditorSetClipLookupCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetClipLookupCommand
                                     * @property {string|null} [clipId] EditorSetClipLookupCommand clipId
                                     * @property {string|null} [resourceUri] EditorSetClipLookupCommand resourceUri
                                     * @property {number|null} [intensity] EditorSetClipLookupCommand intensity
                                     */

                                    /**
                                     * Constructs a new EditorSetClipLookupCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetClipLookupCommand.
                                     * @implements IEditorSetClipLookupCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipLookupCommand=} [properties] Properties to set
                                     */
                                    function EditorSetClipLookupCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetClipLookupCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @instance
                                     */
                                    EditorSetClipLookupCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetClipLookupCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @instance
                                     */
                                    EditorSetClipLookupCommand.prototype.resourceUri = "";

                                    /**
                                     * EditorSetClipLookupCommand intensity.
                                     * @member {number} intensity
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @instance
                                     */
                                    EditorSetClipLookupCommand.prototype.intensity = 0;

                                    /**
                                     * Creates a new EditorSetClipLookupCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipLookupCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand} EditorSetClipLookupCommand instance
                                     */
                                    EditorSetClipLookupCommand.create = function create(properties) {
                                        return new EditorSetClipLookupCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipLookupCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipLookupCommand} message EditorSetClipLookupCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipLookupCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        if (message.intensity != null && Object.hasOwnProperty.call(message, "intensity"))
                                            writer.uint32(/* id 3, wireType 5 =*/29).float(message.intensity);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipLookupCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipLookupCommand} message EditorSetClipLookupCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipLookupCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetClipLookupCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand} EditorSetClipLookupCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipLookupCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                case 3:
                                                    message.intensity = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetClipLookupCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand} EditorSetClipLookupCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipLookupCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetClipLookupCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetClipLookupCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        if (message.intensity != null && message.hasOwnProperty("intensity"))
                                            if (typeof message.intensity !== "number")
                                                return "intensity: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetClipLookupCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand} EditorSetClipLookupCommand
                                     */
                                    EditorSetClipLookupCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        if (object.intensity != null)
                                            message.intensity = Number(object.intensity);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetClipLookupCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand} message EditorSetClipLookupCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetClipLookupCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.resourceUri = "";
                                            object.intensity = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        if (message.intensity != null && message.hasOwnProperty("intensity"))
                                            object.intensity = options.json && !isFinite(message.intensity) ? String(message.intensity) : message.intensity;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetClipLookupCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipLookupCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetClipLookupCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetClipLookupCommand;
                                })();

                                proto.EditorSetTransitionDurationUsCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTransitionDurationUsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTransitionDurationUsCommand
                                     * @property {string|null} [clipId] EditorSetTransitionDurationUsCommand clipId
                                     * @property {number|Long|null} [durationUs] EditorSetTransitionDurationUsCommand durationUs
                                     */

                                    /**
                                     * Constructs a new EditorSetTransitionDurationUsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTransitionDurationUsCommand.
                                     * @implements IEditorSetTransitionDurationUsCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionDurationUsCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTransitionDurationUsCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTransitionDurationUsCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @instance
                                     */
                                    EditorSetTransitionDurationUsCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTransitionDurationUsCommand durationUs.
                                     * @member {number|Long} durationUs
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @instance
                                     */
                                    EditorSetTransitionDurationUsCommand.prototype.durationUs = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;

                                    /**
                                     * Creates a new EditorSetTransitionDurationUsCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionDurationUsCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand} EditorSetTransitionDurationUsCommand instance
                                     */
                                    EditorSetTransitionDurationUsCommand.create = function create(properties) {
                                        return new EditorSetTransitionDurationUsCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTransitionDurationUsCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionDurationUsCommand} message EditorSetTransitionDurationUsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTransitionDurationUsCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.durationUs != null && Object.hasOwnProperty.call(message, "durationUs"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.durationUs);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTransitionDurationUsCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionDurationUsCommand} message EditorSetTransitionDurationUsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTransitionDurationUsCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTransitionDurationUsCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand} EditorSetTransitionDurationUsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTransitionDurationUsCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.durationUs = reader.uint64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTransitionDurationUsCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand} EditorSetTransitionDurationUsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTransitionDurationUsCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTransitionDurationUsCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTransitionDurationUsCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.durationUs != null && message.hasOwnProperty("durationUs"))
                                            if (!$util.isInteger(message.durationUs) && !(message.durationUs && $util.isInteger(message.durationUs.low) && $util.isInteger(message.durationUs.high)))
                                                return "durationUs: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTransitionDurationUsCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand} EditorSetTransitionDurationUsCommand
                                     */
                                    EditorSetTransitionDurationUsCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.durationUs != null)
                                            if ($util.Long)
                                                (message.durationUs = $util.Long.fromValue(object.durationUs)).unsigned = true;
                                            else if (typeof object.durationUs === "string")
                                                message.durationUs = parseInt(object.durationUs, 10);
                                            else if (typeof object.durationUs === "number")
                                                message.durationUs = object.durationUs;
                                            else if (typeof object.durationUs === "object")
                                                message.durationUs = new $util.LongBits(object.durationUs.low >>> 0, object.durationUs.high >>> 0).toNumber(true);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTransitionDurationUsCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand} message EditorSetTransitionDurationUsCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTransitionDurationUsCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, true);
                                                object.durationUs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.durationUs = options.longs === String ? "0" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.durationUs != null && message.hasOwnProperty("durationUs"))
                                            if (typeof message.durationUs === "number")
                                                object.durationUs = options.longs === String ? String(message.durationUs) : message.durationUs;
                                            else
                                                object.durationUs = options.longs === String ? $util.Long.prototype.toString.call(message.durationUs) : options.longs === Number ? new $util.LongBits(message.durationUs.low >>> 0, message.durationUs.high >>> 0).toNumber(true) : message.durationUs;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTransitionDurationUsCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionDurationUsCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTransitionDurationUsCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTransitionDurationUsCommand;
                                })();

                                proto.EditorRemoveTransitionCommand = (function () {

                                    /**
                                     * Properties of an EditorRemoveTransitionCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorRemoveTransitionCommand
                                     * @property {string|null} [clipId] EditorRemoveTransitionCommand clipId
                                     */

                                    /**
                                     * Constructs a new EditorRemoveTransitionCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorRemoveTransitionCommand.
                                     * @implements IEditorRemoveTransitionCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTransitionCommand=} [properties] Properties to set
                                     */
                                    function EditorRemoveTransitionCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorRemoveTransitionCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @instance
                                     */
                                    EditorRemoveTransitionCommand.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorRemoveTransitionCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTransitionCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand} EditorRemoveTransitionCommand instance
                                     */
                                    EditorRemoveTransitionCommand.create = function create(properties) {
                                        return new EditorRemoveTransitionCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorRemoveTransitionCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTransitionCommand} message EditorRemoveTransitionCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorRemoveTransitionCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorRemoveTransitionCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorRemoveTransitionCommand} message EditorRemoveTransitionCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorRemoveTransitionCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorRemoveTransitionCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand} EditorRemoveTransitionCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorRemoveTransitionCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorRemoveTransitionCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand} EditorRemoveTransitionCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorRemoveTransitionCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorRemoveTransitionCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorRemoveTransitionCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorRemoveTransitionCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand} EditorRemoveTransitionCommand
                                     */
                                    EditorRemoveTransitionCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorRemoveTransitionCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand} message EditorRemoveTransitionCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorRemoveTransitionCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorRemoveTransitionCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorRemoveTransitionCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorRemoveTransitionCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorRemoveTransitionCommand;
                                })();

                                proto.EditorProp = (function () {

                                    /**
                                     * Properties of an EditorProp.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorProp
                                     * @property {string|null} [propKey] EditorProp propKey
                                     * @property {string|null} [propType] EditorProp propType
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IVoidResult|null} [voidVal] EditorProp voidVal
                                     * @property {number|null} [floatVal] EditorProp floatVal
                                     * @property {string|null} [strVal] EditorProp strVal
                                     * @property {number|Long|null} [intVal] EditorProp intVal
                                     */

                                    /**
                                     * Constructs a new EditorProp.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorProp.
                                     * @implements IEditorProp
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorProp=} [properties] Properties to set
                                     */
                                    function EditorProp(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorProp propKey.
                                     * @member {string} propKey
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @instance
                                     */
                                    EditorProp.prototype.propKey = "";

                                    /**
                                     * EditorProp propType.
                                     * @member {string} propType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @instance
                                     */
                                    EditorProp.prototype.propType = "";

                                    /**
                                     * EditorProp voidVal.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IVoidResult|null|undefined} voidVal
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @instance
                                     */
                                    EditorProp.prototype.voidVal = null;

                                    /**
                                     * EditorProp floatVal.
                                     * @member {number|null|undefined} floatVal
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @instance
                                     */
                                    EditorProp.prototype.floatVal = null;

                                    /**
                                     * EditorProp strVal.
                                     * @member {string|null|undefined} strVal
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @instance
                                     */
                                    EditorProp.prototype.strVal = null;

                                    /**
                                     * EditorProp intVal.
                                     * @member {number|Long|null|undefined} intVal
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @instance
                                     */
                                    EditorProp.prototype.intVal = null;

                                    // OneOf field names bound to virtual getters and setters
                                    var $oneOfFields;

                                    /**
                                     * EditorProp value.
                                     * @member {"voidVal"|"floatVal"|"strVal"|"intVal"|undefined} value
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @instance
                                     */
                                    Object.defineProperty(EditorProp.prototype, "value", {
                                        get: $util.oneOfGetter($oneOfFields = ["voidVal", "floatVal", "strVal", "intVal"]),
                                        set: $util.oneOfSetter($oneOfFields)
                                    });

                                    /**
                                     * Creates a new EditorProp instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorProp=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp} EditorProp instance
                                     */
                                    EditorProp.create = function create(properties) {
                                        return new EditorProp(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorProp message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorProp} message EditorProp message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorProp.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.propKey != null && Object.hasOwnProperty.call(message, "propKey"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.propKey);
                                        if (message.propType != null && Object.hasOwnProperty.call(message, "propType"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.propType);
                                        if (message.voidVal != null && Object.hasOwnProperty.call(message, "voidVal"))
                                            $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.encode(message.voidVal, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                        if (message.floatVal != null && Object.hasOwnProperty.call(message, "floatVal"))
                                            writer.uint32(/* id 4, wireType 1 =*/33).double(message.floatVal);
                                        if (message.strVal != null && Object.hasOwnProperty.call(message, "strVal"))
                                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.strVal);
                                        if (message.intVal != null && Object.hasOwnProperty.call(message, "intVal"))
                                            writer.uint32(/* id 6, wireType 0 =*/48).int64(message.intVal);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorProp message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorProp} message EditorProp message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorProp.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorProp message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp} EditorProp
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorProp.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.propKey = reader.string();
                                                    break;
                                                case 2:
                                                    message.propType = reader.string();
                                                    break;
                                                case 3:
                                                    message.voidVal = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.decode(reader, reader.uint32());
                                                    break;
                                                case 4:
                                                    message.floatVal = reader.double();
                                                    break;
                                                case 5:
                                                    message.strVal = reader.string();
                                                    break;
                                                case 6:
                                                    message.intVal = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorProp message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp} EditorProp
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorProp.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorProp message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorProp.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        var properties = {};
                                        if (message.propKey != null && message.hasOwnProperty("propKey"))
                                            if (!$util.isString(message.propKey))
                                                return "propKey: string expected";
                                        if (message.propType != null && message.hasOwnProperty("propType"))
                                            if (!$util.isString(message.propType))
                                                return "propType: string expected";
                                        if (message.voidVal != null && message.hasOwnProperty("voidVal")) {
                                            properties.value = 1;
                                            {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.verify(message.voidVal);
                                                if (error)
                                                    return "voidVal." + error;
                                            }
                                        }
                                        if (message.floatVal != null && message.hasOwnProperty("floatVal")) {
                                            if (properties.value === 1)
                                                return "value: multiple values";
                                            properties.value = 1;
                                            if (typeof message.floatVal !== "number")
                                                return "floatVal: number expected";
                                        }
                                        if (message.strVal != null && message.hasOwnProperty("strVal")) {
                                            if (properties.value === 1)
                                                return "value: multiple values";
                                            properties.value = 1;
                                            if (!$util.isString(message.strVal))
                                                return "strVal: string expected";
                                        }
                                        if (message.intVal != null && message.hasOwnProperty("intVal")) {
                                            if (properties.value === 1)
                                                return "value: multiple values";
                                            properties.value = 1;
                                            if (!$util.isInteger(message.intVal) && !(message.intVal && $util.isInteger(message.intVal.low) && $util.isInteger(message.intVal.high)))
                                                return "intVal: integer|Long expected";
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorProp message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp} EditorProp
                                     */
                                    EditorProp.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp();
                                        if (object.propKey != null)
                                            message.propKey = String(object.propKey);
                                        if (object.propType != null)
                                            message.propType = String(object.propType);
                                        if (object.voidVal != null) {
                                            if (typeof object.voidVal !== "object")
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.voidVal: object expected");
                                            message.voidVal = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.fromObject(object.voidVal);
                                        }
                                        if (object.floatVal != null)
                                            message.floatVal = Number(object.floatVal);
                                        if (object.strVal != null)
                                            message.strVal = String(object.strVal);
                                        if (object.intVal != null)
                                            if ($util.Long)
                                                (message.intVal = $util.Long.fromValue(object.intVal)).unsigned = false;
                                            else if (typeof object.intVal === "string")
                                                message.intVal = parseInt(object.intVal, 10);
                                            else if (typeof object.intVal === "number")
                                                message.intVal = object.intVal;
                                            else if (typeof object.intVal === "object")
                                                message.intVal = new $util.LongBits(object.intVal.low >>> 0, object.intVal.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorProp message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp} message EditorProp
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorProp.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.propKey = "";
                                            object.propType = "";
                                        }
                                        if (message.propKey != null && message.hasOwnProperty("propKey"))
                                            object.propKey = message.propKey;
                                        if (message.propType != null && message.hasOwnProperty("propType"))
                                            object.propType = message.propType;
                                        if (message.voidVal != null && message.hasOwnProperty("voidVal")) {
                                            object.voidVal = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VoidResult.toObject(message.voidVal, options);
                                            if (options.oneofs)
                                                object.value = "voidVal";
                                        }
                                        if (message.floatVal != null && message.hasOwnProperty("floatVal")) {
                                            object.floatVal = options.json && !isFinite(message.floatVal) ? String(message.floatVal) : message.floatVal;
                                            if (options.oneofs)
                                                object.value = "floatVal";
                                        }
                                        if (message.strVal != null && message.hasOwnProperty("strVal")) {
                                            object.strVal = message.strVal;
                                            if (options.oneofs)
                                                object.value = "strVal";
                                        }
                                        if (message.intVal != null && message.hasOwnProperty("intVal")) {
                                            if (typeof message.intVal === "number")
                                                object.intVal = options.longs === String ? String(message.intVal) : message.intVal;
                                            else
                                                object.intVal = options.longs === String ? $util.Long.prototype.toString.call(message.intVal) : options.longs === Number ? new $util.LongBits(message.intVal.low >>> 0, message.intVal.high >>> 0).toNumber() : message.intVal;
                                            if (options.oneofs)
                                                object.value = "intVal";
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorProp to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorProp.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorProp;
                                })();

                                proto.EditorPropDef = (function () {

                                    /**
                                     * Properties of an EditorPropDef.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorPropDef
                                     * @property {string|null} [propKey] EditorPropDef propKey
                                     * @property {string|null} [propType] EditorPropDef propType
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.PropValueType|null} [propValType] EditorPropDef propValType
                                     */

                                    /**
                                     * Constructs a new EditorPropDef.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorPropDef.
                                     * @implements IEditorPropDef
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorPropDef=} [properties] Properties to set
                                     */
                                    function EditorPropDef(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorPropDef propKey.
                                     * @member {string} propKey
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @instance
                                     */
                                    EditorPropDef.prototype.propKey = "";

                                    /**
                                     * EditorPropDef propType.
                                     * @member {string} propType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @instance
                                     */
                                    EditorPropDef.prototype.propType = "";

                                    /**
                                     * EditorPropDef propValType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.PropValueType} propValType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @instance
                                     */
                                    EditorPropDef.prototype.propValType = 0;

                                    /**
                                     * Creates a new EditorPropDef instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorPropDef=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef} EditorPropDef instance
                                     */
                                    EditorPropDef.create = function create(properties) {
                                        return new EditorPropDef(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorPropDef message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorPropDef} message EditorPropDef message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorPropDef.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.propKey != null && Object.hasOwnProperty.call(message, "propKey"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.propKey);
                                        if (message.propType != null && Object.hasOwnProperty.call(message, "propType"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.propType);
                                        if (message.propValType != null && Object.hasOwnProperty.call(message, "propValType"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.propValType);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorPropDef message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorPropDef} message EditorPropDef message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorPropDef.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorPropDef message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef} EditorPropDef
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorPropDef.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.propKey = reader.string();
                                                    break;
                                                case 2:
                                                    message.propType = reader.string();
                                                    break;
                                                case 3:
                                                    message.propValType = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorPropDef message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef} EditorPropDef
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorPropDef.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorPropDef message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorPropDef.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.propKey != null && message.hasOwnProperty("propKey"))
                                            if (!$util.isString(message.propKey))
                                                return "propKey: string expected";
                                        if (message.propType != null && message.hasOwnProperty("propType"))
                                            if (!$util.isString(message.propType))
                                                return "propType: string expected";
                                        if (message.propValType != null && message.hasOwnProperty("propValType"))
                                            switch (message.propValType) {
                                                default:
                                                    return "propValType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorPropDef message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef} EditorPropDef
                                     */
                                    EditorPropDef.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef();
                                        if (object.propKey != null)
                                            message.propKey = String(object.propKey);
                                        if (object.propType != null)
                                            message.propType = String(object.propType);
                                        switch (object.propValType) {
                                            case "PROP_VALUE_TYPE_INVALID":
                                            case 0:
                                                message.propValType = 0;
                                                break;
                                            case "PROP_VALUE_TYPE_STRING":
                                            case 1:
                                                message.propValType = 1;
                                                break;
                                            case "PROP_VALUE_TYPE_DOUBLE":
                                            case 2:
                                                message.propValType = 2;
                                                break;
                                            case "PROP_VALUE_TYPE_INT64":
                                            case 3:
                                                message.propValType = 3;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorPropDef message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef} message EditorPropDef
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorPropDef.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.propKey = "";
                                            object.propType = "";
                                            object.propValType = options.enums === String ? "PROP_VALUE_TYPE_INVALID" : 0;
                                        }
                                        if (message.propKey != null && message.hasOwnProperty("propKey"))
                                            object.propKey = message.propKey;
                                        if (message.propType != null && message.hasOwnProperty("propType"))
                                            object.propType = message.propType;
                                        if (message.propValType != null && message.hasOwnProperty("propValType"))
                                            object.propValType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.PropValueType[message.propValType] : message.propValType;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorPropDef to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorPropDef.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    /**
                                     * PropValueType enum.
                                     * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.PropValueType
                                     * @enum {number}
                                     * @property {number} PROP_VALUE_TYPE_INVALID=0 PROP_VALUE_TYPE_INVALID value
                                     * @property {number} PROP_VALUE_TYPE_STRING=1 PROP_VALUE_TYPE_STRING value
                                     * @property {number} PROP_VALUE_TYPE_DOUBLE=2 PROP_VALUE_TYPE_DOUBLE value
                                     * @property {number} PROP_VALUE_TYPE_INT64=3 PROP_VALUE_TYPE_INT64 value
                                     */
                                    EditorPropDef.PropValueType = (function () {
                                        var valuesById = {}, values = Object.create(valuesById);
                                        values[valuesById[0] = "PROP_VALUE_TYPE_INVALID"] = 0;
                                        values[valuesById[1] = "PROP_VALUE_TYPE_STRING"] = 1;
                                        values[valuesById[2] = "PROP_VALUE_TYPE_DOUBLE"] = 2;
                                        values[valuesById[3] = "PROP_VALUE_TYPE_INT64"] = 3;
                                        return values;
                                    })();

                                    return EditorPropDef;
                                })();

                                proto.EditorGetClipPropListCommand = (function () {

                                    /**
                                     * Properties of an EditorGetClipPropListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetClipPropListCommand
                                     * @property {string|null} [clipId] EditorGetClipPropListCommand clipId
                                     * @property {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorPropDef>|null} [propDefList] EditorGetClipPropListCommand propDefList
                                     */

                                    /**
                                     * Constructs a new EditorGetClipPropListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetClipPropListCommand.
                                     * @implements IEditorGetClipPropListCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListCommand=} [properties] Properties to set
                                     */
                                    function EditorGetClipPropListCommand(properties) {
                                        this.propDefList = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetClipPropListCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @instance
                                     */
                                    EditorGetClipPropListCommand.prototype.clipId = "";

                                    /**
                                     * EditorGetClipPropListCommand propDefList.
                                     * @member {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorPropDef>} propDefList
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @instance
                                     */
                                    EditorGetClipPropListCommand.prototype.propDefList = $util.emptyArray;

                                    /**
                                     * Creates a new EditorGetClipPropListCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand} EditorGetClipPropListCommand instance
                                     */
                                    EditorGetClipPropListCommand.create = function create(properties) {
                                        return new EditorGetClipPropListCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipPropListCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListCommand} message EditorGetClipPropListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipPropListCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.propDefList != null && message.propDefList.length)
                                            for (var i = 0; i < message.propDefList.length; ++i)
                                                $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.encode(message.propDefList[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipPropListCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListCommand} message EditorGetClipPropListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipPropListCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetClipPropListCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand} EditorGetClipPropListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipPropListCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    if (!(message.propDefList && message.propDefList.length))
                                                        message.propDefList = [];
                                                    message.propDefList.push($root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.decode(reader, reader.uint32()));
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetClipPropListCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand} EditorGetClipPropListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipPropListCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetClipPropListCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetClipPropListCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.propDefList != null && message.hasOwnProperty("propDefList")) {
                                            if (!Array.isArray(message.propDefList))
                                                return "propDefList: array expected";
                                            for (var i = 0; i < message.propDefList.length; ++i) {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.verify(message.propDefList[i]);
                                                if (error)
                                                    return "propDefList." + error;
                                            }
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetClipPropListCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand} EditorGetClipPropListCommand
                                     */
                                    EditorGetClipPropListCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.propDefList) {
                                            if (!Array.isArray(object.propDefList))
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand.propDefList: array expected");
                                            message.propDefList = [];
                                            for (var i = 0; i < object.propDefList.length; ++i) {
                                                if (typeof object.propDefList[i] !== "object")
                                                    throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand.propDefList: object expected");
                                                message.propDefList[i] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.fromObject(object.propDefList[i]);
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetClipPropListCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand} message EditorGetClipPropListCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetClipPropListCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.propDefList = [];
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.propDefList && message.propDefList.length) {
                                            object.propDefList = [];
                                            for (var j = 0; j < message.propDefList.length; ++j)
                                                object.propDefList[j] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorPropDef.toObject(message.propDefList[j], options);
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetClipPropListCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetClipPropListCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetClipPropListCommand;
                                })();

                                proto.EditorGetClipPropListResult = (function () {

                                    /**
                                     * Properties of an EditorGetClipPropListResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetClipPropListResult
                                     * @property {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorProp>|null} [propList] EditorGetClipPropListResult propList
                                     */

                                    /**
                                     * Constructs a new EditorGetClipPropListResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetClipPropListResult.
                                     * @implements IEditorGetClipPropListResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListResult=} [properties] Properties to set
                                     */
                                    function EditorGetClipPropListResult(properties) {
                                        this.propList = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetClipPropListResult propList.
                                     * @member {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorProp>} propList
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @instance
                                     */
                                    EditorGetClipPropListResult.prototype.propList = $util.emptyArray;

                                    /**
                                     * Creates a new EditorGetClipPropListResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult} EditorGetClipPropListResult instance
                                     */
                                    EditorGetClipPropListResult.create = function create(properties) {
                                        return new EditorGetClipPropListResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipPropListResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListResult} message EditorGetClipPropListResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipPropListResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.propList != null && message.propList.length)
                                            for (var i = 0; i < message.propList.length; ++i)
                                                $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.encode(message.propList[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipPropListResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipPropListResult} message EditorGetClipPropListResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipPropListResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetClipPropListResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult} EditorGetClipPropListResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipPropListResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    if (!(message.propList && message.propList.length))
                                                        message.propList = [];
                                                    message.propList.push($root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.decode(reader, reader.uint32()));
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetClipPropListResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult} EditorGetClipPropListResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipPropListResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetClipPropListResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetClipPropListResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.propList != null && message.hasOwnProperty("propList")) {
                                            if (!Array.isArray(message.propList))
                                                return "propList: array expected";
                                            for (var i = 0; i < message.propList.length; ++i) {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.verify(message.propList[i]);
                                                if (error)
                                                    return "propList." + error;
                                            }
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetClipPropListResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult} EditorGetClipPropListResult
                                     */
                                    EditorGetClipPropListResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult();
                                        if (object.propList) {
                                            if (!Array.isArray(object.propList))
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult.propList: array expected");
                                            message.propList = [];
                                            for (var i = 0; i < object.propList.length; ++i) {
                                                if (typeof object.propList[i] !== "object")
                                                    throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult.propList: object expected");
                                                message.propList[i] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.fromObject(object.propList[i]);
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetClipPropListResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult} message EditorGetClipPropListResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetClipPropListResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.propList = [];
                                        if (message.propList && message.propList.length) {
                                            object.propList = [];
                                            for (var j = 0; j < message.propList.length; ++j)
                                                object.propList[j] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.toObject(message.propList[j], options);
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetClipPropListResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipPropListResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetClipPropListResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetClipPropListResult;
                                })();

                                proto.EditorSetClipPropListCommand = (function () {

                                    /**
                                     * Properties of an EditorSetClipPropListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetClipPropListCommand
                                     * @property {string|null} [clipId] EditorSetClipPropListCommand clipId
                                     * @property {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorProp>|null} [propList] EditorSetClipPropListCommand propList
                                     */

                                    /**
                                     * Constructs a new EditorSetClipPropListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetClipPropListCommand.
                                     * @implements IEditorSetClipPropListCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipPropListCommand=} [properties] Properties to set
                                     */
                                    function EditorSetClipPropListCommand(properties) {
                                        this.propList = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetClipPropListCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @instance
                                     */
                                    EditorSetClipPropListCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetClipPropListCommand propList.
                                     * @member {Array.<com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorProp>} propList
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @instance
                                     */
                                    EditorSetClipPropListCommand.prototype.propList = $util.emptyArray;

                                    /**
                                     * Creates a new EditorSetClipPropListCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipPropListCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand} EditorSetClipPropListCommand instance
                                     */
                                    EditorSetClipPropListCommand.create = function create(properties) {
                                        return new EditorSetClipPropListCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipPropListCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipPropListCommand} message EditorSetClipPropListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipPropListCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.propList != null && message.propList.length)
                                            for (var i = 0; i < message.propList.length; ++i)
                                                $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.encode(message.propList[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipPropListCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipPropListCommand} message EditorSetClipPropListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipPropListCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetClipPropListCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand} EditorSetClipPropListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipPropListCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    if (!(message.propList && message.propList.length))
                                                        message.propList = [];
                                                    message.propList.push($root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.decode(reader, reader.uint32()));
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetClipPropListCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand} EditorSetClipPropListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipPropListCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetClipPropListCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetClipPropListCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.propList != null && message.hasOwnProperty("propList")) {
                                            if (!Array.isArray(message.propList))
                                                return "propList: array expected";
                                            for (var i = 0; i < message.propList.length; ++i) {
                                                var error = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.verify(message.propList[i]);
                                                if (error)
                                                    return "propList." + error;
                                            }
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetClipPropListCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand} EditorSetClipPropListCommand
                                     */
                                    EditorSetClipPropListCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.propList) {
                                            if (!Array.isArray(object.propList))
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand.propList: array expected");
                                            message.propList = [];
                                            for (var i = 0; i < object.propList.length; ++i) {
                                                if (typeof object.propList[i] !== "object")
                                                    throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand.propList: object expected");
                                                message.propList[i] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.fromObject(object.propList[i]);
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetClipPropListCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand} message EditorSetClipPropListCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetClipPropListCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.propList = [];
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.propList && message.propList.length) {
                                            object.propList = [];
                                            for (var j = 0; j < message.propList.length; ++j)
                                                object.propList[j] = $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorProp.toObject(message.propList[j], options);
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetClipPropListCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipPropListCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetClipPropListCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetClipPropListCommand;
                                })();

                                proto.EditorSetClipCropCommand = (function () {

                                    /**
                                     * Properties of an EditorSetClipCropCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetClipCropCommand
                                     * @property {string|null} [clipId] EditorSetClipCropCommand clipId
                                     * @property {number|null} [x] EditorSetClipCropCommand x
                                     * @property {number|null} [y] EditorSetClipCropCommand y
                                     * @property {number|null} [w] EditorSetClipCropCommand w
                                     * @property {number|null} [h] EditorSetClipCropCommand h
                                     * @property {number|null} [rotation] EditorSetClipCropCommand rotation
                                     * @property {boolean|null} [rotateByCenter] EditorSetClipCropCommand rotateByCenter
                                     * @property {boolean|null} [normalize] EditorSetClipCropCommand normalize
                                     */

                                    /**
                                     * Constructs a new EditorSetClipCropCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetClipCropCommand.
                                     * @implements IEditorSetClipCropCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCropCommand=} [properties] Properties to set
                                     */
                                    function EditorSetClipCropCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetClipCropCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @instance
                                     */
                                    EditorSetClipCropCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetClipCropCommand x.
                                     * @member {number} x
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @instance
                                     */
                                    EditorSetClipCropCommand.prototype.x = 0;

                                    /**
                                     * EditorSetClipCropCommand y.
                                     * @member {number} y
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @instance
                                     */
                                    EditorSetClipCropCommand.prototype.y = 0;

                                    /**
                                     * EditorSetClipCropCommand w.
                                     * @member {number} w
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @instance
                                     */
                                    EditorSetClipCropCommand.prototype.w = 0;

                                    /**
                                     * EditorSetClipCropCommand h.
                                     * @member {number} h
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @instance
                                     */
                                    EditorSetClipCropCommand.prototype.h = 0;

                                    /**
                                     * EditorSetClipCropCommand rotation.
                                     * @member {number} rotation
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @instance
                                     */
                                    EditorSetClipCropCommand.prototype.rotation = 0;

                                    /**
                                     * EditorSetClipCropCommand rotateByCenter.
                                     * @member {boolean} rotateByCenter
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @instance
                                     */
                                    EditorSetClipCropCommand.prototype.rotateByCenter = false;

                                    /**
                                     * EditorSetClipCropCommand normalize.
                                     * @member {boolean} normalize
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @instance
                                     */
                                    EditorSetClipCropCommand.prototype.normalize = false;

                                    /**
                                     * Creates a new EditorSetClipCropCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCropCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand} EditorSetClipCropCommand instance
                                     */
                                    EditorSetClipCropCommand.create = function create(properties) {
                                        return new EditorSetClipCropCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipCropCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCropCommand} message EditorSetClipCropCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipCropCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.x != null && Object.hasOwnProperty.call(message, "x"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.x);
                                        if (message.y != null && Object.hasOwnProperty.call(message, "y"))
                                            writer.uint32(/* id 3, wireType 5 =*/29).float(message.y);
                                        if (message.w != null && Object.hasOwnProperty.call(message, "w"))
                                            writer.uint32(/* id 4, wireType 5 =*/37).float(message.w);
                                        if (message.h != null && Object.hasOwnProperty.call(message, "h"))
                                            writer.uint32(/* id 5, wireType 5 =*/45).float(message.h);
                                        if (message.rotation != null && Object.hasOwnProperty.call(message, "rotation"))
                                            writer.uint32(/* id 6, wireType 5 =*/53).float(message.rotation);
                                        if (message.rotateByCenter != null && Object.hasOwnProperty.call(message, "rotateByCenter"))
                                            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.rotateByCenter);
                                        if (message.normalize != null && Object.hasOwnProperty.call(message, "normalize"))
                                            writer.uint32(/* id 8, wireType 0 =*/64).bool(message.normalize);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipCropCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCropCommand} message EditorSetClipCropCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipCropCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetClipCropCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand} EditorSetClipCropCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipCropCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.x = reader.float();
                                                    break;
                                                case 3:
                                                    message.y = reader.float();
                                                    break;
                                                case 4:
                                                    message.w = reader.float();
                                                    break;
                                                case 5:
                                                    message.h = reader.float();
                                                    break;
                                                case 6:
                                                    message.rotation = reader.float();
                                                    break;
                                                case 7:
                                                    message.rotateByCenter = reader.bool();
                                                    break;
                                                case 8:
                                                    message.normalize = reader.bool();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetClipCropCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand} EditorSetClipCropCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipCropCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetClipCropCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetClipCropCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.x != null && message.hasOwnProperty("x"))
                                            if (typeof message.x !== "number")
                                                return "x: number expected";
                                        if (message.y != null && message.hasOwnProperty("y"))
                                            if (typeof message.y !== "number")
                                                return "y: number expected";
                                        if (message.w != null && message.hasOwnProperty("w"))
                                            if (typeof message.w !== "number")
                                                return "w: number expected";
                                        if (message.h != null && message.hasOwnProperty("h"))
                                            if (typeof message.h !== "number")
                                                return "h: number expected";
                                        if (message.rotation != null && message.hasOwnProperty("rotation"))
                                            if (typeof message.rotation !== "number")
                                                return "rotation: number expected";
                                        if (message.rotateByCenter != null && message.hasOwnProperty("rotateByCenter"))
                                            if (typeof message.rotateByCenter !== "boolean")
                                                return "rotateByCenter: boolean expected";
                                        if (message.normalize != null && message.hasOwnProperty("normalize"))
                                            if (typeof message.normalize !== "boolean")
                                                return "normalize: boolean expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetClipCropCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand} EditorSetClipCropCommand
                                     */
                                    EditorSetClipCropCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.x != null)
                                            message.x = Number(object.x);
                                        if (object.y != null)
                                            message.y = Number(object.y);
                                        if (object.w != null)
                                            message.w = Number(object.w);
                                        if (object.h != null)
                                            message.h = Number(object.h);
                                        if (object.rotation != null)
                                            message.rotation = Number(object.rotation);
                                        if (object.rotateByCenter != null)
                                            message.rotateByCenter = Boolean(object.rotateByCenter);
                                        if (object.normalize != null)
                                            message.normalize = Boolean(object.normalize);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetClipCropCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand} message EditorSetClipCropCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetClipCropCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.x = 0;
                                            object.y = 0;
                                            object.w = 0;
                                            object.h = 0;
                                            object.rotation = 0;
                                            object.rotateByCenter = false;
                                            object.normalize = false;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.x != null && message.hasOwnProperty("x"))
                                            object.x = options.json && !isFinite(message.x) ? String(message.x) : message.x;
                                        if (message.y != null && message.hasOwnProperty("y"))
                                            object.y = options.json && !isFinite(message.y) ? String(message.y) : message.y;
                                        if (message.w != null && message.hasOwnProperty("w"))
                                            object.w = options.json && !isFinite(message.w) ? String(message.w) : message.w;
                                        if (message.h != null && message.hasOwnProperty("h"))
                                            object.h = options.json && !isFinite(message.h) ? String(message.h) : message.h;
                                        if (message.rotation != null && message.hasOwnProperty("rotation"))
                                            object.rotation = options.json && !isFinite(message.rotation) ? String(message.rotation) : message.rotation;
                                        if (message.rotateByCenter != null && message.hasOwnProperty("rotateByCenter"))
                                            object.rotateByCenter = message.rotateByCenter;
                                        if (message.normalize != null && message.hasOwnProperty("normalize"))
                                            object.normalize = message.normalize;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetClipCropCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCropCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetClipCropCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetClipCropCommand;
                                })();

                                proto.EditorSetClipCanvasBackgroundCommand = (function () {

                                    /**
                                     * Properties of an EditorSetClipCanvasBackgroundCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetClipCanvasBackgroundCommand
                                     * @property {string|null} [clipId] EditorSetClipCanvasBackgroundCommand clipId
                                     * @property {number|null} [color] EditorSetClipCanvasBackgroundCommand color
                                     */

                                    /**
                                     * Constructs a new EditorSetClipCanvasBackgroundCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetClipCanvasBackgroundCommand.
                                     * @implements IEditorSetClipCanvasBackgroundCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundCommand=} [properties] Properties to set
                                     */
                                    function EditorSetClipCanvasBackgroundCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetClipCanvasBackgroundCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @instance
                                     */
                                    EditorSetClipCanvasBackgroundCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetClipCanvasBackgroundCommand color.
                                     * @member {number} color
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @instance
                                     */
                                    EditorSetClipCanvasBackgroundCommand.prototype.color = 0;

                                    /**
                                     * Creates a new EditorSetClipCanvasBackgroundCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand} EditorSetClipCanvasBackgroundCommand instance
                                     */
                                    EditorSetClipCanvasBackgroundCommand.create = function create(properties) {
                                        return new EditorSetClipCanvasBackgroundCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipCanvasBackgroundCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundCommand} message EditorSetClipCanvasBackgroundCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipCanvasBackgroundCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.color != null && Object.hasOwnProperty.call(message, "color"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.color);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipCanvasBackgroundCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundCommand} message EditorSetClipCanvasBackgroundCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipCanvasBackgroundCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetClipCanvasBackgroundCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand} EditorSetClipCanvasBackgroundCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipCanvasBackgroundCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.color = reader.uint32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetClipCanvasBackgroundCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand} EditorSetClipCanvasBackgroundCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipCanvasBackgroundCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetClipCanvasBackgroundCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetClipCanvasBackgroundCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.color != null && message.hasOwnProperty("color"))
                                            if (!$util.isInteger(message.color))
                                                return "color: integer expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetClipCanvasBackgroundCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand} EditorSetClipCanvasBackgroundCommand
                                     */
                                    EditorSetClipCanvasBackgroundCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.color != null)
                                            message.color = object.color >>> 0;
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetClipCanvasBackgroundCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand} message EditorSetClipCanvasBackgroundCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetClipCanvasBackgroundCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.color = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.color != null && message.hasOwnProperty("color"))
                                            object.color = message.color;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetClipCanvasBackgroundCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetClipCanvasBackgroundCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetClipCanvasBackgroundCommand;
                                })();

                                proto.EditorSetClipCanvasBackgroundResCommand = (function () {

                                    /**
                                     * Properties of an EditorSetClipCanvasBackgroundResCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetClipCanvasBackgroundResCommand
                                     * @property {string|null} [clipId] EditorSetClipCanvasBackgroundResCommand clipId
                                     * @property {string|null} [resourceUri] EditorSetClipCanvasBackgroundResCommand resourceUri
                                     */

                                    /**
                                     * Constructs a new EditorSetClipCanvasBackgroundResCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetClipCanvasBackgroundResCommand.
                                     * @implements IEditorSetClipCanvasBackgroundResCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundResCommand=} [properties] Properties to set
                                     */
                                    function EditorSetClipCanvasBackgroundResCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetClipCanvasBackgroundResCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @instance
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetClipCanvasBackgroundResCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @instance
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.prototype.resourceUri = "";

                                    /**
                                     * Creates a new EditorSetClipCanvasBackgroundResCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundResCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand} EditorSetClipCanvasBackgroundResCommand instance
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.create = function create(properties) {
                                        return new EditorSetClipCanvasBackgroundResCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipCanvasBackgroundResCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundResCommand} message EditorSetClipCanvasBackgroundResCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipCanvasBackgroundResCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundResCommand} message EditorSetClipCanvasBackgroundResCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetClipCanvasBackgroundResCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand} EditorSetClipCanvasBackgroundResCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetClipCanvasBackgroundResCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand} EditorSetClipCanvasBackgroundResCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetClipCanvasBackgroundResCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetClipCanvasBackgroundResCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand} EditorSetClipCanvasBackgroundResCommand
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetClipCanvasBackgroundResCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand} message EditorSetClipCanvasBackgroundResCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.resourceUri = "";
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetClipCanvasBackgroundResCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundResCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetClipCanvasBackgroundResCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetClipCanvasBackgroundResCommand;
                                })();

                                proto.EditorSetClipCanvasBackgroundBlurTypeCommand = (function () {

                                    /**
                                     * Properties of an EditorSetClipCanvasBackgroundBlurTypeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @property {string|null} [clipId] EditorSetClipCanvasBackgroundBlurTypeCommand clipId
                                     * @property {number|null} [blurType] EditorSetClipCanvasBackgroundBlurTypeCommand blurType
                                     */

                                    /**
                                     * Constructs a new EditorSetClipCanvasBackgroundBlurTypeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetClipCanvasBackgroundBlurTypeCommand.
                                     * @implements IEditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundBlurTypeCommand=} [properties] Properties to set
                                     */
                                    function EditorSetClipCanvasBackgroundBlurTypeCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetClipCanvasBackgroundBlurTypeCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @instance
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetClipCanvasBackgroundBlurTypeCommand blurType.
                                     * @member {number} blurType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @instance
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.prototype.blurType = 0;

                                    /**
                                     * Creates a new EditorSetClipCanvasBackgroundBlurTypeCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundBlurTypeCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand} EditorSetClipCanvasBackgroundBlurTypeCommand instance
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.create = function create(properties) {
                                        return new EditorSetClipCanvasBackgroundBlurTypeCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipCanvasBackgroundBlurTypeCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundBlurTypeCommand} message EditorSetClipCanvasBackgroundBlurTypeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.blurType != null && Object.hasOwnProperty.call(message, "blurType"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.blurType);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipCanvasBackgroundBlurTypeCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipCanvasBackgroundBlurTypeCommand} message EditorSetClipCanvasBackgroundBlurTypeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetClipCanvasBackgroundBlurTypeCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand} EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.blurType = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetClipCanvasBackgroundBlurTypeCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand} EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetClipCanvasBackgroundBlurTypeCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.blurType != null && message.hasOwnProperty("blurType"))
                                            if (!$util.isInteger(message.blurType))
                                                return "blurType: integer expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetClipCanvasBackgroundBlurTypeCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand} EditorSetClipCanvasBackgroundBlurTypeCommand
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.blurType != null)
                                            message.blurType = object.blurType | 0;
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetClipCanvasBackgroundBlurTypeCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand} message EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.blurType = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.blurType != null && message.hasOwnProperty("blurType"))
                                            object.blurType = message.blurType;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetClipCanvasBackgroundBlurTypeCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipCanvasBackgroundBlurTypeCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetClipCanvasBackgroundBlurTypeCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetClipCanvasBackgroundBlurTypeCommand;
                                })();

                                /**
                                 * ResourceType enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType
                                 * @enum {number}
                                 * @property {number} ResTypeUnknown=0 ResTypeUnknown value
                                 * @property {number} ResTypeImage=1 ResTypeImage value
                                 * @property {number} ResTypeMedia=2 ResTypeMedia value
                                 * @property {number} ResTypeLookup=3 ResTypeLookup value
                                 * @property {number} ResTypeSticker=4 ResTypeSticker value
                                 * @property {number} ResTypeMagic=5 ResTypeMagic value
                                 * @property {number} ResTypeFont=6 ResTypeFont value
                                 * @property {number} ResTypeExtra=7 ResTypeExtra value
                                 */
                                proto.ResourceType = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "ResTypeUnknown"] = 0;
                                    values[valuesById[1] = "ResTypeImage"] = 1;
                                    values[valuesById[2] = "ResTypeMedia"] = 2;
                                    values[valuesById[3] = "ResTypeLookup"] = 3;
                                    values[valuesById[4] = "ResTypeSticker"] = 4;
                                    values[valuesById[5] = "ResTypeMagic"] = 5;
                                    values[valuesById[6] = "ResTypeFont"] = 6;
                                    values[valuesById[7] = "ResTypeExtra"] = 7;
                                    return values;
                                })();

                                proto.EditorDeleteMaterialCommand = (function () {

                                    /**
                                     * Properties of an EditorDeleteMaterialCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorDeleteMaterialCommand
                                     * @property {string|null} [clipId] EditorDeleteMaterialCommand clipId
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType|null} [resType] EditorDeleteMaterialCommand resType
                                     */

                                    /**
                                     * Constructs a new EditorDeleteMaterialCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorDeleteMaterialCommand.
                                     * @implements IEditorDeleteMaterialCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteMaterialCommand=} [properties] Properties to set
                                     */
                                    function EditorDeleteMaterialCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorDeleteMaterialCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @instance
                                     */
                                    EditorDeleteMaterialCommand.prototype.clipId = "";

                                    /**
                                     * EditorDeleteMaterialCommand resType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType} resType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @instance
                                     */
                                    EditorDeleteMaterialCommand.prototype.resType = 0;

                                    /**
                                     * Creates a new EditorDeleteMaterialCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteMaterialCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand} EditorDeleteMaterialCommand instance
                                     */
                                    EditorDeleteMaterialCommand.create = function create(properties) {
                                        return new EditorDeleteMaterialCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorDeleteMaterialCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteMaterialCommand} message EditorDeleteMaterialCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorDeleteMaterialCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.resType != null && Object.hasOwnProperty.call(message, "resType"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.resType);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorDeleteMaterialCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorDeleteMaterialCommand} message EditorDeleteMaterialCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorDeleteMaterialCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorDeleteMaterialCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand} EditorDeleteMaterialCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorDeleteMaterialCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resType = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorDeleteMaterialCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand} EditorDeleteMaterialCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorDeleteMaterialCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorDeleteMaterialCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorDeleteMaterialCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.resType != null && message.hasOwnProperty("resType"))
                                            switch (message.resType) {
                                                default:
                                                    return "resType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                case 5:
                                                case 6:
                                                case 7:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorDeleteMaterialCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand} EditorDeleteMaterialCommand
                                     */
                                    EditorDeleteMaterialCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        switch (object.resType) {
                                            case "ResTypeUnknown":
                                            case 0:
                                                message.resType = 0;
                                                break;
                                            case "ResTypeImage":
                                            case 1:
                                                message.resType = 1;
                                                break;
                                            case "ResTypeMedia":
                                            case 2:
                                                message.resType = 2;
                                                break;
                                            case "ResTypeLookup":
                                            case 3:
                                                message.resType = 3;
                                                break;
                                            case "ResTypeSticker":
                                            case 4:
                                                message.resType = 4;
                                                break;
                                            case "ResTypeMagic":
                                            case 5:
                                                message.resType = 5;
                                                break;
                                            case "ResTypeFont":
                                            case 6:
                                                message.resType = 6;
                                                break;
                                            case "ResTypeExtra":
                                            case 7:
                                                message.resType = 7;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorDeleteMaterialCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand} message EditorDeleteMaterialCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorDeleteMaterialCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.resType = options.enums === String ? "ResTypeUnknown" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.resType != null && message.hasOwnProperty("resType"))
                                            object.resType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType[message.resType] : message.resType;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorDeleteMaterialCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorDeleteMaterialCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorDeleteMaterialCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorDeleteMaterialCommand;
                                })();

                                proto.EditorCheckToAddMaterialCommand = (function () {

                                    /**
                                     * Properties of an EditorCheckToAddMaterialCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorCheckToAddMaterialCommand
                                     * @property {string|null} [clipId] EditorCheckToAddMaterialCommand clipId
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType|null} [resType] EditorCheckToAddMaterialCommand resType
                                     */

                                    /**
                                     * Constructs a new EditorCheckToAddMaterialCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorCheckToAddMaterialCommand.
                                     * @implements IEditorCheckToAddMaterialCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorCheckToAddMaterialCommand=} [properties] Properties to set
                                     */
                                    function EditorCheckToAddMaterialCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorCheckToAddMaterialCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @instance
                                     */
                                    EditorCheckToAddMaterialCommand.prototype.clipId = "";

                                    /**
                                     * EditorCheckToAddMaterialCommand resType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType} resType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @instance
                                     */
                                    EditorCheckToAddMaterialCommand.prototype.resType = 0;

                                    /**
                                     * Creates a new EditorCheckToAddMaterialCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorCheckToAddMaterialCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand} EditorCheckToAddMaterialCommand instance
                                     */
                                    EditorCheckToAddMaterialCommand.create = function create(properties) {
                                        return new EditorCheckToAddMaterialCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorCheckToAddMaterialCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorCheckToAddMaterialCommand} message EditorCheckToAddMaterialCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorCheckToAddMaterialCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.resType != null && Object.hasOwnProperty.call(message, "resType"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.resType);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorCheckToAddMaterialCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorCheckToAddMaterialCommand} message EditorCheckToAddMaterialCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorCheckToAddMaterialCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorCheckToAddMaterialCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand} EditorCheckToAddMaterialCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorCheckToAddMaterialCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resType = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorCheckToAddMaterialCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand} EditorCheckToAddMaterialCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorCheckToAddMaterialCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorCheckToAddMaterialCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorCheckToAddMaterialCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.resType != null && message.hasOwnProperty("resType"))
                                            switch (message.resType) {
                                                default:
                                                    return "resType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                case 5:
                                                case 6:
                                                case 7:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorCheckToAddMaterialCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand} EditorCheckToAddMaterialCommand
                                     */
                                    EditorCheckToAddMaterialCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        switch (object.resType) {
                                            case "ResTypeUnknown":
                                            case 0:
                                                message.resType = 0;
                                                break;
                                            case "ResTypeImage":
                                            case 1:
                                                message.resType = 1;
                                                break;
                                            case "ResTypeMedia":
                                            case 2:
                                                message.resType = 2;
                                                break;
                                            case "ResTypeLookup":
                                            case 3:
                                                message.resType = 3;
                                                break;
                                            case "ResTypeSticker":
                                            case 4:
                                                message.resType = 4;
                                                break;
                                            case "ResTypeMagic":
                                            case 5:
                                                message.resType = 5;
                                                break;
                                            case "ResTypeFont":
                                            case 6:
                                                message.resType = 6;
                                                break;
                                            case "ResTypeExtra":
                                            case 7:
                                                message.resType = 7;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorCheckToAddMaterialCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand} message EditorCheckToAddMaterialCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorCheckToAddMaterialCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.resType = options.enums === String ? "ResTypeUnknown" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.resType != null && message.hasOwnProperty("resType"))
                                            object.resType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType[message.resType] : message.resType;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorCheckToAddMaterialCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorCheckToAddMaterialCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorCheckToAddMaterialCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorCheckToAddMaterialCommand;
                                })();

                                /**
                                 * TransitionMode enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.TransitionMode
                                 * @enum {number}
                                 * @property {number} TransitionModeInvalid=0 TransitionModeInvalid value
                                 * @property {number} TransitionOverlay=1 TransitionOverlay value
                                 * @property {number} TransitionDefault=2 TransitionDefault value
                                 */
                                proto.TransitionMode = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "TransitionModeInvalid"] = 0;
                                    values[valuesById[1] = "TransitionOverlay"] = 1;
                                    values[valuesById[2] = "TransitionDefault"] = 2;
                                    return values;
                                })();

                                proto.EditorSetTransitionEffectCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTransitionEffectCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTransitionEffectCommand
                                     * @property {string|null} [clipId] EditorSetTransitionEffectCommand clipId
                                     * @property {string|null} [resourceUri] EditorSetTransitionEffectCommand resourceUri
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.TransitionMode|null} [mode] EditorSetTransitionEffectCommand mode
                                     */

                                    /**
                                     * Constructs a new EditorSetTransitionEffectCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTransitionEffectCommand.
                                     * @implements IEditorSetTransitionEffectCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionEffectCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTransitionEffectCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTransitionEffectCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @instance
                                     */
                                    EditorSetTransitionEffectCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTransitionEffectCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @instance
                                     */
                                    EditorSetTransitionEffectCommand.prototype.resourceUri = "";

                                    /**
                                     * EditorSetTransitionEffectCommand mode.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.TransitionMode} mode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @instance
                                     */
                                    EditorSetTransitionEffectCommand.prototype.mode = 0;

                                    /**
                                     * Creates a new EditorSetTransitionEffectCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionEffectCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand} EditorSetTransitionEffectCommand instance
                                     */
                                    EditorSetTransitionEffectCommand.create = function create(properties) {
                                        return new EditorSetTransitionEffectCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTransitionEffectCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionEffectCommand} message EditorSetTransitionEffectCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTransitionEffectCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.mode);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTransitionEffectCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTransitionEffectCommand} message EditorSetTransitionEffectCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTransitionEffectCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTransitionEffectCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand} EditorSetTransitionEffectCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTransitionEffectCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                case 3:
                                                    message.mode = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTransitionEffectCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand} EditorSetTransitionEffectCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTransitionEffectCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTransitionEffectCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTransitionEffectCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        if (message.mode != null && message.hasOwnProperty("mode"))
                                            switch (message.mode) {
                                                default:
                                                    return "mode: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTransitionEffectCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand} EditorSetTransitionEffectCommand
                                     */
                                    EditorSetTransitionEffectCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        switch (object.mode) {
                                            case "TransitionModeInvalid":
                                            case 0:
                                                message.mode = 0;
                                                break;
                                            case "TransitionOverlay":
                                            case 1:
                                                message.mode = 1;
                                                break;
                                            case "TransitionDefault":
                                            case 2:
                                                message.mode = 2;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTransitionEffectCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand} message EditorSetTransitionEffectCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTransitionEffectCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.resourceUri = "";
                                            object.mode = options.enums === String ? "TransitionModeInvalid" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        if (message.mode != null && message.hasOwnProperty("mode"))
                                            object.mode = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.TransitionMode[message.mode] : message.mode;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTransitionEffectCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTransitionEffectCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTransitionEffectCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTransitionEffectCommand;
                                })();

                                proto.EditorSetResourcePropertiesCommand = (function () {

                                    /**
                                     * Properties of an EditorSetResourcePropertiesCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetResourcePropertiesCommand
                                     * @property {string|null} [clipId] EditorSetResourcePropertiesCommand clipId
                                     * @property {string|null} [remoteUri] EditorSetResourcePropertiesCommand remoteUri
                                     * @property {string|null} [name] EditorSetResourcePropertiesCommand name
                                     * @property {number|null} [version] EditorSetResourcePropertiesCommand version
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType|null} [resType] EditorSetResourcePropertiesCommand resType
                                     */

                                    /**
                                     * Constructs a new EditorSetResourcePropertiesCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetResourcePropertiesCommand.
                                     * @implements IEditorSetResourcePropertiesCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourcePropertiesCommand=} [properties] Properties to set
                                     */
                                    function EditorSetResourcePropertiesCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetResourcePropertiesCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @instance
                                     */
                                    EditorSetResourcePropertiesCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetResourcePropertiesCommand remoteUri.
                                     * @member {string} remoteUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @instance
                                     */
                                    EditorSetResourcePropertiesCommand.prototype.remoteUri = "";

                                    /**
                                     * EditorSetResourcePropertiesCommand name.
                                     * @member {string} name
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @instance
                                     */
                                    EditorSetResourcePropertiesCommand.prototype.name = "";

                                    /**
                                     * EditorSetResourcePropertiesCommand version.
                                     * @member {number} version
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @instance
                                     */
                                    EditorSetResourcePropertiesCommand.prototype.version = 0;

                                    /**
                                     * EditorSetResourcePropertiesCommand resType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType} resType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @instance
                                     */
                                    EditorSetResourcePropertiesCommand.prototype.resType = 0;

                                    /**
                                     * Creates a new EditorSetResourcePropertiesCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourcePropertiesCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand} EditorSetResourcePropertiesCommand instance
                                     */
                                    EditorSetResourcePropertiesCommand.create = function create(properties) {
                                        return new EditorSetResourcePropertiesCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetResourcePropertiesCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourcePropertiesCommand} message EditorSetResourcePropertiesCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetResourcePropertiesCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.remoteUri != null && Object.hasOwnProperty.call(message, "remoteUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.remoteUri);
                                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                                        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.version);
                                        if (message.resType != null && Object.hasOwnProperty.call(message, "resType"))
                                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.resType);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetResourcePropertiesCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourcePropertiesCommand} message EditorSetResourcePropertiesCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetResourcePropertiesCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetResourcePropertiesCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand} EditorSetResourcePropertiesCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetResourcePropertiesCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.remoteUri = reader.string();
                                                    break;
                                                case 3:
                                                    message.name = reader.string();
                                                    break;
                                                case 4:
                                                    message.version = reader.int32();
                                                    break;
                                                case 5:
                                                    message.resType = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetResourcePropertiesCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand} EditorSetResourcePropertiesCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetResourcePropertiesCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetResourcePropertiesCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetResourcePropertiesCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.remoteUri != null && message.hasOwnProperty("remoteUri"))
                                            if (!$util.isString(message.remoteUri))
                                                return "remoteUri: string expected";
                                        if (message.name != null && message.hasOwnProperty("name"))
                                            if (!$util.isString(message.name))
                                                return "name: string expected";
                                        if (message.version != null && message.hasOwnProperty("version"))
                                            if (!$util.isInteger(message.version))
                                                return "version: integer expected";
                                        if (message.resType != null && message.hasOwnProperty("resType"))
                                            switch (message.resType) {
                                                default:
                                                    return "resType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                case 5:
                                                case 6:
                                                case 7:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetResourcePropertiesCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand} EditorSetResourcePropertiesCommand
                                     */
                                    EditorSetResourcePropertiesCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.remoteUri != null)
                                            message.remoteUri = String(object.remoteUri);
                                        if (object.name != null)
                                            message.name = String(object.name);
                                        if (object.version != null)
                                            message.version = object.version | 0;
                                        switch (object.resType) {
                                            case "ResTypeUnknown":
                                            case 0:
                                                message.resType = 0;
                                                break;
                                            case "ResTypeImage":
                                            case 1:
                                                message.resType = 1;
                                                break;
                                            case "ResTypeMedia":
                                            case 2:
                                                message.resType = 2;
                                                break;
                                            case "ResTypeLookup":
                                            case 3:
                                                message.resType = 3;
                                                break;
                                            case "ResTypeSticker":
                                            case 4:
                                                message.resType = 4;
                                                break;
                                            case "ResTypeMagic":
                                            case 5:
                                                message.resType = 5;
                                                break;
                                            case "ResTypeFont":
                                            case 6:
                                                message.resType = 6;
                                                break;
                                            case "ResTypeExtra":
                                            case 7:
                                                message.resType = 7;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetResourcePropertiesCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand} message EditorSetResourcePropertiesCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetResourcePropertiesCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.remoteUri = "";
                                            object.name = "";
                                            object.version = 0;
                                            object.resType = options.enums === String ? "ResTypeUnknown" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.remoteUri != null && message.hasOwnProperty("remoteUri"))
                                            object.remoteUri = message.remoteUri;
                                        if (message.name != null && message.hasOwnProperty("name"))
                                            object.name = message.name;
                                        if (message.version != null && message.hasOwnProperty("version"))
                                            object.version = message.version;
                                        if (message.resType != null && message.hasOwnProperty("resType"))
                                            object.resType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ResourceType[message.resType] : message.resType;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetResourcePropertiesCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourcePropertiesCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetResourcePropertiesCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetResourcePropertiesCommand;
                                })();

                                proto.EditorGetResourceDurationUsCommand = (function () {

                                    /**
                                     * Properties of an EditorGetResourceDurationUsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetResourceDurationUsCommand
                                     * @property {string|null} [resourceId] EditorGetResourceDurationUsCommand resourceId
                                     */

                                    /**
                                     * Constructs a new EditorGetResourceDurationUsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetResourceDurationUsCommand.
                                     * @implements IEditorGetResourceDurationUsCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommand=} [properties] Properties to set
                                     */
                                    function EditorGetResourceDurationUsCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetResourceDurationUsCommand resourceId.
                                     * @member {string} resourceId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @instance
                                     */
                                    EditorGetResourceDurationUsCommand.prototype.resourceId = "";

                                    /**
                                     * Creates a new EditorGetResourceDurationUsCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand} EditorGetResourceDurationUsCommand instance
                                     */
                                    EditorGetResourceDurationUsCommand.create = function create(properties) {
                                        return new EditorGetResourceDurationUsCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetResourceDurationUsCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommand} message EditorGetResourceDurationUsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetResourceDurationUsCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.resourceId != null && Object.hasOwnProperty.call(message, "resourceId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetResourceDurationUsCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommand} message EditorGetResourceDurationUsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetResourceDurationUsCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetResourceDurationUsCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand} EditorGetResourceDurationUsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetResourceDurationUsCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.resourceId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetResourceDurationUsCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand} EditorGetResourceDurationUsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetResourceDurationUsCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetResourceDurationUsCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetResourceDurationUsCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.resourceId != null && message.hasOwnProperty("resourceId"))
                                            if (!$util.isString(message.resourceId))
                                                return "resourceId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetResourceDurationUsCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand} EditorGetResourceDurationUsCommand
                                     */
                                    EditorGetResourceDurationUsCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand();
                                        if (object.resourceId != null)
                                            message.resourceId = String(object.resourceId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetResourceDurationUsCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand} message EditorGetResourceDurationUsCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetResourceDurationUsCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.resourceId = "";
                                        if (message.resourceId != null && message.hasOwnProperty("resourceId"))
                                            object.resourceId = message.resourceId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetResourceDurationUsCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetResourceDurationUsCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetResourceDurationUsCommand;
                                })();

                                proto.EditorGetResourceDurationUsCommandResult = (function () {

                                    /**
                                     * Properties of an EditorGetResourceDurationUsCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetResourceDurationUsCommandResult
                                     * @property {number|Long|null} [duration] EditorGetResourceDurationUsCommandResult duration
                                     */

                                    /**
                                     * Constructs a new EditorGetResourceDurationUsCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetResourceDurationUsCommandResult.
                                     * @implements IEditorGetResourceDurationUsCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommandResult=} [properties] Properties to set
                                     */
                                    function EditorGetResourceDurationUsCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetResourceDurationUsCommandResult duration.
                                     * @member {number|Long} duration
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @instance
                                     */
                                    EditorGetResourceDurationUsCommandResult.prototype.duration = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorGetResourceDurationUsCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult} EditorGetResourceDurationUsCommandResult instance
                                     */
                                    EditorGetResourceDurationUsCommandResult.create = function create(properties) {
                                        return new EditorGetResourceDurationUsCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetResourceDurationUsCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommandResult} message EditorGetResourceDurationUsCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetResourceDurationUsCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.duration);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetResourceDurationUsCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceDurationUsCommandResult} message EditorGetResourceDurationUsCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetResourceDurationUsCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetResourceDurationUsCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult} EditorGetResourceDurationUsCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetResourceDurationUsCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.duration = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetResourceDurationUsCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult} EditorGetResourceDurationUsCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetResourceDurationUsCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetResourceDurationUsCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetResourceDurationUsCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (!$util.isInteger(message.duration) && !(message.duration && $util.isInteger(message.duration.low) && $util.isInteger(message.duration.high)))
                                                return "duration: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetResourceDurationUsCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult} EditorGetResourceDurationUsCommandResult
                                     */
                                    EditorGetResourceDurationUsCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult();
                                        if (object.duration != null)
                                            if ($util.Long)
                                                (message.duration = $util.Long.fromValue(object.duration)).unsigned = false;
                                            else if (typeof object.duration === "string")
                                                message.duration = parseInt(object.duration, 10);
                                            else if (typeof object.duration === "number")
                                                message.duration = object.duration;
                                            else if (typeof object.duration === "object")
                                                message.duration = new $util.LongBits(object.duration.low >>> 0, object.duration.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetResourceDurationUsCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult} message EditorGetResourceDurationUsCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetResourceDurationUsCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.duration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.duration = options.longs === String ? "0" : 0;
                                        if (message.duration != null && message.hasOwnProperty("duration"))
                                            if (typeof message.duration === "number")
                                                object.duration = options.longs === String ? String(message.duration) : message.duration;
                                            else
                                                object.duration = options.longs === String ? $util.Long.prototype.toString.call(message.duration) : options.longs === Number ? new $util.LongBits(message.duration.low >>> 0, message.duration.high >>> 0).toNumber() : message.duration;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetResourceDurationUsCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceDurationUsCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetResourceDurationUsCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetResourceDurationUsCommandResult;
                                })();

                                proto.EditorGetResourceSizeCommand = (function () {

                                    /**
                                     * Properties of an EditorGetResourceSizeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetResourceSizeCommand
                                     * @property {string|null} [resourceId] EditorGetResourceSizeCommand resourceId
                                     */

                                    /**
                                     * Constructs a new EditorGetResourceSizeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetResourceSizeCommand.
                                     * @implements IEditorGetResourceSizeCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommand=} [properties] Properties to set
                                     */
                                    function EditorGetResourceSizeCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetResourceSizeCommand resourceId.
                                     * @member {string} resourceId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @instance
                                     */
                                    EditorGetResourceSizeCommand.prototype.resourceId = "";

                                    /**
                                     * Creates a new EditorGetResourceSizeCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand} EditorGetResourceSizeCommand instance
                                     */
                                    EditorGetResourceSizeCommand.create = function create(properties) {
                                        return new EditorGetResourceSizeCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetResourceSizeCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommand} message EditorGetResourceSizeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetResourceSizeCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.resourceId != null && Object.hasOwnProperty.call(message, "resourceId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetResourceSizeCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommand} message EditorGetResourceSizeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetResourceSizeCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetResourceSizeCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand} EditorGetResourceSizeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetResourceSizeCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.resourceId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetResourceSizeCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand} EditorGetResourceSizeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetResourceSizeCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetResourceSizeCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetResourceSizeCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.resourceId != null && message.hasOwnProperty("resourceId"))
                                            if (!$util.isString(message.resourceId))
                                                return "resourceId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetResourceSizeCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand} EditorGetResourceSizeCommand
                                     */
                                    EditorGetResourceSizeCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand();
                                        if (object.resourceId != null)
                                            message.resourceId = String(object.resourceId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetResourceSizeCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand} message EditorGetResourceSizeCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetResourceSizeCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.resourceId = "";
                                        if (message.resourceId != null && message.hasOwnProperty("resourceId"))
                                            object.resourceId = message.resourceId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetResourceSizeCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetResourceSizeCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetResourceSizeCommand;
                                })();

                                proto.EditorGetResourceSizeCommandResult = (function () {

                                    /**
                                     * Properties of an EditorGetResourceSizeCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetResourceSizeCommandResult
                                     * @property {number|null} [width] EditorGetResourceSizeCommandResult width
                                     * @property {number|null} [height] EditorGetResourceSizeCommandResult height
                                     */

                                    /**
                                     * Constructs a new EditorGetResourceSizeCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetResourceSizeCommandResult.
                                     * @implements IEditorGetResourceSizeCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommandResult=} [properties] Properties to set
                                     */
                                    function EditorGetResourceSizeCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetResourceSizeCommandResult width.
                                     * @member {number} width
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @instance
                                     */
                                    EditorGetResourceSizeCommandResult.prototype.width = 0;

                                    /**
                                     * EditorGetResourceSizeCommandResult height.
                                     * @member {number} height
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @instance
                                     */
                                    EditorGetResourceSizeCommandResult.prototype.height = 0;

                                    /**
                                     * Creates a new EditorGetResourceSizeCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult} EditorGetResourceSizeCommandResult instance
                                     */
                                    EditorGetResourceSizeCommandResult.create = function create(properties) {
                                        return new EditorGetResourceSizeCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetResourceSizeCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommandResult} message EditorGetResourceSizeCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetResourceSizeCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.width);
                                        if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.height);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetResourceSizeCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetResourceSizeCommandResult} message EditorGetResourceSizeCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetResourceSizeCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetResourceSizeCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult} EditorGetResourceSizeCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetResourceSizeCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.width = reader.uint32();
                                                    break;
                                                case 2:
                                                    message.height = reader.uint32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetResourceSizeCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult} EditorGetResourceSizeCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetResourceSizeCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetResourceSizeCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetResourceSizeCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            if (!$util.isInteger(message.width))
                                                return "width: integer expected";
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            if (!$util.isInteger(message.height))
                                                return "height: integer expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetResourceSizeCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult} EditorGetResourceSizeCommandResult
                                     */
                                    EditorGetResourceSizeCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult();
                                        if (object.width != null)
                                            message.width = object.width >>> 0;
                                        if (object.height != null)
                                            message.height = object.height >>> 0;
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetResourceSizeCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult} message EditorGetResourceSizeCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetResourceSizeCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.width = 0;
                                            object.height = 0;
                                        }
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            object.width = message.width;
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            object.height = message.height;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetResourceSizeCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetResourceSizeCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetResourceSizeCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetResourceSizeCommandResult;
                                })();

                                proto.EditorGetClipResourceInfoCommand = (function () {

                                    /**
                                     * Properties of an EditorGetClipResourceInfoCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetClipResourceInfoCommand
                                     * @property {string|null} [clipId] EditorGetClipResourceInfoCommand clipId
                                     */

                                    /**
                                     * Constructs a new EditorGetClipResourceInfoCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetClipResourceInfoCommand.
                                     * @implements IEditorGetClipResourceInfoCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommand=} [properties] Properties to set
                                     */
                                    function EditorGetClipResourceInfoCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetClipResourceInfoCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @instance
                                     */
                                    EditorGetClipResourceInfoCommand.prototype.clipId = "";

                                    /**
                                     * Creates a new EditorGetClipResourceInfoCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand} EditorGetClipResourceInfoCommand instance
                                     */
                                    EditorGetClipResourceInfoCommand.create = function create(properties) {
                                        return new EditorGetClipResourceInfoCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipResourceInfoCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommand} message EditorGetClipResourceInfoCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipResourceInfoCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipResourceInfoCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommand} message EditorGetClipResourceInfoCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipResourceInfoCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetClipResourceInfoCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand} EditorGetClipResourceInfoCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipResourceInfoCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetClipResourceInfoCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand} EditorGetClipResourceInfoCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipResourceInfoCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetClipResourceInfoCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetClipResourceInfoCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetClipResourceInfoCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand} EditorGetClipResourceInfoCommand
                                     */
                                    EditorGetClipResourceInfoCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetClipResourceInfoCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand} message EditorGetClipResourceInfoCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetClipResourceInfoCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.clipId = "";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetClipResourceInfoCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetClipResourceInfoCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetClipResourceInfoCommand;
                                })();

                                proto.EditorGetClipResourceInfoCommandResult = (function () {

                                    /**
                                     * Properties of an EditorGetClipResourceInfoCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetClipResourceInfoCommandResult
                                     * @property {string|null} [resourceId] EditorGetClipResourceInfoCommandResult resourceId
                                     * @property {string|null} [resourceUrl] EditorGetClipResourceInfoCommandResult resourceUrl
                                     */

                                    /**
                                     * Constructs a new EditorGetClipResourceInfoCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetClipResourceInfoCommandResult.
                                     * @implements IEditorGetClipResourceInfoCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommandResult=} [properties] Properties to set
                                     */
                                    function EditorGetClipResourceInfoCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetClipResourceInfoCommandResult resourceId.
                                     * @member {string} resourceId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @instance
                                     */
                                    EditorGetClipResourceInfoCommandResult.prototype.resourceId = "";

                                    /**
                                     * EditorGetClipResourceInfoCommandResult resourceUrl.
                                     * @member {string} resourceUrl
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @instance
                                     */
                                    EditorGetClipResourceInfoCommandResult.prototype.resourceUrl = "";

                                    /**
                                     * Creates a new EditorGetClipResourceInfoCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult} EditorGetClipResourceInfoCommandResult instance
                                     */
                                    EditorGetClipResourceInfoCommandResult.create = function create(properties) {
                                        return new EditorGetClipResourceInfoCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipResourceInfoCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommandResult} message EditorGetClipResourceInfoCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipResourceInfoCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.resourceId != null && Object.hasOwnProperty.call(message, "resourceId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceId);
                                        if (message.resourceUrl != null && Object.hasOwnProperty.call(message, "resourceUrl"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUrl);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipResourceInfoCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipResourceInfoCommandResult} message EditorGetClipResourceInfoCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipResourceInfoCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetClipResourceInfoCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult} EditorGetClipResourceInfoCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipResourceInfoCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.resourceId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUrl = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetClipResourceInfoCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult} EditorGetClipResourceInfoCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipResourceInfoCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetClipResourceInfoCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetClipResourceInfoCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.resourceId != null && message.hasOwnProperty("resourceId"))
                                            if (!$util.isString(message.resourceId))
                                                return "resourceId: string expected";
                                        if (message.resourceUrl != null && message.hasOwnProperty("resourceUrl"))
                                            if (!$util.isString(message.resourceUrl))
                                                return "resourceUrl: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetClipResourceInfoCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult} EditorGetClipResourceInfoCommandResult
                                     */
                                    EditorGetClipResourceInfoCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult();
                                        if (object.resourceId != null)
                                            message.resourceId = String(object.resourceId);
                                        if (object.resourceUrl != null)
                                            message.resourceUrl = String(object.resourceUrl);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetClipResourceInfoCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult} message EditorGetClipResourceInfoCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetClipResourceInfoCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.resourceId = "";
                                            object.resourceUrl = "";
                                        }
                                        if (message.resourceId != null && message.hasOwnProperty("resourceId"))
                                            object.resourceId = message.resourceId;
                                        if (message.resourceUrl != null && message.hasOwnProperty("resourceUrl"))
                                            object.resourceUrl = message.resourceUrl;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetClipResourceInfoCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipResourceInfoCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetClipResourceInfoCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetClipResourceInfoCommandResult;
                                })();

                                proto.EditorSetResourceFullKeyFrameWithResIdCommand = (function () {

                                    /**
                                     * Properties of an EditorSetResourceFullKeyFrameWithResIdCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetResourceFullKeyFrameWithResIdCommand
                                     * @property {string|null} [resourceId] EditorSetResourceFullKeyFrameWithResIdCommand resourceId
                                     * @property {boolean|null} [isFullKeyframe] EditorSetResourceFullKeyFrameWithResIdCommand isFullKeyframe
                                     */

                                    /**
                                     * Constructs a new EditorSetResourceFullKeyFrameWithResIdCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetResourceFullKeyFrameWithResIdCommand.
                                     * @implements IEditorSetResourceFullKeyFrameWithResIdCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourceFullKeyFrameWithResIdCommand=} [properties] Properties to set
                                     */
                                    function EditorSetResourceFullKeyFrameWithResIdCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetResourceFullKeyFrameWithResIdCommand resourceId.
                                     * @member {string} resourceId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @instance
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.prototype.resourceId = "";

                                    /**
                                     * EditorSetResourceFullKeyFrameWithResIdCommand isFullKeyframe.
                                     * @member {boolean} isFullKeyframe
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @instance
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.prototype.isFullKeyframe = false;

                                    /**
                                     * Creates a new EditorSetResourceFullKeyFrameWithResIdCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourceFullKeyFrameWithResIdCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand} EditorSetResourceFullKeyFrameWithResIdCommand instance
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.create = function create(properties) {
                                        return new EditorSetResourceFullKeyFrameWithResIdCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetResourceFullKeyFrameWithResIdCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourceFullKeyFrameWithResIdCommand} message EditorSetResourceFullKeyFrameWithResIdCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.resourceId != null && Object.hasOwnProperty.call(message, "resourceId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceId);
                                        if (message.isFullKeyframe != null && Object.hasOwnProperty.call(message, "isFullKeyframe"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isFullKeyframe);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetResourceFullKeyFrameWithResIdCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetResourceFullKeyFrameWithResIdCommand} message EditorSetResourceFullKeyFrameWithResIdCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetResourceFullKeyFrameWithResIdCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand} EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.resourceId = reader.string();
                                                    break;
                                                case 2:
                                                    message.isFullKeyframe = reader.bool();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetResourceFullKeyFrameWithResIdCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand} EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetResourceFullKeyFrameWithResIdCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.resourceId != null && message.hasOwnProperty("resourceId"))
                                            if (!$util.isString(message.resourceId))
                                                return "resourceId: string expected";
                                        if (message.isFullKeyframe != null && message.hasOwnProperty("isFullKeyframe"))
                                            if (typeof message.isFullKeyframe !== "boolean")
                                                return "isFullKeyframe: boolean expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetResourceFullKeyFrameWithResIdCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand} EditorSetResourceFullKeyFrameWithResIdCommand
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand();
                                        if (object.resourceId != null)
                                            message.resourceId = String(object.resourceId);
                                        if (object.isFullKeyframe != null)
                                            message.isFullKeyframe = Boolean(object.isFullKeyframe);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetResourceFullKeyFrameWithResIdCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand} message EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.resourceId = "";
                                            object.isFullKeyframe = false;
                                        }
                                        if (message.resourceId != null && message.hasOwnProperty("resourceId"))
                                            object.resourceId = message.resourceId;
                                        if (message.isFullKeyframe != null && message.hasOwnProperty("isFullKeyframe"))
                                            object.isFullKeyframe = message.isFullKeyframe;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetResourceFullKeyFrameWithResIdCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetResourceFullKeyFrameWithResIdCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetResourceFullKeyFrameWithResIdCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetResourceFullKeyFrameWithResIdCommand;
                                })();

                                proto.EditorSetTextCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextCommand
                                     * @property {string|null} [clipId] EditorSetTextCommand clipId
                                     * @property {string|null} [content] EditorSetTextCommand content
                                     */

                                    /**
                                     * Constructs a new EditorSetTextCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextCommand.
                                     * @implements IEditorSetTextCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @instance
                                     */
                                    EditorSetTextCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextCommand content.
                                     * @member {string} content
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @instance
                                     */
                                    EditorSetTextCommand.prototype.content = "";

                                    /**
                                     * Creates a new EditorSetTextCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand} EditorSetTextCommand instance
                                     */
                                    EditorSetTextCommand.create = function create(properties) {
                                        return new EditorSetTextCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextCommand} message EditorSetTextCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextCommand} message EditorSetTextCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand} EditorSetTextCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.content = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand} EditorSetTextCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.content != null && message.hasOwnProperty("content"))
                                            if (!$util.isString(message.content))
                                                return "content: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand} EditorSetTextCommand
                                     */
                                    EditorSetTextCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.content != null)
                                            message.content = String(object.content);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand} message EditorSetTextCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.content = "";
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.content != null && message.hasOwnProperty("content"))
                                            object.content = message.content;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextCommand;
                                })();

                                proto.EditorSetTextColorCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextColorCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextColorCommand
                                     * @property {string|null} [clipId] EditorSetTextColorCommand clipId
                                     * @property {number|null} [color] EditorSetTextColorCommand color
                                     */

                                    /**
                                     * Constructs a new EditorSetTextColorCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextColorCommand.
                                     * @implements IEditorSetTextColorCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextColorCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextColorCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextColorCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @instance
                                     */
                                    EditorSetTextColorCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextColorCommand color.
                                     * @member {number} color
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @instance
                                     */
                                    EditorSetTextColorCommand.prototype.color = 0;

                                    /**
                                     * Creates a new EditorSetTextColorCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextColorCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand} EditorSetTextColorCommand instance
                                     */
                                    EditorSetTextColorCommand.create = function create(properties) {
                                        return new EditorSetTextColorCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextColorCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextColorCommand} message EditorSetTextColorCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextColorCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.color != null && Object.hasOwnProperty.call(message, "color"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.color);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextColorCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextColorCommand} message EditorSetTextColorCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextColorCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextColorCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand} EditorSetTextColorCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextColorCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.color = reader.uint32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextColorCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand} EditorSetTextColorCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextColorCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextColorCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextColorCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.color != null && message.hasOwnProperty("color"))
                                            if (!$util.isInteger(message.color))
                                                return "color: integer expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextColorCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand} EditorSetTextColorCommand
                                     */
                                    EditorSetTextColorCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.color != null)
                                            message.color = object.color >>> 0;
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextColorCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand} message EditorSetTextColorCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextColorCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.color = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.color != null && message.hasOwnProperty("color"))
                                            object.color = message.color;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextColorCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextColorCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextColorCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextColorCommand;
                                })();

                                proto.EditorSetTextFontCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextFontCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextFontCommand
                                     * @property {string|null} [clipId] EditorSetTextFontCommand clipId
                                     * @property {string|null} [resourceUri] EditorSetTextFontCommand resourceUri
                                     */

                                    /**
                                     * Constructs a new EditorSetTextFontCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextFontCommand.
                                     * @implements IEditorSetTextFontCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextFontCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextFontCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextFontCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @instance
                                     */
                                    EditorSetTextFontCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextFontCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @instance
                                     */
                                    EditorSetTextFontCommand.prototype.resourceUri = "";

                                    /**
                                     * Creates a new EditorSetTextFontCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextFontCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand} EditorSetTextFontCommand instance
                                     */
                                    EditorSetTextFontCommand.create = function create(properties) {
                                        return new EditorSetTextFontCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextFontCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextFontCommand} message EditorSetTextFontCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextFontCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUri);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextFontCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextFontCommand} message EditorSetTextFontCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextFontCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextFontCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand} EditorSetTextFontCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextFontCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextFontCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand} EditorSetTextFontCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextFontCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextFontCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextFontCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextFontCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand} EditorSetTextFontCommand
                                     */
                                    EditorSetTextFontCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextFontCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand} message EditorSetTextFontCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextFontCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.resourceUri = "";
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextFontCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextFontCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextFontCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextFontCommand;
                                })();

                                proto.EditorSetDefaultFontFileCommand = (function () {

                                    /**
                                     * Properties of an EditorSetDefaultFontFileCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetDefaultFontFileCommand
                                     * @property {string|null} [resourceUri] EditorSetDefaultFontFileCommand resourceUri
                                     */

                                    /**
                                     * Constructs a new EditorSetDefaultFontFileCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetDefaultFontFileCommand.
                                     * @implements IEditorSetDefaultFontFileCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetDefaultFontFileCommand=} [properties] Properties to set
                                     */
                                    function EditorSetDefaultFontFileCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetDefaultFontFileCommand resourceUri.
                                     * @member {string} resourceUri
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @instance
                                     */
                                    EditorSetDefaultFontFileCommand.prototype.resourceUri = "";

                                    /**
                                     * Creates a new EditorSetDefaultFontFileCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetDefaultFontFileCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand} EditorSetDefaultFontFileCommand instance
                                     */
                                    EditorSetDefaultFontFileCommand.create = function create(properties) {
                                        return new EditorSetDefaultFontFileCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetDefaultFontFileCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetDefaultFontFileCommand} message EditorSetDefaultFontFileCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetDefaultFontFileCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceUri);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetDefaultFontFileCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetDefaultFontFileCommand} message EditorSetDefaultFontFileCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetDefaultFontFileCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetDefaultFontFileCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand} EditorSetDefaultFontFileCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetDefaultFontFileCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.resourceUri = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetDefaultFontFileCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand} EditorSetDefaultFontFileCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetDefaultFontFileCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetDefaultFontFileCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetDefaultFontFileCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            if (!$util.isString(message.resourceUri))
                                                return "resourceUri: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetDefaultFontFileCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand} EditorSetDefaultFontFileCommand
                                     */
                                    EditorSetDefaultFontFileCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand();
                                        if (object.resourceUri != null)
                                            message.resourceUri = String(object.resourceUri);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetDefaultFontFileCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand} message EditorSetDefaultFontFileCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetDefaultFontFileCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.resourceUri = "";
                                        if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                            object.resourceUri = message.resourceUri;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetDefaultFontFileCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetDefaultFontFileCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetDefaultFontFileCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetDefaultFontFileCommand;
                                })();

                                proto.EditorSetTextShadowCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextShadowCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextShadowCommand
                                     * @property {string|null} [clipId] EditorSetTextShadowCommand clipId
                                     * @property {boolean|null} [enable] EditorSetTextShadowCommand enable
                                     * @property {number|null} [color] EditorSetTextShadowCommand color
                                     * @property {number|null} [xOffset] EditorSetTextShadowCommand xOffset
                                     * @property {number|null} [yOffset] EditorSetTextShadowCommand yOffset
                                     */

                                    /**
                                     * Constructs a new EditorSetTextShadowCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextShadowCommand.
                                     * @implements IEditorSetTextShadowCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextShadowCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextShadowCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextShadowCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @instance
                                     */
                                    EditorSetTextShadowCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextShadowCommand enable.
                                     * @member {boolean} enable
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @instance
                                     */
                                    EditorSetTextShadowCommand.prototype.enable = false;

                                    /**
                                     * EditorSetTextShadowCommand color.
                                     * @member {number} color
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @instance
                                     */
                                    EditorSetTextShadowCommand.prototype.color = 0;

                                    /**
                                     * EditorSetTextShadowCommand xOffset.
                                     * @member {number} xOffset
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @instance
                                     */
                                    EditorSetTextShadowCommand.prototype.xOffset = 0;

                                    /**
                                     * EditorSetTextShadowCommand yOffset.
                                     * @member {number} yOffset
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @instance
                                     */
                                    EditorSetTextShadowCommand.prototype.yOffset = 0;

                                    /**
                                     * Creates a new EditorSetTextShadowCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextShadowCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand} EditorSetTextShadowCommand instance
                                     */
                                    EditorSetTextShadowCommand.create = function create(properties) {
                                        return new EditorSetTextShadowCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextShadowCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextShadowCommand} message EditorSetTextShadowCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextShadowCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enable);
                                        if (message.color != null && Object.hasOwnProperty.call(message, "color"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.color);
                                        if (message.xOffset != null && Object.hasOwnProperty.call(message, "xOffset"))
                                            writer.uint32(/* id 4, wireType 5 =*/37).float(message.xOffset);
                                        if (message.yOffset != null && Object.hasOwnProperty.call(message, "yOffset"))
                                            writer.uint32(/* id 5, wireType 5 =*/45).float(message.yOffset);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextShadowCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextShadowCommand} message EditorSetTextShadowCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextShadowCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextShadowCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand} EditorSetTextShadowCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextShadowCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.enable = reader.bool();
                                                    break;
                                                case 3:
                                                    message.color = reader.uint32();
                                                    break;
                                                case 4:
                                                    message.xOffset = reader.float();
                                                    break;
                                                case 5:
                                                    message.yOffset = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextShadowCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand} EditorSetTextShadowCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextShadowCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextShadowCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextShadowCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            if (typeof message.enable !== "boolean")
                                                return "enable: boolean expected";
                                        if (message.color != null && message.hasOwnProperty("color"))
                                            if (!$util.isInteger(message.color))
                                                return "color: integer expected";
                                        if (message.xOffset != null && message.hasOwnProperty("xOffset"))
                                            if (typeof message.xOffset !== "number")
                                                return "xOffset: number expected";
                                        if (message.yOffset != null && message.hasOwnProperty("yOffset"))
                                            if (typeof message.yOffset !== "number")
                                                return "yOffset: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextShadowCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand} EditorSetTextShadowCommand
                                     */
                                    EditorSetTextShadowCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.enable != null)
                                            message.enable = Boolean(object.enable);
                                        if (object.color != null)
                                            message.color = object.color >>> 0;
                                        if (object.xOffset != null)
                                            message.xOffset = Number(object.xOffset);
                                        if (object.yOffset != null)
                                            message.yOffset = Number(object.yOffset);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextShadowCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand} message EditorSetTextShadowCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextShadowCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.enable = false;
                                            object.color = 0;
                                            object.xOffset = 0;
                                            object.yOffset = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            object.enable = message.enable;
                                        if (message.color != null && message.hasOwnProperty("color"))
                                            object.color = message.color;
                                        if (message.xOffset != null && message.hasOwnProperty("xOffset"))
                                            object.xOffset = options.json && !isFinite(message.xOffset) ? String(message.xOffset) : message.xOffset;
                                        if (message.yOffset != null && message.hasOwnProperty("yOffset"))
                                            object.yOffset = options.json && !isFinite(message.yOffset) ? String(message.yOffset) : message.yOffset;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextShadowCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextShadowCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextShadowCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextShadowCommand;
                                })();

                                /**
                                 * AlignmentVerticalType enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AlignmentVerticalType
                                 * @enum {number}
                                 * @property {number} ALIGN_VERTICAL_INVALID=0 ALIGN_VERTICAL_INVALID value
                                 * @property {number} ALIGN_VERTICAL_CENTER=1 ALIGN_VERTICAL_CENTER value
                                 * @property {number} ALIGN_VERTICAL_TOP=2 ALIGN_VERTICAL_TOP value
                                 * @property {number} ALIGN_VERTICAL_BOTTOM=3 ALIGN_VERTICAL_BOTTOM value
                                 */
                                proto.AlignmentVerticalType = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "ALIGN_VERTICAL_INVALID"] = 0;
                                    values[valuesById[1] = "ALIGN_VERTICAL_CENTER"] = 1;
                                    values[valuesById[2] = "ALIGN_VERTICAL_TOP"] = 2;
                                    values[valuesById[3] = "ALIGN_VERTICAL_BOTTOM"] = 3;
                                    return values;
                                })();

                                /**
                                 * AlignmentHorizontalType enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AlignmentHorizontalType
                                 * @enum {number}
                                 * @property {number} ALIGN_HORIZONTAL_INVALID=0 ALIGN_HORIZONTAL_INVALID value
                                 * @property {number} ALIGN_HORIZONTAL_CENTER=1 ALIGN_HORIZONTAL_CENTER value
                                 * @property {number} ALIGN_HORIZONTAL_LEFT=2 ALIGN_HORIZONTAL_LEFT value
                                 * @property {number} ALIGN_HORIZONTAL_RIGHT=3 ALIGN_HORIZONTAL_RIGHT value
                                 */
                                proto.AlignmentHorizontalType = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "ALIGN_HORIZONTAL_INVALID"] = 0;
                                    values[valuesById[1] = "ALIGN_HORIZONTAL_CENTER"] = 1;
                                    values[valuesById[2] = "ALIGN_HORIZONTAL_LEFT"] = 2;
                                    values[valuesById[3] = "ALIGN_HORIZONTAL_RIGHT"] = 3;
                                    return values;
                                })();

                                proto.EditorSetTextAlignmentCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextAlignmentCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextAlignmentCommand
                                     * @property {string|null} [clipId] EditorSetTextAlignmentCommand clipId
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AlignmentVerticalType|null} [alignmentVerticalType] EditorSetTextAlignmentCommand alignmentVerticalType
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AlignmentHorizontalType|null} [alignmentHorizontalType] EditorSetTextAlignmentCommand alignmentHorizontalType
                                     */

                                    /**
                                     * Constructs a new EditorSetTextAlignmentCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextAlignmentCommand.
                                     * @implements IEditorSetTextAlignmentCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextAlignmentCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextAlignmentCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextAlignmentCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @instance
                                     */
                                    EditorSetTextAlignmentCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextAlignmentCommand alignmentVerticalType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AlignmentVerticalType} alignmentVerticalType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @instance
                                     */
                                    EditorSetTextAlignmentCommand.prototype.alignmentVerticalType = 0;

                                    /**
                                     * EditorSetTextAlignmentCommand alignmentHorizontalType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AlignmentHorizontalType} alignmentHorizontalType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @instance
                                     */
                                    EditorSetTextAlignmentCommand.prototype.alignmentHorizontalType = 0;

                                    /**
                                     * Creates a new EditorSetTextAlignmentCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextAlignmentCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand} EditorSetTextAlignmentCommand instance
                                     */
                                    EditorSetTextAlignmentCommand.create = function create(properties) {
                                        return new EditorSetTextAlignmentCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextAlignmentCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextAlignmentCommand} message EditorSetTextAlignmentCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextAlignmentCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.alignmentVerticalType != null && Object.hasOwnProperty.call(message, "alignmentVerticalType"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.alignmentVerticalType);
                                        if (message.alignmentHorizontalType != null && Object.hasOwnProperty.call(message, "alignmentHorizontalType"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.alignmentHorizontalType);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextAlignmentCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextAlignmentCommand} message EditorSetTextAlignmentCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextAlignmentCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextAlignmentCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand} EditorSetTextAlignmentCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextAlignmentCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.alignmentVerticalType = reader.int32();
                                                    break;
                                                case 3:
                                                    message.alignmentHorizontalType = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextAlignmentCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand} EditorSetTextAlignmentCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextAlignmentCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextAlignmentCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextAlignmentCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.alignmentVerticalType != null && message.hasOwnProperty("alignmentVerticalType"))
                                            switch (message.alignmentVerticalType) {
                                                default:
                                                    return "alignmentVerticalType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                    break;
                                            }
                                        if (message.alignmentHorizontalType != null && message.hasOwnProperty("alignmentHorizontalType"))
                                            switch (message.alignmentHorizontalType) {
                                                default:
                                                    return "alignmentHorizontalType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextAlignmentCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand} EditorSetTextAlignmentCommand
                                     */
                                    EditorSetTextAlignmentCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        switch (object.alignmentVerticalType) {
                                            case "ALIGN_VERTICAL_INVALID":
                                            case 0:
                                                message.alignmentVerticalType = 0;
                                                break;
                                            case "ALIGN_VERTICAL_CENTER":
                                            case 1:
                                                message.alignmentVerticalType = 1;
                                                break;
                                            case "ALIGN_VERTICAL_TOP":
                                            case 2:
                                                message.alignmentVerticalType = 2;
                                                break;
                                            case "ALIGN_VERTICAL_BOTTOM":
                                            case 3:
                                                message.alignmentVerticalType = 3;
                                                break;
                                        }
                                        switch (object.alignmentHorizontalType) {
                                            case "ALIGN_HORIZONTAL_INVALID":
                                            case 0:
                                                message.alignmentHorizontalType = 0;
                                                break;
                                            case "ALIGN_HORIZONTAL_CENTER":
                                            case 1:
                                                message.alignmentHorizontalType = 1;
                                                break;
                                            case "ALIGN_HORIZONTAL_LEFT":
                                            case 2:
                                                message.alignmentHorizontalType = 2;
                                                break;
                                            case "ALIGN_HORIZONTAL_RIGHT":
                                            case 3:
                                                message.alignmentHorizontalType = 3;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextAlignmentCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand} message EditorSetTextAlignmentCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextAlignmentCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.alignmentVerticalType = options.enums === String ? "ALIGN_VERTICAL_INVALID" : 0;
                                            object.alignmentHorizontalType = options.enums === String ? "ALIGN_HORIZONTAL_INVALID" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.alignmentVerticalType != null && message.hasOwnProperty("alignmentVerticalType"))
                                            object.alignmentVerticalType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AlignmentVerticalType[message.alignmentVerticalType] : message.alignmentVerticalType;
                                        if (message.alignmentHorizontalType != null && message.hasOwnProperty("alignmentHorizontalType"))
                                            object.alignmentHorizontalType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AlignmentHorizontalType[message.alignmentHorizontalType] : message.alignmentHorizontalType;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextAlignmentCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextAlignmentCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextAlignmentCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextAlignmentCommand;
                                })();

                                proto.EditorSetTextOutlineCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextOutlineCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextOutlineCommand
                                     * @property {string|null} [clipId] EditorSetTextOutlineCommand clipId
                                     * @property {boolean|null} [enable] EditorSetTextOutlineCommand enable
                                     * @property {number|null} [color] EditorSetTextOutlineCommand color
                                     * @property {number|null} [size] EditorSetTextOutlineCommand size
                                     */

                                    /**
                                     * Constructs a new EditorSetTextOutlineCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextOutlineCommand.
                                     * @implements IEditorSetTextOutlineCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextOutlineCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextOutlineCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextOutlineCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @instance
                                     */
                                    EditorSetTextOutlineCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextOutlineCommand enable.
                                     * @member {boolean} enable
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @instance
                                     */
                                    EditorSetTextOutlineCommand.prototype.enable = false;

                                    /**
                                     * EditorSetTextOutlineCommand color.
                                     * @member {number} color
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @instance
                                     */
                                    EditorSetTextOutlineCommand.prototype.color = 0;

                                    /**
                                     * EditorSetTextOutlineCommand size.
                                     * @member {number} size
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @instance
                                     */
                                    EditorSetTextOutlineCommand.prototype.size = 0;

                                    /**
                                     * Creates a new EditorSetTextOutlineCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextOutlineCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand} EditorSetTextOutlineCommand instance
                                     */
                                    EditorSetTextOutlineCommand.create = function create(properties) {
                                        return new EditorSetTextOutlineCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextOutlineCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextOutlineCommand} message EditorSetTextOutlineCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextOutlineCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enable);
                                        if (message.color != null && Object.hasOwnProperty.call(message, "color"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.color);
                                        if (message.size != null && Object.hasOwnProperty.call(message, "size"))
                                            writer.uint32(/* id 4, wireType 5 =*/37).float(message.size);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextOutlineCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextOutlineCommand} message EditorSetTextOutlineCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextOutlineCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextOutlineCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand} EditorSetTextOutlineCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextOutlineCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.enable = reader.bool();
                                                    break;
                                                case 3:
                                                    message.color = reader.uint32();
                                                    break;
                                                case 4:
                                                    message.size = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextOutlineCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand} EditorSetTextOutlineCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextOutlineCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextOutlineCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextOutlineCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            if (typeof message.enable !== "boolean")
                                                return "enable: boolean expected";
                                        if (message.color != null && message.hasOwnProperty("color"))
                                            if (!$util.isInteger(message.color))
                                                return "color: integer expected";
                                        if (message.size != null && message.hasOwnProperty("size"))
                                            if (typeof message.size !== "number")
                                                return "size: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextOutlineCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand} EditorSetTextOutlineCommand
                                     */
                                    EditorSetTextOutlineCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.enable != null)
                                            message.enable = Boolean(object.enable);
                                        if (object.color != null)
                                            message.color = object.color >>> 0;
                                        if (object.size != null)
                                            message.size = Number(object.size);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextOutlineCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand} message EditorSetTextOutlineCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextOutlineCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.enable = false;
                                            object.color = 0;
                                            object.size = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            object.enable = message.enable;
                                        if (message.color != null && message.hasOwnProperty("color"))
                                            object.color = message.color;
                                        if (message.size != null && message.hasOwnProperty("size"))
                                            object.size = options.json && !isFinite(message.size) ? String(message.size) : message.size;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextOutlineCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextOutlineCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextOutlineCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextOutlineCommand;
                                })();

                                proto.EditorSetTextUnderlineCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextUnderlineCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextUnderlineCommand
                                     * @property {string|null} [clipId] EditorSetTextUnderlineCommand clipId
                                     * @property {boolean|null} [enable] EditorSetTextUnderlineCommand enable
                                     */

                                    /**
                                     * Constructs a new EditorSetTextUnderlineCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextUnderlineCommand.
                                     * @implements IEditorSetTextUnderlineCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextUnderlineCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextUnderlineCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextUnderlineCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @instance
                                     */
                                    EditorSetTextUnderlineCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextUnderlineCommand enable.
                                     * @member {boolean} enable
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @instance
                                     */
                                    EditorSetTextUnderlineCommand.prototype.enable = false;

                                    /**
                                     * Creates a new EditorSetTextUnderlineCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextUnderlineCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand} EditorSetTextUnderlineCommand instance
                                     */
                                    EditorSetTextUnderlineCommand.create = function create(properties) {
                                        return new EditorSetTextUnderlineCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextUnderlineCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextUnderlineCommand} message EditorSetTextUnderlineCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextUnderlineCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enable);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextUnderlineCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextUnderlineCommand} message EditorSetTextUnderlineCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextUnderlineCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextUnderlineCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand} EditorSetTextUnderlineCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextUnderlineCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.enable = reader.bool();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextUnderlineCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand} EditorSetTextUnderlineCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextUnderlineCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextUnderlineCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextUnderlineCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            if (typeof message.enable !== "boolean")
                                                return "enable: boolean expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextUnderlineCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand} EditorSetTextUnderlineCommand
                                     */
                                    EditorSetTextUnderlineCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.enable != null)
                                            message.enable = Boolean(object.enable);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextUnderlineCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand} message EditorSetTextUnderlineCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextUnderlineCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.enable = false;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            object.enable = message.enable;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextUnderlineCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextUnderlineCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextUnderlineCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextUnderlineCommand;
                                })();

                                proto.EditorSetTextBoldCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextBoldCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextBoldCommand
                                     * @property {string|null} [clipId] EditorSetTextBoldCommand clipId
                                     * @property {boolean|null} [enable] EditorSetTextBoldCommand enable
                                     */

                                    /**
                                     * Constructs a new EditorSetTextBoldCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextBoldCommand.
                                     * @implements IEditorSetTextBoldCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextBoldCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextBoldCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextBoldCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @instance
                                     */
                                    EditorSetTextBoldCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextBoldCommand enable.
                                     * @member {boolean} enable
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @instance
                                     */
                                    EditorSetTextBoldCommand.prototype.enable = false;

                                    /**
                                     * Creates a new EditorSetTextBoldCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextBoldCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand} EditorSetTextBoldCommand instance
                                     */
                                    EditorSetTextBoldCommand.create = function create(properties) {
                                        return new EditorSetTextBoldCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextBoldCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextBoldCommand} message EditorSetTextBoldCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextBoldCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enable);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextBoldCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextBoldCommand} message EditorSetTextBoldCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextBoldCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextBoldCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand} EditorSetTextBoldCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextBoldCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.enable = reader.bool();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextBoldCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand} EditorSetTextBoldCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextBoldCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextBoldCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextBoldCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            if (typeof message.enable !== "boolean")
                                                return "enable: boolean expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextBoldCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand} EditorSetTextBoldCommand
                                     */
                                    EditorSetTextBoldCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.enable != null)
                                            message.enable = Boolean(object.enable);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextBoldCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand} message EditorSetTextBoldCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextBoldCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.enable = false;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            object.enable = message.enable;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextBoldCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextBoldCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextBoldCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextBoldCommand;
                                })();

                                proto.EditorSetTextItalicsCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextItalicsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextItalicsCommand
                                     * @property {string|null} [clipId] EditorSetTextItalicsCommand clipId
                                     * @property {boolean|null} [enable] EditorSetTextItalicsCommand enable
                                     */

                                    /**
                                     * Constructs a new EditorSetTextItalicsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextItalicsCommand.
                                     * @implements IEditorSetTextItalicsCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextItalicsCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextItalicsCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextItalicsCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @instance
                                     */
                                    EditorSetTextItalicsCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextItalicsCommand enable.
                                     * @member {boolean} enable
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @instance
                                     */
                                    EditorSetTextItalicsCommand.prototype.enable = false;

                                    /**
                                     * Creates a new EditorSetTextItalicsCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextItalicsCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand} EditorSetTextItalicsCommand instance
                                     */
                                    EditorSetTextItalicsCommand.create = function create(properties) {
                                        return new EditorSetTextItalicsCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextItalicsCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextItalicsCommand} message EditorSetTextItalicsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextItalicsCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enable);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextItalicsCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextItalicsCommand} message EditorSetTextItalicsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextItalicsCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextItalicsCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand} EditorSetTextItalicsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextItalicsCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.enable = reader.bool();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextItalicsCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand} EditorSetTextItalicsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextItalicsCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextItalicsCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextItalicsCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            if (typeof message.enable !== "boolean")
                                                return "enable: boolean expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextItalicsCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand} EditorSetTextItalicsCommand
                                     */
                                    EditorSetTextItalicsCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.enable != null)
                                            message.enable = Boolean(object.enable);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextItalicsCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand} message EditorSetTextItalicsCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextItalicsCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.enable = false;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.enable != null && message.hasOwnProperty("enable"))
                                            object.enable = message.enable;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextItalicsCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextItalicsCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextItalicsCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextItalicsCommand;
                                })();

                                proto.EditorSetTextWordSpaceCommand = (function () {

                                    /**
                                     * Properties of an EditorSetTextWordSpaceCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetTextWordSpaceCommand
                                     * @property {string|null} [clipId] EditorSetTextWordSpaceCommand clipId
                                     * @property {number|null} [space] EditorSetTextWordSpaceCommand space
                                     */

                                    /**
                                     * Constructs a new EditorSetTextWordSpaceCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetTextWordSpaceCommand.
                                     * @implements IEditorSetTextWordSpaceCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextWordSpaceCommand=} [properties] Properties to set
                                     */
                                    function EditorSetTextWordSpaceCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetTextWordSpaceCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @instance
                                     */
                                    EditorSetTextWordSpaceCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetTextWordSpaceCommand space.
                                     * @member {number} space
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @instance
                                     */
                                    EditorSetTextWordSpaceCommand.prototype.space = 0;

                                    /**
                                     * Creates a new EditorSetTextWordSpaceCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextWordSpaceCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand} EditorSetTextWordSpaceCommand instance
                                     */
                                    EditorSetTextWordSpaceCommand.create = function create(properties) {
                                        return new EditorSetTextWordSpaceCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextWordSpaceCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextWordSpaceCommand} message EditorSetTextWordSpaceCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextWordSpaceCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.space != null && Object.hasOwnProperty.call(message, "space"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.space);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetTextWordSpaceCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetTextWordSpaceCommand} message EditorSetTextWordSpaceCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetTextWordSpaceCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetTextWordSpaceCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand} EditorSetTextWordSpaceCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextWordSpaceCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.space = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetTextWordSpaceCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand} EditorSetTextWordSpaceCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetTextWordSpaceCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetTextWordSpaceCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetTextWordSpaceCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.space != null && message.hasOwnProperty("space"))
                                            if (typeof message.space !== "number")
                                                return "space: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetTextWordSpaceCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand} EditorSetTextWordSpaceCommand
                                     */
                                    EditorSetTextWordSpaceCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.space != null)
                                            message.space = Number(object.space);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetTextWordSpaceCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand} message EditorSetTextWordSpaceCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetTextWordSpaceCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.space = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.space != null && message.hasOwnProperty("space"))
                                            object.space = options.json && !isFinite(message.space) ? String(message.space) : message.space;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetTextWordSpaceCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetTextWordSpaceCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetTextWordSpaceCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetTextWordSpaceCommand;
                                })();

                                proto.EditorSetScaleCommand = (function () {

                                    /**
                                     * Properties of an EditorSetScaleCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetScaleCommand
                                     * @property {string|null} [clipId] EditorSetScaleCommand clipId
                                     * @property {number|null} [scale] EditorSetScaleCommand scale
                                     */

                                    /**
                                     * Constructs a new EditorSetScaleCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetScaleCommand.
                                     * @implements IEditorSetScaleCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetScaleCommand=} [properties] Properties to set
                                     */
                                    function EditorSetScaleCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetScaleCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @instance
                                     */
                                    EditorSetScaleCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetScaleCommand scale.
                                     * @member {number} scale
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @instance
                                     */
                                    EditorSetScaleCommand.prototype.scale = 0;

                                    /**
                                     * Creates a new EditorSetScaleCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetScaleCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand} EditorSetScaleCommand instance
                                     */
                                    EditorSetScaleCommand.create = function create(properties) {
                                        return new EditorSetScaleCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetScaleCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetScaleCommand} message EditorSetScaleCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetScaleCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.scale != null && Object.hasOwnProperty.call(message, "scale"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.scale);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetScaleCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetScaleCommand} message EditorSetScaleCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetScaleCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetScaleCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand} EditorSetScaleCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetScaleCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.scale = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetScaleCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand} EditorSetScaleCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetScaleCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetScaleCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetScaleCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.scale != null && message.hasOwnProperty("scale"))
                                            if (typeof message.scale !== "number")
                                                return "scale: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetScaleCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand} EditorSetScaleCommand
                                     */
                                    EditorSetScaleCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.scale != null)
                                            message.scale = Number(object.scale);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetScaleCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand} message EditorSetScaleCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetScaleCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.scale = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.scale != null && message.hasOwnProperty("scale"))
                                            object.scale = options.json && !isFinite(message.scale) ? String(message.scale) : message.scale;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetScaleCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetScaleCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetScaleCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetScaleCommand;
                                })();

                                proto.EditorSetPositionCommand = (function () {

                                    /**
                                     * Properties of an EditorSetPositionCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetPositionCommand
                                     * @property {string|null} [clipId] EditorSetPositionCommand clipId
                                     * @property {number|null} [x] EditorSetPositionCommand x
                                     * @property {number|null} [y] EditorSetPositionCommand y
                                     */

                                    /**
                                     * Constructs a new EditorSetPositionCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetPositionCommand.
                                     * @implements IEditorSetPositionCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetPositionCommand=} [properties] Properties to set
                                     */
                                    function EditorSetPositionCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetPositionCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @instance
                                     */
                                    EditorSetPositionCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetPositionCommand x.
                                     * @member {number} x
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @instance
                                     */
                                    EditorSetPositionCommand.prototype.x = 0;

                                    /**
                                     * EditorSetPositionCommand y.
                                     * @member {number} y
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @instance
                                     */
                                    EditorSetPositionCommand.prototype.y = 0;

                                    /**
                                     * Creates a new EditorSetPositionCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetPositionCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand} EditorSetPositionCommand instance
                                     */
                                    EditorSetPositionCommand.create = function create(properties) {
                                        return new EditorSetPositionCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetPositionCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetPositionCommand} message EditorSetPositionCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetPositionCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.x != null && Object.hasOwnProperty.call(message, "x"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.x);
                                        if (message.y != null && Object.hasOwnProperty.call(message, "y"))
                                            writer.uint32(/* id 3, wireType 5 =*/29).float(message.y);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetPositionCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetPositionCommand} message EditorSetPositionCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetPositionCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetPositionCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand} EditorSetPositionCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetPositionCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.x = reader.float();
                                                    break;
                                                case 3:
                                                    message.y = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetPositionCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand} EditorSetPositionCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetPositionCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetPositionCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetPositionCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.x != null && message.hasOwnProperty("x"))
                                            if (typeof message.x !== "number")
                                                return "x: number expected";
                                        if (message.y != null && message.hasOwnProperty("y"))
                                            if (typeof message.y !== "number")
                                                return "y: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetPositionCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand} EditorSetPositionCommand
                                     */
                                    EditorSetPositionCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.x != null)
                                            message.x = Number(object.x);
                                        if (object.y != null)
                                            message.y = Number(object.y);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetPositionCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand} message EditorSetPositionCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetPositionCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.x = 0;
                                            object.y = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.x != null && message.hasOwnProperty("x"))
                                            object.x = options.json && !isFinite(message.x) ? String(message.x) : message.x;
                                        if (message.y != null && message.hasOwnProperty("y"))
                                            object.y = options.json && !isFinite(message.y) ? String(message.y) : message.y;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetPositionCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetPositionCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetPositionCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetPositionCommand;
                                })();

                                proto.EditorSetAnchorCommand = (function () {

                                    /**
                                     * Properties of an EditorSetAnchorCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetAnchorCommand
                                     * @property {string|null} [clipId] EditorSetAnchorCommand clipId
                                     * @property {number|null} [x] EditorSetAnchorCommand x
                                     * @property {number|null} [y] EditorSetAnchorCommand y
                                     */

                                    /**
                                     * Constructs a new EditorSetAnchorCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetAnchorCommand.
                                     * @implements IEditorSetAnchorCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetAnchorCommand=} [properties] Properties to set
                                     */
                                    function EditorSetAnchorCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetAnchorCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @instance
                                     */
                                    EditorSetAnchorCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetAnchorCommand x.
                                     * @member {number} x
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @instance
                                     */
                                    EditorSetAnchorCommand.prototype.x = 0;

                                    /**
                                     * EditorSetAnchorCommand y.
                                     * @member {number} y
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @instance
                                     */
                                    EditorSetAnchorCommand.prototype.y = 0;

                                    /**
                                     * Creates a new EditorSetAnchorCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetAnchorCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand} EditorSetAnchorCommand instance
                                     */
                                    EditorSetAnchorCommand.create = function create(properties) {
                                        return new EditorSetAnchorCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetAnchorCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetAnchorCommand} message EditorSetAnchorCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetAnchorCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.x != null && Object.hasOwnProperty.call(message, "x"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.x);
                                        if (message.y != null && Object.hasOwnProperty.call(message, "y"))
                                            writer.uint32(/* id 3, wireType 5 =*/29).float(message.y);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetAnchorCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetAnchorCommand} message EditorSetAnchorCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetAnchorCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetAnchorCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand} EditorSetAnchorCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetAnchorCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.x = reader.float();
                                                    break;
                                                case 3:
                                                    message.y = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetAnchorCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand} EditorSetAnchorCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetAnchorCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetAnchorCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetAnchorCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.x != null && message.hasOwnProperty("x"))
                                            if (typeof message.x !== "number")
                                                return "x: number expected";
                                        if (message.y != null && message.hasOwnProperty("y"))
                                            if (typeof message.y !== "number")
                                                return "y: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetAnchorCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand} EditorSetAnchorCommand
                                     */
                                    EditorSetAnchorCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.x != null)
                                            message.x = Number(object.x);
                                        if (object.y != null)
                                            message.y = Number(object.y);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetAnchorCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand} message EditorSetAnchorCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetAnchorCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.x = 0;
                                            object.y = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.x != null && message.hasOwnProperty("x"))
                                            object.x = options.json && !isFinite(message.x) ? String(message.x) : message.x;
                                        if (message.y != null && message.hasOwnProperty("y"))
                                            object.y = options.json && !isFinite(message.y) ? String(message.y) : message.y;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetAnchorCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetAnchorCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetAnchorCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetAnchorCommand;
                                })();

                                proto.EditorSetRotationCommand = (function () {

                                    /**
                                     * Properties of an EditorSetRotationCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetRotationCommand
                                     * @property {string|null} [clipId] EditorSetRotationCommand clipId
                                     * @property {number|null} [rotation] EditorSetRotationCommand rotation
                                     */

                                    /**
                                     * Constructs a new EditorSetRotationCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetRotationCommand.
                                     * @implements IEditorSetRotationCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetRotationCommand=} [properties] Properties to set
                                     */
                                    function EditorSetRotationCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetRotationCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @instance
                                     */
                                    EditorSetRotationCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetRotationCommand rotation.
                                     * @member {number} rotation
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @instance
                                     */
                                    EditorSetRotationCommand.prototype.rotation = 0;

                                    /**
                                     * Creates a new EditorSetRotationCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetRotationCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand} EditorSetRotationCommand instance
                                     */
                                    EditorSetRotationCommand.create = function create(properties) {
                                        return new EditorSetRotationCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetRotationCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetRotationCommand} message EditorSetRotationCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetRotationCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.rotation != null && Object.hasOwnProperty.call(message, "rotation"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.rotation);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetRotationCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetRotationCommand} message EditorSetRotationCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetRotationCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetRotationCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand} EditorSetRotationCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetRotationCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.rotation = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetRotationCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand} EditorSetRotationCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetRotationCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetRotationCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetRotationCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.rotation != null && message.hasOwnProperty("rotation"))
                                            if (typeof message.rotation !== "number")
                                                return "rotation: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetRotationCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand} EditorSetRotationCommand
                                     */
                                    EditorSetRotationCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.rotation != null)
                                            message.rotation = Number(object.rotation);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetRotationCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand} message EditorSetRotationCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetRotationCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.rotation = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.rotation != null && message.hasOwnProperty("rotation"))
                                            object.rotation = options.json && !isFinite(message.rotation) ? String(message.rotation) : message.rotation;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetRotationCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetRotationCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetRotationCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetRotationCommand;
                                })();

                                proto.EditorSetClipStartTimeUsCommand = (function () {

                                    /**
                                     * Properties of an EditorSetClipStartTimeUsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetClipStartTimeUsCommand
                                     * @property {string|null} [clipId] EditorSetClipStartTimeUsCommand clipId
                                     * @property {number|Long|null} [time] EditorSetClipStartTimeUsCommand time
                                     */

                                    /**
                                     * Constructs a new EditorSetClipStartTimeUsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetClipStartTimeUsCommand.
                                     * @implements IEditorSetClipStartTimeUsCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipStartTimeUsCommand=} [properties] Properties to set
                                     */
                                    function EditorSetClipStartTimeUsCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetClipStartTimeUsCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @instance
                                     */
                                    EditorSetClipStartTimeUsCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetClipStartTimeUsCommand time.
                                     * @member {number|Long} time
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @instance
                                     */
                                    EditorSetClipStartTimeUsCommand.prototype.time = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorSetClipStartTimeUsCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipStartTimeUsCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand} EditorSetClipStartTimeUsCommand instance
                                     */
                                    EditorSetClipStartTimeUsCommand.create = function create(properties) {
                                        return new EditorSetClipStartTimeUsCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipStartTimeUsCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipStartTimeUsCommand} message EditorSetClipStartTimeUsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipStartTimeUsCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.time != null && Object.hasOwnProperty.call(message, "time"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.time);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipStartTimeUsCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipStartTimeUsCommand} message EditorSetClipStartTimeUsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipStartTimeUsCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetClipStartTimeUsCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand} EditorSetClipStartTimeUsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipStartTimeUsCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.time = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetClipStartTimeUsCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand} EditorSetClipStartTimeUsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipStartTimeUsCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetClipStartTimeUsCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetClipStartTimeUsCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.time != null && message.hasOwnProperty("time"))
                                            if (!$util.isInteger(message.time) && !(message.time && $util.isInteger(message.time.low) && $util.isInteger(message.time.high)))
                                                return "time: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetClipStartTimeUsCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand} EditorSetClipStartTimeUsCommand
                                     */
                                    EditorSetClipStartTimeUsCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.time != null)
                                            if ($util.Long)
                                                (message.time = $util.Long.fromValue(object.time)).unsigned = false;
                                            else if (typeof object.time === "string")
                                                message.time = parseInt(object.time, 10);
                                            else if (typeof object.time === "number")
                                                message.time = object.time;
                                            else if (typeof object.time === "object")
                                                message.time = new $util.LongBits(object.time.low >>> 0, object.time.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetClipStartTimeUsCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand} message EditorSetClipStartTimeUsCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetClipStartTimeUsCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.time = options.longs === String ? "0" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.time != null && message.hasOwnProperty("time"))
                                            if (typeof message.time === "number")
                                                object.time = options.longs === String ? String(message.time) : message.time;
                                            else
                                                object.time = options.longs === String ? $util.Long.prototype.toString.call(message.time) : options.longs === Number ? new $util.LongBits(message.time.low >>> 0, message.time.high >>> 0).toNumber() : message.time;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetClipStartTimeUsCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipStartTimeUsCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetClipStartTimeUsCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetClipStartTimeUsCommand;
                                })();

                                proto.EditorSetSourceTimeRangeCommand = (function () {

                                    /**
                                     * Properties of an EditorSetSourceTimeRangeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetSourceTimeRangeCommand
                                     * @property {string|null} [clipId] EditorSetSourceTimeRangeCommand clipId
                                     * @property {number|Long|null} [startTime] EditorSetSourceTimeRangeCommand startTime
                                     * @property {number|Long|null} [endTime] EditorSetSourceTimeRangeCommand endTime
                                     */

                                    /**
                                     * Constructs a new EditorSetSourceTimeRangeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetSourceTimeRangeCommand.
                                     * @implements IEditorSetSourceTimeRangeCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetSourceTimeRangeCommand=} [properties] Properties to set
                                     */
                                    function EditorSetSourceTimeRangeCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetSourceTimeRangeCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @instance
                                     */
                                    EditorSetSourceTimeRangeCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetSourceTimeRangeCommand startTime.
                                     * @member {number|Long} startTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @instance
                                     */
                                    EditorSetSourceTimeRangeCommand.prototype.startTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * EditorSetSourceTimeRangeCommand endTime.
                                     * @member {number|Long} endTime
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @instance
                                     */
                                    EditorSetSourceTimeRangeCommand.prototype.endTime = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new EditorSetSourceTimeRangeCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetSourceTimeRangeCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand} EditorSetSourceTimeRangeCommand instance
                                     */
                                    EditorSetSourceTimeRangeCommand.create = function create(properties) {
                                        return new EditorSetSourceTimeRangeCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetSourceTimeRangeCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetSourceTimeRangeCommand} message EditorSetSourceTimeRangeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetSourceTimeRangeCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.startTime);
                                        if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.endTime);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetSourceTimeRangeCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetSourceTimeRangeCommand} message EditorSetSourceTimeRangeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetSourceTimeRangeCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetSourceTimeRangeCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand} EditorSetSourceTimeRangeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetSourceTimeRangeCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.startTime = reader.int64();
                                                    break;
                                                case 3:
                                                    message.endTime = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetSourceTimeRangeCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand} EditorSetSourceTimeRangeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetSourceTimeRangeCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetSourceTimeRangeCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetSourceTimeRangeCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))
                                                return "startTime: integer|Long expected";
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))
                                                return "endTime: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetSourceTimeRangeCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand} EditorSetSourceTimeRangeCommand
                                     */
                                    EditorSetSourceTimeRangeCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.startTime != null)
                                            if ($util.Long)
                                                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;
                                            else if (typeof object.startTime === "string")
                                                message.startTime = parseInt(object.startTime, 10);
                                            else if (typeof object.startTime === "number")
                                                message.startTime = object.startTime;
                                            else if (typeof object.startTime === "object")
                                                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();
                                        if (object.endTime != null)
                                            if ($util.Long)
                                                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;
                                            else if (typeof object.endTime === "string")
                                                message.endTime = parseInt(object.endTime, 10);
                                            else if (typeof object.endTime === "number")
                                                message.endTime = object.endTime;
                                            else if (typeof object.endTime === "object")
                                                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetSourceTimeRangeCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand} message EditorSetSourceTimeRangeCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetSourceTimeRangeCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.startTime = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.endTime = options.longs === String ? "0" : 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                                            if (typeof message.startTime === "number")
                                                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;
                                            else
                                                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;
                                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                                            if (typeof message.endTime === "number")
                                                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;
                                            else
                                                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetSourceTimeRangeCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetSourceTimeRangeCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetSourceTimeRangeCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetSourceTimeRangeCommand;
                                })();

                                proto.EditorSetClipSpeedCommand = (function () {

                                    /**
                                     * Properties of an EditorSetClipSpeedCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetClipSpeedCommand
                                     * @property {string|null} [clipId] EditorSetClipSpeedCommand clipId
                                     * @property {number|null} [speed] EditorSetClipSpeedCommand speed
                                     */

                                    /**
                                     * Constructs a new EditorSetClipSpeedCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetClipSpeedCommand.
                                     * @implements IEditorSetClipSpeedCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipSpeedCommand=} [properties] Properties to set
                                     */
                                    function EditorSetClipSpeedCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetClipSpeedCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @instance
                                     */
                                    EditorSetClipSpeedCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetClipSpeedCommand speed.
                                     * @member {number} speed
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @instance
                                     */
                                    EditorSetClipSpeedCommand.prototype.speed = 0;

                                    /**
                                     * Creates a new EditorSetClipSpeedCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipSpeedCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand} EditorSetClipSpeedCommand instance
                                     */
                                    EditorSetClipSpeedCommand.create = function create(properties) {
                                        return new EditorSetClipSpeedCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipSpeedCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipSpeedCommand} message EditorSetClipSpeedCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipSpeedCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.speed != null && Object.hasOwnProperty.call(message, "speed"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.speed);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipSpeedCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipSpeedCommand} message EditorSetClipSpeedCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipSpeedCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetClipSpeedCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand} EditorSetClipSpeedCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipSpeedCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.speed = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetClipSpeedCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand} EditorSetClipSpeedCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipSpeedCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetClipSpeedCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetClipSpeedCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.speed != null && message.hasOwnProperty("speed"))
                                            if (typeof message.speed !== "number")
                                                return "speed: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetClipSpeedCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand} EditorSetClipSpeedCommand
                                     */
                                    EditorSetClipSpeedCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.speed != null)
                                            message.speed = Number(object.speed);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetClipSpeedCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand} message EditorSetClipSpeedCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetClipSpeedCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.speed = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.speed != null && message.hasOwnProperty("speed"))
                                            object.speed = options.json && !isFinite(message.speed) ? String(message.speed) : message.speed;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetClipSpeedCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipSpeedCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetClipSpeedCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetClipSpeedCommand;
                                })();

                                proto.EditorSetClipVolumeCommand = (function () {

                                    /**
                                     * Properties of an EditorSetClipVolumeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorSetClipVolumeCommand
                                     * @property {string|null} [clipId] EditorSetClipVolumeCommand clipId
                                     * @property {number|null} [volume] EditorSetClipVolumeCommand volume
                                     */

                                    /**
                                     * Constructs a new EditorSetClipVolumeCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorSetClipVolumeCommand.
                                     * @implements IEditorSetClipVolumeCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipVolumeCommand=} [properties] Properties to set
                                     */
                                    function EditorSetClipVolumeCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorSetClipVolumeCommand clipId.
                                     * @member {string} clipId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @instance
                                     */
                                    EditorSetClipVolumeCommand.prototype.clipId = "";

                                    /**
                                     * EditorSetClipVolumeCommand volume.
                                     * @member {number} volume
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @instance
                                     */
                                    EditorSetClipVolumeCommand.prototype.volume = 0;

                                    /**
                                     * Creates a new EditorSetClipVolumeCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipVolumeCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand} EditorSetClipVolumeCommand instance
                                     */
                                    EditorSetClipVolumeCommand.create = function create(properties) {
                                        return new EditorSetClipVolumeCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipVolumeCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipVolumeCommand} message EditorSetClipVolumeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipVolumeCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.clipId != null && Object.hasOwnProperty.call(message, "clipId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.clipId);
                                        if (message.volume != null && Object.hasOwnProperty.call(message, "volume"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.volume);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorSetClipVolumeCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorSetClipVolumeCommand} message EditorSetClipVolumeCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorSetClipVolumeCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorSetClipVolumeCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand} EditorSetClipVolumeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipVolumeCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.clipId = reader.string();
                                                    break;
                                                case 2:
                                                    message.volume = reader.float();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorSetClipVolumeCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand} EditorSetClipVolumeCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorSetClipVolumeCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorSetClipVolumeCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorSetClipVolumeCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            if (!$util.isString(message.clipId))
                                                return "clipId: string expected";
                                        if (message.volume != null && message.hasOwnProperty("volume"))
                                            if (typeof message.volume !== "number")
                                                return "volume: number expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorSetClipVolumeCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand} EditorSetClipVolumeCommand
                                     */
                                    EditorSetClipVolumeCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand();
                                        if (object.clipId != null)
                                            message.clipId = String(object.clipId);
                                        if (object.volume != null)
                                            message.volume = Number(object.volume);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorSetClipVolumeCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand} message EditorSetClipVolumeCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorSetClipVolumeCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.clipId = "";
                                            object.volume = 0;
                                        }
                                        if (message.clipId != null && message.hasOwnProperty("clipId"))
                                            object.clipId = message.clipId;
                                        if (message.volume != null && message.hasOwnProperty("volume"))
                                            object.volume = options.json && !isFinite(message.volume) ? String(message.volume) : message.volume;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorSetClipVolumeCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorSetClipVolumeCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorSetClipVolumeCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorSetClipVolumeCommand;
                                })();

                                /**
                                 * MarvelTrackType enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MarvelTrackType
                                 * @enum {number}
                                 * @property {number} TrackTypeInvalid=0 TrackTypeInvalid value
                                 * @property {number} TrackTypeMain=1 TrackTypeMain value
                                 * @property {number} TrackTypePip=2 TrackTypePip value
                                 * @property {number} TrackTypeMusic=3 TrackTypeMusic value
                                 * @property {number} TrackTypeBgMusic=4 TrackTypeBgMusic value
                                 * @property {number} TrackTypeSticker=5 TrackTypeSticker value
                                 * @property {number} TrackTypeEffect=6 TrackTypeEffect value
                                 * @property {number} TrackTypeLookup=7 TrackTypeLookup value
                                 * @property {number} TrackTypeCustomize=8 TrackTypeCustomize value
                                 * @property {number} TrackTypeText=9 TrackTypeText value
                                 * @property {number} TrackTypeGroup=10 TrackTypeGroup value
                                 * @property {number} TrackTypeAll=11 TrackTypeAll value
                                 */
                                proto.MarvelTrackType = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "TrackTypeInvalid"] = 0;
                                    values[valuesById[1] = "TrackTypeMain"] = 1;
                                    values[valuesById[2] = "TrackTypePip"] = 2;
                                    values[valuesById[3] = "TrackTypeMusic"] = 3;
                                    values[valuesById[4] = "TrackTypeBgMusic"] = 4;
                                    values[valuesById[5] = "TrackTypeSticker"] = 5;
                                    values[valuesById[6] = "TrackTypeEffect"] = 6;
                                    values[valuesById[7] = "TrackTypeLookup"] = 7;
                                    values[valuesById[8] = "TrackTypeCustomize"] = 8;
                                    values[valuesById[9] = "TrackTypeText"] = 9;
                                    values[valuesById[10] = "TrackTypeGroup"] = 10;
                                    values[valuesById[11] = "TrackTypeAll"] = 11;
                                    return values;
                                })();

                                proto.EditorGetTrackIdListCommand = (function () {

                                    /**
                                     * Properties of an EditorGetTrackIdListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetTrackIdListCommand
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MarvelTrackType|null} [trackType] EditorGetTrackIdListCommand trackType
                                     */

                                    /**
                                     * Constructs a new EditorGetTrackIdListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetTrackIdListCommand.
                                     * @implements IEditorGetTrackIdListCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommand=} [properties] Properties to set
                                     */
                                    function EditorGetTrackIdListCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetTrackIdListCommand trackType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MarvelTrackType} trackType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @instance
                                     */
                                    EditorGetTrackIdListCommand.prototype.trackType = 0;

                                    /**
                                     * Creates a new EditorGetTrackIdListCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand} EditorGetTrackIdListCommand instance
                                     */
                                    EditorGetTrackIdListCommand.create = function create(properties) {
                                        return new EditorGetTrackIdListCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetTrackIdListCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommand} message EditorGetTrackIdListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetTrackIdListCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.trackType != null && Object.hasOwnProperty.call(message, "trackType"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.trackType);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetTrackIdListCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommand} message EditorGetTrackIdListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetTrackIdListCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetTrackIdListCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand} EditorGetTrackIdListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetTrackIdListCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.trackType = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetTrackIdListCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand} EditorGetTrackIdListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetTrackIdListCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetTrackIdListCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetTrackIdListCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.trackType != null && message.hasOwnProperty("trackType"))
                                            switch (message.trackType) {
                                                default:
                                                    return "trackType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                case 5:
                                                case 6:
                                                case 7:
                                                case 8:
                                                case 9:
                                                case 10:
                                                case 11:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetTrackIdListCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand} EditorGetTrackIdListCommand
                                     */
                                    EditorGetTrackIdListCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand();
                                        switch (object.trackType) {
                                            case "TrackTypeInvalid":
                                            case 0:
                                                message.trackType = 0;
                                                break;
                                            case "TrackTypeMain":
                                            case 1:
                                                message.trackType = 1;
                                                break;
                                            case "TrackTypePip":
                                            case 2:
                                                message.trackType = 2;
                                                break;
                                            case "TrackTypeMusic":
                                            case 3:
                                                message.trackType = 3;
                                                break;
                                            case "TrackTypeBgMusic":
                                            case 4:
                                                message.trackType = 4;
                                                break;
                                            case "TrackTypeSticker":
                                            case 5:
                                                message.trackType = 5;
                                                break;
                                            case "TrackTypeEffect":
                                            case 6:
                                                message.trackType = 6;
                                                break;
                                            case "TrackTypeLookup":
                                            case 7:
                                                message.trackType = 7;
                                                break;
                                            case "TrackTypeCustomize":
                                            case 8:
                                                message.trackType = 8;
                                                break;
                                            case "TrackTypeText":
                                            case 9:
                                                message.trackType = 9;
                                                break;
                                            case "TrackTypeGroup":
                                            case 10:
                                                message.trackType = 10;
                                                break;
                                            case "TrackTypeAll":
                                            case 11:
                                                message.trackType = 11;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetTrackIdListCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand} message EditorGetTrackIdListCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetTrackIdListCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.trackType = options.enums === String ? "TrackTypeInvalid" : 0;
                                        if (message.trackType != null && message.hasOwnProperty("trackType"))
                                            object.trackType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.MarvelTrackType[message.trackType] : message.trackType;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetTrackIdListCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetTrackIdListCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetTrackIdListCommand;
                                })();

                                proto.EditorGetTrackIdListCommandResult = (function () {

                                    /**
                                     * Properties of an EditorGetTrackIdListCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetTrackIdListCommandResult
                                     * @property {Array.<string>|null} [values] EditorGetTrackIdListCommandResult values
                                     */

                                    /**
                                     * Constructs a new EditorGetTrackIdListCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetTrackIdListCommandResult.
                                     * @implements IEditorGetTrackIdListCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommandResult=} [properties] Properties to set
                                     */
                                    function EditorGetTrackIdListCommandResult(properties) {
                                        this.values = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetTrackIdListCommandResult values.
                                     * @member {Array.<string>} values
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @instance
                                     */
                                    EditorGetTrackIdListCommandResult.prototype.values = $util.emptyArray;

                                    /**
                                     * Creates a new EditorGetTrackIdListCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult} EditorGetTrackIdListCommandResult instance
                                     */
                                    EditorGetTrackIdListCommandResult.create = function create(properties) {
                                        return new EditorGetTrackIdListCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetTrackIdListCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommandResult} message EditorGetTrackIdListCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetTrackIdListCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.values != null && message.values.length)
                                            for (var i = 0; i < message.values.length; ++i)
                                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetTrackIdListCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetTrackIdListCommandResult} message EditorGetTrackIdListCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetTrackIdListCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetTrackIdListCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult} EditorGetTrackIdListCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetTrackIdListCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    if (!(message.values && message.values.length))
                                                        message.values = [];
                                                    message.values.push(reader.string());
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetTrackIdListCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult} EditorGetTrackIdListCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetTrackIdListCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetTrackIdListCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetTrackIdListCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.values != null && message.hasOwnProperty("values")) {
                                            if (!Array.isArray(message.values))
                                                return "values: array expected";
                                            for (var i = 0; i < message.values.length; ++i)
                                                if (!$util.isString(message.values[i]))
                                                    return "values: string[] expected";
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetTrackIdListCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult} EditorGetTrackIdListCommandResult
                                     */
                                    EditorGetTrackIdListCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult();
                                        if (object.values) {
                                            if (!Array.isArray(object.values))
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult.values: array expected");
                                            message.values = [];
                                            for (var i = 0; i < object.values.length; ++i)
                                                message.values[i] = String(object.values[i]);
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetTrackIdListCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult} message EditorGetTrackIdListCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetTrackIdListCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.values = [];
                                        if (message.values && message.values.length) {
                                            object.values = [];
                                            for (var j = 0; j < message.values.length; ++j)
                                                object.values[j] = message.values[j];
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetTrackIdListCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetTrackIdListCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetTrackIdListCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetTrackIdListCommandResult;
                                })();

                                proto.EditorGetClipIdListCommand = (function () {

                                    /**
                                     * Properties of an EditorGetClipIdListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetClipIdListCommand
                                     * @property {string|null} [trackId] EditorGetClipIdListCommand trackId
                                     */

                                    /**
                                     * Constructs a new EditorGetClipIdListCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetClipIdListCommand.
                                     * @implements IEditorGetClipIdListCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommand=} [properties] Properties to set
                                     */
                                    function EditorGetClipIdListCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetClipIdListCommand trackId.
                                     * @member {string} trackId
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @instance
                                     */
                                    EditorGetClipIdListCommand.prototype.trackId = "";

                                    /**
                                     * Creates a new EditorGetClipIdListCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand} EditorGetClipIdListCommand instance
                                     */
                                    EditorGetClipIdListCommand.create = function create(properties) {
                                        return new EditorGetClipIdListCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipIdListCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommand} message EditorGetClipIdListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipIdListCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.trackId != null && Object.hasOwnProperty.call(message, "trackId"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackId);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipIdListCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommand} message EditorGetClipIdListCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipIdListCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetClipIdListCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand} EditorGetClipIdListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipIdListCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.trackId = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetClipIdListCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand} EditorGetClipIdListCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipIdListCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetClipIdListCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetClipIdListCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            if (!$util.isString(message.trackId))
                                                return "trackId: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetClipIdListCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand} EditorGetClipIdListCommand
                                     */
                                    EditorGetClipIdListCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand();
                                        if (object.trackId != null)
                                            message.trackId = String(object.trackId);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetClipIdListCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand} message EditorGetClipIdListCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetClipIdListCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.trackId = "";
                                        if (message.trackId != null && message.hasOwnProperty("trackId"))
                                            object.trackId = message.trackId;
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetClipIdListCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetClipIdListCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetClipIdListCommand;
                                })();

                                proto.EditorGetClipIdListCommandResult = (function () {

                                    /**
                                     * Properties of an EditorGetClipIdListCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IEditorGetClipIdListCommandResult
                                     * @property {Array.<string>|null} [values] EditorGetClipIdListCommandResult values
                                     */

                                    /**
                                     * Constructs a new EditorGetClipIdListCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an EditorGetClipIdListCommandResult.
                                     * @implements IEditorGetClipIdListCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommandResult=} [properties] Properties to set
                                     */
                                    function EditorGetClipIdListCommandResult(properties) {
                                        this.values = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * EditorGetClipIdListCommandResult values.
                                     * @member {Array.<string>} values
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @instance
                                     */
                                    EditorGetClipIdListCommandResult.prototype.values = $util.emptyArray;

                                    /**
                                     * Creates a new EditorGetClipIdListCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult} EditorGetClipIdListCommandResult instance
                                     */
                                    EditorGetClipIdListCommandResult.create = function create(properties) {
                                        return new EditorGetClipIdListCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipIdListCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommandResult} message EditorGetClipIdListCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipIdListCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.values != null && message.values.length)
                                            for (var i = 0; i < message.values.length; ++i)
                                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified EditorGetClipIdListCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IEditorGetClipIdListCommandResult} message EditorGetClipIdListCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    EditorGetClipIdListCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an EditorGetClipIdListCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult} EditorGetClipIdListCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipIdListCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    if (!(message.values && message.values.length))
                                                        message.values = [];
                                                    message.values.push(reader.string());
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an EditorGetClipIdListCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult} EditorGetClipIdListCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    EditorGetClipIdListCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an EditorGetClipIdListCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    EditorGetClipIdListCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.values != null && message.hasOwnProperty("values")) {
                                            if (!Array.isArray(message.values))
                                                return "values: array expected";
                                            for (var i = 0; i < message.values.length; ++i)
                                                if (!$util.isString(message.values[i]))
                                                    return "values: string[] expected";
                                        }
                                        return null;
                                    };

                                    /**
                                     * Creates an EditorGetClipIdListCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult} EditorGetClipIdListCommandResult
                                     */
                                    EditorGetClipIdListCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult();
                                        if (object.values) {
                                            if (!Array.isArray(object.values))
                                                throw TypeError(".com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult.values: array expected");
                                            message.values = [];
                                            for (var i = 0; i < object.values.length; ++i)
                                                message.values[i] = String(object.values[i]);
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an EditorGetClipIdListCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult} message EditorGetClipIdListCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    EditorGetClipIdListCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.values = [];
                                        if (message.values && message.values.length) {
                                            object.values = [];
                                            for (var j = 0; j < message.values.length; ++j)
                                                object.values[j] = message.values[j];
                                        }
                                        return object;
                                    };

                                    /**
                                     * Converts this EditorGetClipIdListCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.EditorGetClipIdListCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    EditorGetClipIdListCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return EditorGetClipIdListCommandResult;
                                })();

                                proto.ViewerSetPropertiesCommand = (function () {

                                    /**
                                     * Properties of a ViewerSetPropertiesCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerSetPropertiesCommand
                                     * @property {number|null} [width] ViewerSetPropertiesCommand width
                                     * @property {number|null} [height] ViewerSetPropertiesCommand height
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType|null} [scaleType] ViewerSetPropertiesCommand scaleType
                                     */

                                    /**
                                     * Constructs a new ViewerSetPropertiesCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Viewer *
                                     * @implements IViewerSetPropertiesCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSetPropertiesCommand=} [properties] Properties to set
                                     */
                                    function ViewerSetPropertiesCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ViewerSetPropertiesCommand width.
                                     * @member {number} width
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @instance
                                     */
                                    ViewerSetPropertiesCommand.prototype.width = 0;

                                    /**
                                     * ViewerSetPropertiesCommand height.
                                     * @member {number} height
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @instance
                                     */
                                    ViewerSetPropertiesCommand.prototype.height = 0;

                                    /**
                                     * ViewerSetPropertiesCommand scaleType.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType} scaleType
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @instance
                                     */
                                    ViewerSetPropertiesCommand.prototype.scaleType = 0;

                                    /**
                                     * Creates a new ViewerSetPropertiesCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSetPropertiesCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand} ViewerSetPropertiesCommand instance
                                     */
                                    ViewerSetPropertiesCommand.create = function create(properties) {
                                        return new ViewerSetPropertiesCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerSetPropertiesCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSetPropertiesCommand} message ViewerSetPropertiesCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerSetPropertiesCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.width);
                                        if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.height);
                                        if (message.scaleType != null && Object.hasOwnProperty.call(message, "scaleType"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.scaleType);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerSetPropertiesCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSetPropertiesCommand} message ViewerSetPropertiesCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerSetPropertiesCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerSetPropertiesCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand} ViewerSetPropertiesCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerSetPropertiesCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.width = reader.int32();
                                                    break;
                                                case 2:
                                                    message.height = reader.int32();
                                                    break;
                                                case 3:
                                                    message.scaleType = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerSetPropertiesCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand} ViewerSetPropertiesCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerSetPropertiesCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerSetPropertiesCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerSetPropertiesCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            if (!$util.isInteger(message.width))
                                                return "width: integer expected";
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            if (!$util.isInteger(message.height))
                                                return "height: integer expected";
                                        if (message.scaleType != null && message.hasOwnProperty("scaleType"))
                                            switch (message.scaleType) {
                                                default:
                                                    return "scaleType: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                case 5:
                                                case 6:
                                                case 7:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerSetPropertiesCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand} ViewerSetPropertiesCommand
                                     */
                                    ViewerSetPropertiesCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand();
                                        if (object.width != null)
                                            message.width = object.width | 0;
                                        if (object.height != null)
                                            message.height = object.height | 0;
                                        switch (object.scaleType) {
                                            case "Invalid":
                                            case 0:
                                                message.scaleType = 0;
                                                break;
                                            case "FixXY":
                                            case 1:
                                                message.scaleType = 1;
                                                break;
                                            case "CenterInside":
                                            case 2:
                                                message.scaleType = 2;
                                                break;
                                            case "CenterCrop":
                                            case 3:
                                                message.scaleType = 3;
                                                break;
                                            case "StartCrop":
                                            case 4:
                                                message.scaleType = 4;
                                                break;
                                            case "EndCrop":
                                            case 5:
                                                message.scaleType = 5;
                                                break;
                                            case "FitStart":
                                            case 6:
                                                message.scaleType = 6;
                                                break;
                                            case "FitEnd":
                                            case 7:
                                                message.scaleType = 7;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a ViewerSetPropertiesCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand} message ViewerSetPropertiesCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerSetPropertiesCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.width = 0;
                                            object.height = 0;
                                            object.scaleType = options.enums === String ? "Invalid" : 0;
                                        }
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            object.width = message.width;
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            object.height = message.height;
                                        if (message.scaleType != null && message.hasOwnProperty("scaleType"))
                                            object.scaleType = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType[message.scaleType] : message.scaleType;
                                        return object;
                                    };

                                    /**
                                     * Converts this ViewerSetPropertiesCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSetPropertiesCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerSetPropertiesCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerSetPropertiesCommand;
                                })();

                                proto.ViewerPrepareCommand = (function () {

                                    /**
                                     * Properties of a ViewerPrepareCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerPrepareCommand
                                     */

                                    /**
                                     * Constructs a new ViewerPrepareCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ViewerPrepareCommand.
                                     * @implements IViewerPrepareCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPrepareCommand=} [properties] Properties to set
                                     */
                                    function ViewerPrepareCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ViewerPrepareCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPrepareCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand} ViewerPrepareCommand instance
                                     */
                                    ViewerPrepareCommand.create = function create(properties) {
                                        return new ViewerPrepareCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerPrepareCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPrepareCommand} message ViewerPrepareCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerPrepareCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerPrepareCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPrepareCommand} message ViewerPrepareCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerPrepareCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerPrepareCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand} ViewerPrepareCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerPrepareCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerPrepareCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand} ViewerPrepareCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerPrepareCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerPrepareCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerPrepareCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerPrepareCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand} ViewerPrepareCommand
                                     */
                                    ViewerPrepareCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand();
                                    };

                                    /**
                                     * Creates a plain object from a ViewerPrepareCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand} message ViewerPrepareCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerPrepareCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ViewerPrepareCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPrepareCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerPrepareCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerPrepareCommand;
                                })();

                                proto.ViewerStartCommand = (function () {

                                    /**
                                     * Properties of a ViewerStartCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerStartCommand
                                     */

                                    /**
                                     * Constructs a new ViewerStartCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ViewerStartCommand.
                                     * @implements IViewerStartCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStartCommand=} [properties] Properties to set
                                     */
                                    function ViewerStartCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ViewerStartCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStartCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand} ViewerStartCommand instance
                                     */
                                    ViewerStartCommand.create = function create(properties) {
                                        return new ViewerStartCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerStartCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStartCommand} message ViewerStartCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerStartCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerStartCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStartCommand} message ViewerStartCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerStartCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerStartCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand} ViewerStartCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerStartCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerStartCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand} ViewerStartCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerStartCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerStartCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerStartCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerStartCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand} ViewerStartCommand
                                     */
                                    ViewerStartCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand();
                                    };

                                    /**
                                     * Creates a plain object from a ViewerStartCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand} message ViewerStartCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerStartCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ViewerStartCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStartCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerStartCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerStartCommand;
                                })();

                                proto.ViewerPauseCommand = (function () {

                                    /**
                                     * Properties of a ViewerPauseCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerPauseCommand
                                     */

                                    /**
                                     * Constructs a new ViewerPauseCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ViewerPauseCommand.
                                     * @implements IViewerPauseCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPauseCommand=} [properties] Properties to set
                                     */
                                    function ViewerPauseCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ViewerPauseCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPauseCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand} ViewerPauseCommand instance
                                     */
                                    ViewerPauseCommand.create = function create(properties) {
                                        return new ViewerPauseCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerPauseCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPauseCommand} message ViewerPauseCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerPauseCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerPauseCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerPauseCommand} message ViewerPauseCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerPauseCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerPauseCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand} ViewerPauseCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerPauseCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerPauseCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand} ViewerPauseCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerPauseCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerPauseCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerPauseCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerPauseCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand} ViewerPauseCommand
                                     */
                                    ViewerPauseCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand();
                                    };

                                    /**
                                     * Creates a plain object from a ViewerPauseCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand} message ViewerPauseCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerPauseCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ViewerPauseCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerPauseCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerPauseCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerPauseCommand;
                                })();

                                proto.ViewerStopCommand = (function () {

                                    /**
                                     * Properties of a ViewerStopCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerStopCommand
                                     */

                                    /**
                                     * Constructs a new ViewerStopCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ViewerStopCommand.
                                     * @implements IViewerStopCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStopCommand=} [properties] Properties to set
                                     */
                                    function ViewerStopCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ViewerStopCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStopCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand} ViewerStopCommand instance
                                     */
                                    ViewerStopCommand.create = function create(properties) {
                                        return new ViewerStopCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerStopCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStopCommand} message ViewerStopCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerStopCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerStopCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerStopCommand} message ViewerStopCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerStopCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerStopCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand} ViewerStopCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerStopCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerStopCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand} ViewerStopCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerStopCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerStopCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerStopCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerStopCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand} ViewerStopCommand
                                     */
                                    ViewerStopCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand();
                                    };

                                    /**
                                     * Creates a plain object from a ViewerStopCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand} message ViewerStopCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerStopCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ViewerStopCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerStopCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerStopCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerStopCommand;
                                })();

                                /**
                                 * SeekFlag enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SeekFlag
                                 * @enum {number}
                                 * @property {number} SeekFlagInvalid=0 SeekFlagInvalid value
                                 * @property {number} SeekGoing=1 SeekGoing value
                                 * @property {number} SeekStart=2 SeekStart value
                                 * @property {number} SeekEnd=3 SeekEnd value
                                 */
                                proto.SeekFlag = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "SeekFlagInvalid"] = 0;
                                    values[valuesById[1] = "SeekGoing"] = 1;
                                    values[valuesById[2] = "SeekStart"] = 2;
                                    values[valuesById[3] = "SeekEnd"] = 3;
                                    return values;
                                })();

                                proto.ViewerSeekToCommand = (function () {

                                    /**
                                     * Properties of a ViewerSeekToCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerSeekToCommand
                                     * @property {number|Long|null} [time] ViewerSeekToCommand time
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SeekFlag|null} [flag] ViewerSeekToCommand flag
                                     */

                                    /**
                                     * Constructs a new ViewerSeekToCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ViewerSeekToCommand.
                                     * @implements IViewerSeekToCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSeekToCommand=} [properties] Properties to set
                                     */
                                    function ViewerSeekToCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ViewerSeekToCommand time.
                                     * @member {number|Long} time
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @instance
                                     */
                                    ViewerSeekToCommand.prototype.time = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * ViewerSeekToCommand flag.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SeekFlag} flag
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @instance
                                     */
                                    ViewerSeekToCommand.prototype.flag = 0;

                                    /**
                                     * Creates a new ViewerSeekToCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSeekToCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand} ViewerSeekToCommand instance
                                     */
                                    ViewerSeekToCommand.create = function create(properties) {
                                        return new ViewerSeekToCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerSeekToCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSeekToCommand} message ViewerSeekToCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerSeekToCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.time != null && Object.hasOwnProperty.call(message, "time"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.time);
                                        if (message.flag != null && Object.hasOwnProperty.call(message, "flag"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.flag);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerSeekToCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerSeekToCommand} message ViewerSeekToCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerSeekToCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerSeekToCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand} ViewerSeekToCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerSeekToCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.time = reader.int64();
                                                    break;
                                                case 2:
                                                    message.flag = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerSeekToCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand} ViewerSeekToCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerSeekToCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerSeekToCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerSeekToCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.time != null && message.hasOwnProperty("time"))
                                            if (!$util.isInteger(message.time) && !(message.time && $util.isInteger(message.time.low) && $util.isInteger(message.time.high)))
                                                return "time: integer|Long expected";
                                        if (message.flag != null && message.hasOwnProperty("flag"))
                                            switch (message.flag) {
                                                default:
                                                    return "flag: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerSeekToCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand} ViewerSeekToCommand
                                     */
                                    ViewerSeekToCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand();
                                        if (object.time != null)
                                            if ($util.Long)
                                                (message.time = $util.Long.fromValue(object.time)).unsigned = false;
                                            else if (typeof object.time === "string")
                                                message.time = parseInt(object.time, 10);
                                            else if (typeof object.time === "number")
                                                message.time = object.time;
                                            else if (typeof object.time === "object")
                                                message.time = new $util.LongBits(object.time.low >>> 0, object.time.high >>> 0).toNumber();
                                        switch (object.flag) {
                                            case "SeekFlagInvalid":
                                            case 0:
                                                message.flag = 0;
                                                break;
                                            case "SeekGoing":
                                            case 1:
                                                message.flag = 1;
                                                break;
                                            case "SeekStart":
                                            case 2:
                                                message.flag = 2;
                                                break;
                                            case "SeekEnd":
                                            case 3:
                                                message.flag = 3;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a ViewerSeekToCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand} message ViewerSeekToCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerSeekToCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.time = options.longs === String ? "0" : 0;
                                            object.flag = options.enums === String ? "SeekFlagInvalid" : 0;
                                        }
                                        if (message.time != null && message.hasOwnProperty("time"))
                                            if (typeof message.time === "number")
                                                object.time = options.longs === String ? String(message.time) : message.time;
                                            else
                                                object.time = options.longs === String ? $util.Long.prototype.toString.call(message.time) : options.longs === Number ? new $util.LongBits(message.time.low >>> 0, message.time.high >>> 0).toNumber() : message.time;
                                        if (message.flag != null && message.hasOwnProperty("flag"))
                                            object.flag = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.SeekFlag[message.flag] : message.flag;
                                        return object;
                                    };

                                    /**
                                     * Converts this ViewerSeekToCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerSeekToCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerSeekToCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerSeekToCommand;
                                })();

                                proto.ViewerGetStateCommand = (function () {

                                    /**
                                     * Properties of a ViewerGetStateCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerGetStateCommand
                                     */

                                    /**
                                     * Constructs a new ViewerGetStateCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ViewerGetStateCommand.
                                     * @implements IViewerGetStateCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommand=} [properties] Properties to set
                                     */
                                    function ViewerGetStateCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ViewerGetStateCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand} ViewerGetStateCommand instance
                                     */
                                    ViewerGetStateCommand.create = function create(properties) {
                                        return new ViewerGetStateCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerGetStateCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommand} message ViewerGetStateCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerGetStateCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerGetStateCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommand} message ViewerGetStateCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerGetStateCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerGetStateCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand} ViewerGetStateCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerGetStateCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerGetStateCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand} ViewerGetStateCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerGetStateCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerGetStateCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerGetStateCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerGetStateCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand} ViewerGetStateCommand
                                     */
                                    ViewerGetStateCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand();
                                    };

                                    /**
                                     * Creates a plain object from a ViewerGetStateCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand} message ViewerGetStateCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerGetStateCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ViewerGetStateCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerGetStateCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerGetStateCommand;
                                })();

                                /**
                                 * ViewerState enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerState
                                 * @enum {number}
                                 * @property {number} ViewInvalid=0 ViewInvalid value
                                 * @property {number} ViewerUnInit=1 ViewerUnInit value
                                 * @property {number} ViewerPrepared=2 ViewerPrepared value
                                 * @property {number} ViewerRunning=3 ViewerRunning value
                                 * @property {number} ViewerPaused=4 ViewerPaused value
                                 * @property {number} ViewerStopped=5 ViewerStopped value
                                 * @property {number} ViewerReleased=6 ViewerReleased value
                                 */
                                proto.ViewerState = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "ViewInvalid"] = 0;
                                    values[valuesById[1] = "ViewerUnInit"] = 1;
                                    values[valuesById[2] = "ViewerPrepared"] = 2;
                                    values[valuesById[3] = "ViewerRunning"] = 3;
                                    values[valuesById[4] = "ViewerPaused"] = 4;
                                    values[valuesById[5] = "ViewerStopped"] = 5;
                                    values[valuesById[6] = "ViewerReleased"] = 6;
                                    return values;
                                })();

                                proto.ViewerGetStateCommandResult = (function () {

                                    /**
                                     * Properties of a ViewerGetStateCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerGetStateCommandResult
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerState|null} [viewerState] ViewerGetStateCommandResult viewerState
                                     * @property {number|Long|null} [currentOffset] ViewerGetStateCommandResult currentOffset
                                     */

                                    /**
                                     * Constructs a new ViewerGetStateCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ViewerGetStateCommandResult.
                                     * @implements IViewerGetStateCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommandResult=} [properties] Properties to set
                                     */
                                    function ViewerGetStateCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ViewerGetStateCommandResult viewerState.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerState} viewerState
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @instance
                                     */
                                    ViewerGetStateCommandResult.prototype.viewerState = 0;

                                    /**
                                     * ViewerGetStateCommandResult currentOffset.
                                     * @member {number|Long} currentOffset
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @instance
                                     */
                                    ViewerGetStateCommandResult.prototype.currentOffset = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new ViewerGetStateCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult} ViewerGetStateCommandResult instance
                                     */
                                    ViewerGetStateCommandResult.create = function create(properties) {
                                        return new ViewerGetStateCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerGetStateCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommandResult} message ViewerGetStateCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerGetStateCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.viewerState != null && Object.hasOwnProperty.call(message, "viewerState"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.viewerState);
                                        if (message.currentOffset != null && Object.hasOwnProperty.call(message, "currentOffset"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.currentOffset);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerGetStateCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetStateCommandResult} message ViewerGetStateCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerGetStateCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerGetStateCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult} ViewerGetStateCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerGetStateCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.viewerState = reader.int32();
                                                    break;
                                                case 2:
                                                    message.currentOffset = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerGetStateCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult} ViewerGetStateCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerGetStateCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerGetStateCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerGetStateCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.viewerState != null && message.hasOwnProperty("viewerState"))
                                            switch (message.viewerState) {
                                                default:
                                                    return "viewerState: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                case 5:
                                                case 6:
                                                    break;
                                            }
                                        if (message.currentOffset != null && message.hasOwnProperty("currentOffset"))
                                            if (!$util.isInteger(message.currentOffset) && !(message.currentOffset && $util.isInteger(message.currentOffset.low) && $util.isInteger(message.currentOffset.high)))
                                                return "currentOffset: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerGetStateCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult} ViewerGetStateCommandResult
                                     */
                                    ViewerGetStateCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult();
                                        switch (object.viewerState) {
                                            case "ViewInvalid":
                                            case 0:
                                                message.viewerState = 0;
                                                break;
                                            case "ViewerUnInit":
                                            case 1:
                                                message.viewerState = 1;
                                                break;
                                            case "ViewerPrepared":
                                            case 2:
                                                message.viewerState = 2;
                                                break;
                                            case "ViewerRunning":
                                            case 3:
                                                message.viewerState = 3;
                                                break;
                                            case "ViewerPaused":
                                            case 4:
                                                message.viewerState = 4;
                                                break;
                                            case "ViewerStopped":
                                            case 5:
                                                message.viewerState = 5;
                                                break;
                                            case "ViewerReleased":
                                            case 6:
                                                message.viewerState = 6;
                                                break;
                                        }
                                        if (object.currentOffset != null)
                                            if ($util.Long)
                                                (message.currentOffset = $util.Long.fromValue(object.currentOffset)).unsigned = false;
                                            else if (typeof object.currentOffset === "string")
                                                message.currentOffset = parseInt(object.currentOffset, 10);
                                            else if (typeof object.currentOffset === "number")
                                                message.currentOffset = object.currentOffset;
                                            else if (typeof object.currentOffset === "object")
                                                message.currentOffset = new $util.LongBits(object.currentOffset.low >>> 0, object.currentOffset.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a ViewerGetStateCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult} message ViewerGetStateCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerGetStateCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.viewerState = options.enums === String ? "ViewInvalid" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.currentOffset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.currentOffset = options.longs === String ? "0" : 0;
                                        }
                                        if (message.viewerState != null && message.hasOwnProperty("viewerState"))
                                            object.viewerState = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerState[message.viewerState] : message.viewerState;
                                        if (message.currentOffset != null && message.hasOwnProperty("currentOffset"))
                                            if (typeof message.currentOffset === "number")
                                                object.currentOffset = options.longs === String ? String(message.currentOffset) : message.currentOffset;
                                            else
                                                object.currentOffset = options.longs === String ? $util.Long.prototype.toString.call(message.currentOffset) : options.longs === Number ? new $util.LongBits(message.currentOffset.low >>> 0, message.currentOffset.high >>> 0).toNumber() : message.currentOffset;
                                        return object;
                                    };

                                    /**
                                     * Converts this ViewerGetStateCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetStateCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerGetStateCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerGetStateCommandResult;
                                })();

                                proto.ViewerGetDurationUsCommand = (function () {

                                    /**
                                     * Properties of a ViewerGetDurationUsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerGetDurationUsCommand
                                     */

                                    /**
                                     * Constructs a new ViewerGetDurationUsCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ViewerGetDurationUsCommand.
                                     * @implements IViewerGetDurationUsCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommand=} [properties] Properties to set
                                     */
                                    function ViewerGetDurationUsCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ViewerGetDurationUsCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand} ViewerGetDurationUsCommand instance
                                     */
                                    ViewerGetDurationUsCommand.create = function create(properties) {
                                        return new ViewerGetDurationUsCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerGetDurationUsCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommand} message ViewerGetDurationUsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerGetDurationUsCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerGetDurationUsCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommand} message ViewerGetDurationUsCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerGetDurationUsCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerGetDurationUsCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand} ViewerGetDurationUsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerGetDurationUsCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerGetDurationUsCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand} ViewerGetDurationUsCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerGetDurationUsCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerGetDurationUsCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerGetDurationUsCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerGetDurationUsCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand} ViewerGetDurationUsCommand
                                     */
                                    ViewerGetDurationUsCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand();
                                    };

                                    /**
                                     * Creates a plain object from a ViewerGetDurationUsCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand} message ViewerGetDurationUsCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerGetDurationUsCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ViewerGetDurationUsCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerGetDurationUsCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerGetDurationUsCommand;
                                })();

                                proto.ViewerGetDurationUsCommandResult = (function () {

                                    /**
                                     * Properties of a ViewerGetDurationUsCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IViewerGetDurationUsCommandResult
                                     * @property {number|Long|null} [value] ViewerGetDurationUsCommandResult value
                                     */

                                    /**
                                     * Constructs a new ViewerGetDurationUsCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents a ViewerGetDurationUsCommandResult.
                                     * @implements IViewerGetDurationUsCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommandResult=} [properties] Properties to set
                                     */
                                    function ViewerGetDurationUsCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ViewerGetDurationUsCommandResult value.
                                     * @member {number|Long} value
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @instance
                                     */
                                    ViewerGetDurationUsCommandResult.prototype.value = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * Creates a new ViewerGetDurationUsCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult} ViewerGetDurationUsCommandResult instance
                                     */
                                    ViewerGetDurationUsCommandResult.create = function create(properties) {
                                        return new ViewerGetDurationUsCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified ViewerGetDurationUsCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommandResult} message ViewerGetDurationUsCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerGetDurationUsCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ViewerGetDurationUsCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IViewerGetDurationUsCommandResult} message ViewerGetDurationUsCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ViewerGetDurationUsCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes a ViewerGetDurationUsCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult} ViewerGetDurationUsCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerGetDurationUsCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.value = reader.int64();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes a ViewerGetDurationUsCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult} ViewerGetDurationUsCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ViewerGetDurationUsCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies a ViewerGetDurationUsCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ViewerGetDurationUsCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.value != null && message.hasOwnProperty("value"))
                                            if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                                                return "value: integer|Long expected";
                                        return null;
                                    };

                                    /**
                                     * Creates a ViewerGetDurationUsCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult} ViewerGetDurationUsCommandResult
                                     */
                                    ViewerGetDurationUsCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult();
                                        if (object.value != null)
                                            if ($util.Long)
                                                (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                                            else if (typeof object.value === "string")
                                                message.value = parseInt(object.value, 10);
                                            else if (typeof object.value === "number")
                                                message.value = object.value;
                                            else if (typeof object.value === "object")
                                                message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from a ViewerGetDurationUsCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult} message ViewerGetDurationUsCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ViewerGetDurationUsCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.value = options.longs === String ? "0" : 0;
                                        if (message.value != null && message.hasOwnProperty("value"))
                                            if (typeof message.value === "number")
                                                object.value = options.longs === String ? String(message.value) : message.value;
                                            else
                                                object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                                        return object;
                                    };

                                    /**
                                     * Converts this ViewerGetDurationUsCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ViewerGetDurationUsCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ViewerGetDurationUsCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ViewerGetDurationUsCommandResult;
                                })();

                                /**
                                 * VideoEncodeFormat enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VideoEncodeFormat
                                 * @enum {number}
                                 * @property {number} VideoEncodeFormatInvalid=0 VideoEncodeFormatInvalid value
                                 * @property {number} VideoEncodeFormatH264=1 VideoEncodeFormatH264 value
                                 * @property {number} VideoEncodeFormatH265=2 VideoEncodeFormatH265 value
                                 */
                                proto.VideoEncodeFormat = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "VideoEncodeFormatInvalid"] = 0;
                                    values[valuesById[1] = "VideoEncodeFormatH264"] = 1;
                                    values[valuesById[2] = "VideoEncodeFormatH265"] = 2;
                                    return values;
                                })();

                                /**
                                 * AudioEncoding enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AudioEncoding
                                 * @enum {number}
                                 * @property {number} ENCODING_INVALID=0 ENCODING_INVALID value
                                 * @property {number} ENCODING_PCM_16BIT=1 ENCODING_PCM_16BIT value
                                 * @property {number} ENCODING_AAC=2 ENCODING_AAC value
                                 * @property {number} ENCODING_MP3=3 ENCODING_MP3 value
                                 */
                                proto.AudioEncoding = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "ENCODING_INVALID"] = 0;
                                    values[valuesById[1] = "ENCODING_PCM_16BIT"] = 1;
                                    values[valuesById[2] = "ENCODING_AAC"] = 2;
                                    values[valuesById[3] = "ENCODING_MP3"] = 3;
                                    return values;
                                })();

                                /**
                                 * AudioChannel enum.
                                 * @name com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AudioChannel
                                 * @enum {number}
                                 * @property {number} CHANNEL_INVALID=0 CHANNEL_INVALID value
                                 * @property {number} CHANNEL_IN_MONO=1 CHANNEL_IN_MONO value
                                 * @property {number} CHANNEL_IN_STEREO=2 CHANNEL_IN_STEREO value
                                 */
                                proto.AudioChannel = (function () {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "CHANNEL_INVALID"] = 0;
                                    values[valuesById[1] = "CHANNEL_IN_MONO"] = 1;
                                    values[valuesById[2] = "CHANNEL_IN_STEREO"] = 2;
                                    return values;
                                })();

                                proto.ExporterRunCommand = (function () {

                                    /**
                                     * Properties of an ExporterRunCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IExporterRunCommand
                                     * @property {string|null} [path] ExporterRunCommand path
                                     * @property {number|null} [width] ExporterRunCommand width
                                     * @property {number|null} [height] ExporterRunCommand height
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType|null} [scale] ExporterRunCommand scale
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VideoEncodeFormat|null} [format] ExporterRunCommand format
                                     * @property {number|Long|null} [videoBps] ExporterRunCommand videoBps
                                     * @property {number|null} [videoFps] ExporterRunCommand videoFps
                                     * @property {number|Long|null} [audioFrequency] ExporterRunCommand audioFrequency
                                     * @property {number|Long|null} [audioBps] ExporterRunCommand audioBps
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AudioEncoding|null} [audioEncoding] ExporterRunCommand audioEncoding
                                     * @property {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AudioChannel|null} [channel] ExporterRunCommand channel
                                     */

                                    /**
                                     * Constructs a new ExporterRunCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an ExporterRunCommand.
                                     * @implements IExporterRunCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommand=} [properties] Properties to set
                                     */
                                    function ExporterRunCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ExporterRunCommand path.
                                     * @member {string} path
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.path = "";

                                    /**
                                     * ExporterRunCommand width.
                                     * @member {number} width
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.width = 0;

                                    /**
                                     * ExporterRunCommand height.
                                     * @member {number} height
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.height = 0;

                                    /**
                                     * ExporterRunCommand scale.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType} scale
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.scale = 0;

                                    /**
                                     * ExporterRunCommand format.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VideoEncodeFormat} format
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.format = 0;

                                    /**
                                     * ExporterRunCommand videoBps.
                                     * @member {number|Long} videoBps
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.videoBps = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * ExporterRunCommand videoFps.
                                     * @member {number} videoFps
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.videoFps = 0;

                                    /**
                                     * ExporterRunCommand audioFrequency.
                                     * @member {number|Long} audioFrequency
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.audioFrequency = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * ExporterRunCommand audioBps.
                                     * @member {number|Long} audioBps
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.audioBps = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;

                                    /**
                                     * ExporterRunCommand audioEncoding.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AudioEncoding} audioEncoding
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.audioEncoding = 0;

                                    /**
                                     * ExporterRunCommand channel.
                                     * @member {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AudioChannel} channel
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     */
                                    ExporterRunCommand.prototype.channel = 0;

                                    /**
                                     * Creates a new ExporterRunCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand} ExporterRunCommand instance
                                     */
                                    ExporterRunCommand.create = function create(properties) {
                                        return new ExporterRunCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ExporterRunCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommand} message ExporterRunCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ExporterRunCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                                        if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.width);
                                        if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.height);
                                        if (message.scale != null && Object.hasOwnProperty.call(message, "scale"))
                                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.scale);
                                        if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.format);
                                        if (message.videoBps != null && Object.hasOwnProperty.call(message, "videoBps"))
                                            writer.uint32(/* id 6, wireType 0 =*/48).int64(message.videoBps);
                                        if (message.videoFps != null && Object.hasOwnProperty.call(message, "videoFps"))
                                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.videoFps);
                                        if (message.audioFrequency != null && Object.hasOwnProperty.call(message, "audioFrequency"))
                                            writer.uint32(/* id 8, wireType 0 =*/64).int64(message.audioFrequency);
                                        if (message.audioBps != null && Object.hasOwnProperty.call(message, "audioBps"))
                                            writer.uint32(/* id 9, wireType 0 =*/72).int64(message.audioBps);
                                        if (message.audioEncoding != null && Object.hasOwnProperty.call(message, "audioEncoding"))
                                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.audioEncoding);
                                        if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.channel);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ExporterRunCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommand} message ExporterRunCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ExporterRunCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an ExporterRunCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand} ExporterRunCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ExporterRunCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.path = reader.string();
                                                    break;
                                                case 2:
                                                    message.width = reader.int32();
                                                    break;
                                                case 3:
                                                    message.height = reader.int32();
                                                    break;
                                                case 4:
                                                    message.scale = reader.int32();
                                                    break;
                                                case 5:
                                                    message.format = reader.int32();
                                                    break;
                                                case 6:
                                                    message.videoBps = reader.int64();
                                                    break;
                                                case 7:
                                                    message.videoFps = reader.int32();
                                                    break;
                                                case 8:
                                                    message.audioFrequency = reader.int64();
                                                    break;
                                                case 9:
                                                    message.audioBps = reader.int64();
                                                    break;
                                                case 10:
                                                    message.audioEncoding = reader.int32();
                                                    break;
                                                case 11:
                                                    message.channel = reader.int32();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an ExporterRunCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand} ExporterRunCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ExporterRunCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an ExporterRunCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ExporterRunCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.path != null && message.hasOwnProperty("path"))
                                            if (!$util.isString(message.path))
                                                return "path: string expected";
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            if (!$util.isInteger(message.width))
                                                return "width: integer expected";
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            if (!$util.isInteger(message.height))
                                                return "height: integer expected";
                                        if (message.scale != null && message.hasOwnProperty("scale"))
                                            switch (message.scale) {
                                                default:
                                                    return "scale: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                case 5:
                                                case 6:
                                                case 7:
                                                    break;
                                            }
                                        if (message.format != null && message.hasOwnProperty("format"))
                                            switch (message.format) {
                                                default:
                                                    return "format: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                    break;
                                            }
                                        if (message.videoBps != null && message.hasOwnProperty("videoBps"))
                                            if (!$util.isInteger(message.videoBps) && !(message.videoBps && $util.isInteger(message.videoBps.low) && $util.isInteger(message.videoBps.high)))
                                                return "videoBps: integer|Long expected";
                                        if (message.videoFps != null && message.hasOwnProperty("videoFps"))
                                            if (!$util.isInteger(message.videoFps))
                                                return "videoFps: integer expected";
                                        if (message.audioFrequency != null && message.hasOwnProperty("audioFrequency"))
                                            if (!$util.isInteger(message.audioFrequency) && !(message.audioFrequency && $util.isInteger(message.audioFrequency.low) && $util.isInteger(message.audioFrequency.high)))
                                                return "audioFrequency: integer|Long expected";
                                        if (message.audioBps != null && message.hasOwnProperty("audioBps"))
                                            if (!$util.isInteger(message.audioBps) && !(message.audioBps && $util.isInteger(message.audioBps.low) && $util.isInteger(message.audioBps.high)))
                                                return "audioBps: integer|Long expected";
                                        if (message.audioEncoding != null && message.hasOwnProperty("audioEncoding"))
                                            switch (message.audioEncoding) {
                                                default:
                                                    return "audioEncoding: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                    break;
                                            }
                                        if (message.channel != null && message.hasOwnProperty("channel"))
                                            switch (message.channel) {
                                                default:
                                                    return "channel: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                    break;
                                            }
                                        return null;
                                    };

                                    /**
                                     * Creates an ExporterRunCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand} ExporterRunCommand
                                     */
                                    ExporterRunCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand();
                                        if (object.path != null)
                                            message.path = String(object.path);
                                        if (object.width != null)
                                            message.width = object.width | 0;
                                        if (object.height != null)
                                            message.height = object.height | 0;
                                        switch (object.scale) {
                                            case "Invalid":
                                            case 0:
                                                message.scale = 0;
                                                break;
                                            case "FixXY":
                                            case 1:
                                                message.scale = 1;
                                                break;
                                            case "CenterInside":
                                            case 2:
                                                message.scale = 2;
                                                break;
                                            case "CenterCrop":
                                            case 3:
                                                message.scale = 3;
                                                break;
                                            case "StartCrop":
                                            case 4:
                                                message.scale = 4;
                                                break;
                                            case "EndCrop":
                                            case 5:
                                                message.scale = 5;
                                                break;
                                            case "FitStart":
                                            case 6:
                                                message.scale = 6;
                                                break;
                                            case "FitEnd":
                                            case 7:
                                                message.scale = 7;
                                                break;
                                        }
                                        switch (object.format) {
                                            case "VideoEncodeFormatInvalid":
                                            case 0:
                                                message.format = 0;
                                                break;
                                            case "VideoEncodeFormatH264":
                                            case 1:
                                                message.format = 1;
                                                break;
                                            case "VideoEncodeFormatH265":
                                            case 2:
                                                message.format = 2;
                                                break;
                                        }
                                        if (object.videoBps != null)
                                            if ($util.Long)
                                                (message.videoBps = $util.Long.fromValue(object.videoBps)).unsigned = false;
                                            else if (typeof object.videoBps === "string")
                                                message.videoBps = parseInt(object.videoBps, 10);
                                            else if (typeof object.videoBps === "number")
                                                message.videoBps = object.videoBps;
                                            else if (typeof object.videoBps === "object")
                                                message.videoBps = new $util.LongBits(object.videoBps.low >>> 0, object.videoBps.high >>> 0).toNumber();
                                        if (object.videoFps != null)
                                            message.videoFps = object.videoFps | 0;
                                        if (object.audioFrequency != null)
                                            if ($util.Long)
                                                (message.audioFrequency = $util.Long.fromValue(object.audioFrequency)).unsigned = false;
                                            else if (typeof object.audioFrequency === "string")
                                                message.audioFrequency = parseInt(object.audioFrequency, 10);
                                            else if (typeof object.audioFrequency === "number")
                                                message.audioFrequency = object.audioFrequency;
                                            else if (typeof object.audioFrequency === "object")
                                                message.audioFrequency = new $util.LongBits(object.audioFrequency.low >>> 0, object.audioFrequency.high >>> 0).toNumber();
                                        if (object.audioBps != null)
                                            if ($util.Long)
                                                (message.audioBps = $util.Long.fromValue(object.audioBps)).unsigned = false;
                                            else if (typeof object.audioBps === "string")
                                                message.audioBps = parseInt(object.audioBps, 10);
                                            else if (typeof object.audioBps === "number")
                                                message.audioBps = object.audioBps;
                                            else if (typeof object.audioBps === "object")
                                                message.audioBps = new $util.LongBits(object.audioBps.low >>> 0, object.audioBps.high >>> 0).toNumber();
                                        switch (object.audioEncoding) {
                                            case "ENCODING_INVALID":
                                            case 0:
                                                message.audioEncoding = 0;
                                                break;
                                            case "ENCODING_PCM_16BIT":
                                            case 1:
                                                message.audioEncoding = 1;
                                                break;
                                            case "ENCODING_AAC":
                                            case 2:
                                                message.audioEncoding = 2;
                                                break;
                                            case "ENCODING_MP3":
                                            case 3:
                                                message.audioEncoding = 3;
                                                break;
                                        }
                                        switch (object.channel) {
                                            case "CHANNEL_INVALID":
                                            case 0:
                                                message.channel = 0;
                                                break;
                                            case "CHANNEL_IN_MONO":
                                            case 1:
                                                message.channel = 1;
                                                break;
                                            case "CHANNEL_IN_STEREO":
                                            case 2:
                                                message.channel = 2;
                                                break;
                                        }
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an ExporterRunCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand} message ExporterRunCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ExporterRunCommand.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.path = "";
                                            object.width = 0;
                                            object.height = 0;
                                            object.scale = options.enums === String ? "Invalid" : 0;
                                            object.format = options.enums === String ? "VideoEncodeFormatInvalid" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.videoBps = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.videoBps = options.longs === String ? "0" : 0;
                                            object.videoFps = 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.audioFrequency = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.audioFrequency = options.longs === String ? "0" : 0;
                                            if ($util.Long) {
                                                var long = new $util.Long(0, 0, false);
                                                object.audioBps = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                            } else
                                                object.audioBps = options.longs === String ? "0" : 0;
                                            object.audioEncoding = options.enums === String ? "ENCODING_INVALID" : 0;
                                            object.channel = options.enums === String ? "CHANNEL_INVALID" : 0;
                                        }
                                        if (message.path != null && message.hasOwnProperty("path"))
                                            object.path = message.path;
                                        if (message.width != null && message.hasOwnProperty("width"))
                                            object.width = message.width;
                                        if (message.height != null && message.hasOwnProperty("height"))
                                            object.height = message.height;
                                        if (message.scale != null && message.hasOwnProperty("scale"))
                                            object.scale = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ScaleType[message.scale] : message.scale;
                                        if (message.format != null && message.hasOwnProperty("format"))
                                            object.format = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.VideoEncodeFormat[message.format] : message.format;
                                        if (message.videoBps != null && message.hasOwnProperty("videoBps"))
                                            if (typeof message.videoBps === "number")
                                                object.videoBps = options.longs === String ? String(message.videoBps) : message.videoBps;
                                            else
                                                object.videoBps = options.longs === String ? $util.Long.prototype.toString.call(message.videoBps) : options.longs === Number ? new $util.LongBits(message.videoBps.low >>> 0, message.videoBps.high >>> 0).toNumber() : message.videoBps;
                                        if (message.videoFps != null && message.hasOwnProperty("videoFps"))
                                            object.videoFps = message.videoFps;
                                        if (message.audioFrequency != null && message.hasOwnProperty("audioFrequency"))
                                            if (typeof message.audioFrequency === "number")
                                                object.audioFrequency = options.longs === String ? String(message.audioFrequency) : message.audioFrequency;
                                            else
                                                object.audioFrequency = options.longs === String ? $util.Long.prototype.toString.call(message.audioFrequency) : options.longs === Number ? new $util.LongBits(message.audioFrequency.low >>> 0, message.audioFrequency.high >>> 0).toNumber() : message.audioFrequency;
                                        if (message.audioBps != null && message.hasOwnProperty("audioBps"))
                                            if (typeof message.audioBps === "number")
                                                object.audioBps = options.longs === String ? String(message.audioBps) : message.audioBps;
                                            else
                                                object.audioBps = options.longs === String ? $util.Long.prototype.toString.call(message.audioBps) : options.longs === Number ? new $util.LongBits(message.audioBps.low >>> 0, message.audioBps.high >>> 0).toNumber() : message.audioBps;
                                        if (message.audioEncoding != null && message.hasOwnProperty("audioEncoding"))
                                            object.audioEncoding = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AudioEncoding[message.audioEncoding] : message.audioEncoding;
                                        if (message.channel != null && message.hasOwnProperty("channel"))
                                            object.channel = options.enums === String ? $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.AudioChannel[message.channel] : message.channel;
                                        return object;
                                    };

                                    /**
                                     * Converts this ExporterRunCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ExporterRunCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ExporterRunCommand;
                                })();

                                proto.ExporterRunCommandResult = (function () {

                                    /**
                                     * Properties of an ExporterRunCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IExporterRunCommandResult
                                     * @property {number|null} [progress] ExporterRunCommandResult progress
                                     * @property {string|null} [resourceUrl] ExporterRunCommandResult resourceUrl
                                     */

                                    /**
                                     * Constructs a new ExporterRunCommandResult.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an ExporterRunCommandResult.
                                     * @implements IExporterRunCommandResult
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommandResult=} [properties] Properties to set
                                     */
                                    function ExporterRunCommandResult(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * ExporterRunCommandResult progress.
                                     * @member {number} progress
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @instance
                                     */
                                    ExporterRunCommandResult.prototype.progress = 0;

                                    /**
                                     * ExporterRunCommandResult resourceUrl.
                                     * @member {string} resourceUrl
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @instance
                                     */
                                    ExporterRunCommandResult.prototype.resourceUrl = "";

                                    /**
                                     * Creates a new ExporterRunCommandResult instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommandResult=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult} ExporterRunCommandResult instance
                                     */
                                    ExporterRunCommandResult.create = function create(properties) {
                                        return new ExporterRunCommandResult(properties);
                                    };

                                    /**
                                     * Encodes the specified ExporterRunCommandResult message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommandResult} message ExporterRunCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ExporterRunCommandResult.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.progress != null && Object.hasOwnProperty.call(message, "progress"))
                                            writer.uint32(/* id 1, wireType 5 =*/13).float(message.progress);
                                        if (message.resourceUrl != null && Object.hasOwnProperty.call(message, "resourceUrl"))
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceUrl);
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ExporterRunCommandResult message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterRunCommandResult} message ExporterRunCommandResult message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ExporterRunCommandResult.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an ExporterRunCommandResult message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult} ExporterRunCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ExporterRunCommandResult.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                case 1:
                                                    message.progress = reader.float();
                                                    break;
                                                case 2:
                                                    message.resourceUrl = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an ExporterRunCommandResult message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult} ExporterRunCommandResult
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ExporterRunCommandResult.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an ExporterRunCommandResult message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ExporterRunCommandResult.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.progress != null && message.hasOwnProperty("progress"))
                                            if (typeof message.progress !== "number")
                                                return "progress: number expected";
                                        if (message.resourceUrl != null && message.hasOwnProperty("resourceUrl"))
                                            if (!$util.isString(message.resourceUrl))
                                                return "resourceUrl: string expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an ExporterRunCommandResult message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult} ExporterRunCommandResult
                                     */
                                    ExporterRunCommandResult.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult)
                                            return object;
                                        var message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult();
                                        if (object.progress != null)
                                            message.progress = Number(object.progress);
                                        if (object.resourceUrl != null)
                                            message.resourceUrl = String(object.resourceUrl);
                                        return message;
                                    };

                                    /**
                                     * Creates a plain object from an ExporterRunCommandResult message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult} message ExporterRunCommandResult
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ExporterRunCommandResult.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.progress = 0;
                                            object.resourceUrl = "";
                                        }
                                        if (message.progress != null && message.hasOwnProperty("progress"))
                                            object.progress = options.json && !isFinite(message.progress) ? String(message.progress) : message.progress;
                                        if (message.resourceUrl != null && message.hasOwnProperty("resourceUrl"))
                                            object.resourceUrl = message.resourceUrl;
                                        return object;
                                    };

                                    /**
                                     * Converts this ExporterRunCommandResult to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterRunCommandResult
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ExporterRunCommandResult.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ExporterRunCommandResult;
                                })();

                                proto.ExporterCancelCommand = (function () {

                                    /**
                                     * Properties of an ExporterCancelCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @interface IExporterCancelCommand
                                     */

                                    /**
                                     * Constructs a new ExporterCancelCommand.
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto
                                     * @classdesc Represents an ExporterCancelCommand.
                                     * @implements IExporterCancelCommand
                                     * @constructor
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterCancelCommand=} [properties] Properties to set
                                     */
                                    function ExporterCancelCommand(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }

                                    /**
                                     * Creates a new ExporterCancelCommand instance using the specified properties.
                                     * @function create
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterCancelCommand=} [properties] Properties to set
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand} ExporterCancelCommand instance
                                     */
                                    ExporterCancelCommand.create = function create(properties) {
                                        return new ExporterCancelCommand(properties);
                                    };

                                    /**
                                     * Encodes the specified ExporterCancelCommand message. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand.verify|verify} messages.
                                     * @function encode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterCancelCommand} message ExporterCancelCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ExporterCancelCommand.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        return writer;
                                    };

                                    /**
                                     * Encodes the specified ExporterCancelCommand message, length delimited. Does not implicitly {@link com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.IExporterCancelCommand} message ExporterCancelCommand message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    ExporterCancelCommand.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };

                                    /**
                                     * Decodes an ExporterCancelCommand message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand} ExporterCancelCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ExporterCancelCommand.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                            }
                                        }
                                        return message;
                                    };

                                    /**
                                     * Decodes an ExporterCancelCommand message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand} ExporterCancelCommand
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    ExporterCancelCommand.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };

                                    /**
                                     * Verifies an ExporterCancelCommand message.
                                     * @function verify
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    ExporterCancelCommand.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        return null;
                                    };

                                    /**
                                     * Creates an ExporterCancelCommand message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand} ExporterCancelCommand
                                     */
                                    ExporterCancelCommand.fromObject = function fromObject(object) {
                                        if (object instanceof $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand)
                                            return object;
                                        return new $root.com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand();
                                    };

                                    /**
                                     * Creates a plain object from an ExporterCancelCommand message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand
                                     * @static
                                     * @param {com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand} message ExporterCancelCommand
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    ExporterCancelCommand.toObject = function toObject() {
                                        return {};
                                    };

                                    /**
                                     * Converts this ExporterCancelCommand to JSON.
                                     * @function toJSON
                                     * @memberof com.taobao.multimedia.biz.cloudediting.interfaces.dto.proto.ExporterCancelCommand
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    ExporterCancelCommand.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };

                                    return ExporterCancelCommand;
                                })();

                                return proto;
                            })();

                            return dto;
                        })();

                        return interfaces;
                    })();

                    return cloudediting;
                })();

                return biz;
            })();

            return multimedia;
        })();

        return taobao;
    })();

    return com;
})();

module.exports = $root;
